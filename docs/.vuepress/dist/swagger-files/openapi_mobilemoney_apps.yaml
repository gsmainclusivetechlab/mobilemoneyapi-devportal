openapi: 3.0.1
info:
  title: Developer Apps API for Mobile Money Portal
  description: This describes the Developer Apps API which would be called from Portal UI
  version: "1.0"
servers:
  - url: "https:/sanbox.mobilemoneyapi.io/portal/developers/v1"
    description: Apps API v1
paths:
  /apps:
    post:
      summary: "Creates an developer app"
      operationId: registerApps
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppRequest'
                  
      responses: 
        "201":
          description: "Created response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppResponse"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBasic"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBasic"
      security:
        - bearerAuth: []
    get:
      summary: "Get Developer apps"
      operationId: getDeveloperApps
      parameters:
      - name: developerId
        in: query
        description: "developer username or email id"
        required: false
        schema:
          type: string
                  
      responses: 
        "200":
          description: "Apps List Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppList"
        "400":
          description: "Bad Request. i.e. when there is no bank account number in the request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBasic"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBasic"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBasic"
      security:
        - bearerAuth: []
  /{developerId}/apps/{appId}:
    get:
      summary: "Get App By ID"
      operationId: getAppById
      parameters:
      - name: developerId
        in: path
        description: "the username of developer"
        required: true
        schema:
          type: string
      - name: appId
        in: path
        description: "app Id"
        required: true
        schema:
          type: string
                  
      responses: 
        "200":
          description: "App Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppResponse"
        "400":
          description: "Bad Request. i.e. when there is no bank account number in the request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBasic"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBasic"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBasic"
      security:
        - bearerAuth: []
    put:
      summary: "Update App By Id"
      operationId: updateAppById
      parameters:
      - name: developerId
        in: path
        description: "the username of developer"
        required: true
        schema:
          type: string
      - name: appId
        in: path
        description: "app Id"
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppRequest'
                  
      responses: 
        "200":
          description: "User Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppResponse"
        "400":
          description: "Bad Request. i.e. when there is no bank account number in the request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBasic"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBasic"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBasic"
      security:
        - bearerAuth: []
    delete:
      summary: "Delete App By Id"
      operationId: deleteApprById
      parameters:
      - name: developerId
        in: path
        description: "the username of developer"
        required: true
        schema:
          type: string
      - name: appId
        in: path
        description: "app Id"
        required: true
        schema:
          type: string
                  
      responses: 
        "204":
          description: "No Content"
        "400":
          description: "Bad Request. i.e. when there is no bank account number in the request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBasic"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBasic"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorBasic"
      security:
        - bearerAuth: []


 

components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
  schemas:

        
    # wrapper abstract object of error  
    ErrorBasic:
      title: Generic error
      description: Primary error object with minimum properties
      type: object
      properties:
        error:
          type: string
        error_description:
          type: string
    AppList:
      title: App list
      description: returns list of developers
      type: array
      items:
        type: object
        $ref: "#/components/schemas/AppResponse"
    AppResponse:
      title: app object
      description: app details
      type: object
      properties:
        appName:
          type: string
          description: name of name
        consumerKey:
          type: string
          description: consumer key
        consumerSecret:
          type: string
          description: consumer secret
        apiKey:
          type: string
          description: API key of the app
        usagePlan:
          type: string
          description: Usage Plan of the App
        keyIssued:
          type: string
          description: issue date of key
        expires:
          type: string
          description: expiry time of key

    AppRequest:
      title: app object
      description: app details
      type: object
      properties:
        appName:
          type: string
          description: name of name
        usagePlan:
          type: string
          description: usage Plan
        developerId:
          type: string
          description: Developer Id



          

