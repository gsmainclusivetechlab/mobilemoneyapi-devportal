(window.webpackJsonp=window.webpackJsonp||[]).push([[18,50,65,66],{393:function(e,t,n){"use strict";n.r(t);var i={name:"accordion",data:function(){return{isOpened:!1}}},a=n(24),r=Object(a.a)(i,(function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"accordion"},[t("div",{staticClass:"accordion-wrapper"},[this._t("default")],2)])}),[],!1,null,null,null);t.default=r.exports},394:function(e,t,n){"use strict";n.r(t);n(130);var i={name:"accordion-item",props:{expanded:{type:Boolean},businessPage:{type:Boolean}},data:function(){return{isOpened:!1,itemElement:null,itemElementHeig:"auto",timeout:null,showElement:!0}},created:function(){this.isOpened=!!this.expanded},mounted:function(){var e=this;this.itemElement=this.$el.getElementsByClassName("accordion__item-body-content")[0],this.detectItemHeigth(),window.addEventListener("resize",(function(){e.timeout&&clearTimeout(e.timeout),e.timeout=setTimeout((function(){e.detectItemHeigth()}),20)}))},methods:{openClose:function(){this.detectItemHeigth(),this.isOpened=!this.isOpened},detectItemHeigth:function(){this.itemElementHeig="auto",this.itemElementHeig="".concat(this.itemElement.offsetHeight,"px")}}},a=n(24),r=Object(a.a)(i,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{directives:[{name:"show",rawName:"v-show",value:!e.showElement||e.businessPage,expression:"!showElement || businessPage"}],staticClass:"accordion__item",class:{"accordion__item--active":e.isOpened}},[n("div",{staticClass:"accordion__item-wrapper"},[n("div",{staticClass:"accordion__item-header",on:{click:e.openClose}},[n("div",{staticClass:"title"},[e._t("header")],2),e._v(" "),n("svg",{staticClass:"arrow-icon",attrs:{width:"17",height:"11",viewBox:"0 0 17 11",fill:"none",xmlns:"http://www.w3.org/2000/svg"}},[n("path",{attrs:{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M1.42413 10.0384L8.19336 3.26916L14.9626 10.0384L16.1934 8.80762L9.42413 2.0384L8.19336 0.807629L6.96259 2.0384L0.193366 8.80762L1.42413 10.0384Z",fill:"#DE002B"}})])]),e._v(" "),n("div",{staticClass:"accordion__item-body",style:{height:e.isOpened?e.itemElementHeig:"0px"}},[n("div",{staticClass:"accordion__item-body-content"},[e._t("body")],2)])])])}),[],!1,null,null,null);t.default=r.exports},395:function(e,t,n){"use strict";n.r(t);var i={name:"TabSection"},a=n(24),r=Object(a.a)(i,(function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"use-case-tab tabs__item tabs__item--active"},[t("div",{staticClass:"tab-content"},[this._t("default")],2)])}),[],!1,null,null,null);t.default=r.exports},396:function(e,t,n){"use strict";t.a={created:function(){this.activeTabName=this.tabs.length?this.tabs[0]:"",this.tabLinks={"P2P Transfers":"/use-cases/p-2-p-transfers/","Merchant Payments":"/use-cases/merchant-payments/",Disbursements:"/use-cases/disbursements/","International Transfers":"/use-cases/international-transfers/","Recurring Payments":"/use-cases/recurring-payments/","Account Linking":"/use-cases/account-linking/","Bill Payments":"/use-cases/bill-payments/","Agent Services":"/use-cases/agent-services/"}},methods:{handleTabSwitch:function(e){this.activeTabName=e,this.$forceUpdate()},isActiveTab:function(e){return e===this.activeTabName},getActiveTab:function(){return this.tabLinks[this.activeTabName]}}}},513:function(e,t,n){"use strict";n.r(t);var i=n(397),a=n.n(i),r=(n(398),n(399),n(395)),o=n(393),s=n(394),c=n(396),v={components:{VueSlickCarousel:a.a,AccordionItem:s.default,Accordion:o.default,TabSection:r.default},data:function(){return{options:{dots:!0,arrows:!0,dotsClass:"testimonials__dots",infinite:!1,speed:500,slidesToShow:1},borderedLink:!1,accentLink:{text:"Start developing"},tabs:["P2P Transfers","International Transfers","Merchant Payments"],activeTabName:""}},mixins:[c.a]},d=n(24),h=Object(d.a)(v,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("IndustryHeroSection",{attrs:{imageSrc:"/images/paymentServiceProvidersAndPaymentAggregators.png",imageAlt:"image alt"},scopedSlots:e._u([{key:"description",fn:function(){return[n("p",[e._v("Providers of payment services such as aggregators and hub that act as mediators. They help connect organisations with many other organisations using a single connection point.")]),e._v(" "),n("p",[e._v("The GSMA API Specification can be used by payment  aggregators and hubs to speed up the integration time and simplify the complexity when working at large scale with multiple APIs.")])]},proxy:!0}])}),e._v(" "),[n("div",{staticClass:"use-cases-tabs-section tabs-section section--m-gap"},[n("div",{staticClass:"container container--narrow"},[n("div",{staticClass:"section-intro"},[n("h2",{attrs:{id:"use-cases"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#use-cases"}},[e._v("#")]),e._v(" Use cases")])]),e._v(" "),n("div",{staticClass:"tabs-buttons"},e._l(e.tabs,(function(t,i){return n("button",{key:"tab-button-"+i,staticClass:"btn btn-bordered",class:{"btn--accent":e.isActiveTab(t),"btn--inactive":!e.isActiveTab(t)},attrs:{type:"button"},on:{click:function(n){return e.handleTabSwitch(t)}}},[e._v("\n          "+e._s(t)+"\n        ")])})),0),e._v(" "),n("div",{staticClass:"tabs-holder"},[e.isActiveTab("P2P Transfers")?n("TabSection",{key:"1"},[[n("h2",{attrs:{id:"introduction"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),n("p",[e._v("The P2P Transfer Mobile Money APIs allow financial service providers (FSPs) to transfer funds from an account holding individual to another account holding individual or to a non-account holding individual (known as an unregistered customer). The API supports a wide number of financial service providers including mobile money providers, banks, and micro-finance institutions. The API supports ‘on-us’ P2P transfers (both accounts held within one FSP) and ‘off-us’ P2P transfers (accounts held in different FSPs). Bilateral and Switch-based transfers can be supported.")]),e._v(" "),n("p",[e._v("For further reading, please refer to the following:")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("Getting Started")]),e._v(". Specifies the design principles, behaviours, and error handling of the Mobile Money API.")]),e._v(" "),n("li",[n("strong",[e._v("API Service Definition")]),e._v(". Documents all Mobile Money API endpoints, fields, objects, and enumerations.")])]),e._v(" "),n("p",[e._v("All documentation can be found on the "),n("RouterLink",{attrs:{to:"/api-versions-1.2/"}},[e._v("GSMA Mobile Money API Developer Portal")]),e._v(".")],1)],e._v(" "),[n("h3",{staticClass:"h3"},[e._v("Use case scenarios")]),e._v(" "),n("accordion",[n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\n                P2P Transfer via Switch\n              ")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this diagram, a switch is used by the sending FSP to (1) confirm the recipient name, (2) request a quotation and and to (3) perform the transfer with the receiving FSP. A callback is provided by the receiving FSP to return confirmation of the transfer.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Sending FSP\n    participant Switch\n    participant Receiving FSP\n    Sending FSP->>Switch: GET /accounts/{identifierType}/{identifier}/accountname\n    activate Sending FSP\n    activate Switch\n    activate Receiving FSP\n    Note right of Switch: (1) The Sending FSP retrieves the name of the intended recipient from the Receiving FSP via the Switch.\n    Switch->>Receiving FSP: GET /accounts/{identifierType}/{identifier}/accountname\n    Receiving FSP--\x3e>Switch: HTTP 200 (Account Holder Name Object)\n    Switch--\x3e>Sending FSP: HTTP 200 (Account Holder Name Object)\n    deactivate Sending FSP\n    deactivate Switch\n    deactivate Receiving FSP\n    Sending FSP->>Switch: POST /quotations\n    activate Sending FSP\n    activate Switch\n    activate Receiving FSP\n    Note right of Switch: (2) Subject to sender confirmation of the name returned in step 1, the Sending FSP submits a quotation"),n("br"),e._v("request to the Switch. The Switch will return the Request State object to indicate that the request"),n("br"),e._v("is 'pending'.\n    Switch->>Receiving FSP: POST /quotations\n    Note right of Receiving FSP: (3) The Swith in turn submits the quotation request to the Receiving FSP."),n("br"),e._v("The Receiving FSP will return the Request State object to indicate"),n("br"),e._v("that the request is 'pending'.\n    Receiving FSP--\x3e>Switch: HTTP 200 (Request State Object)\n    Switch--\x3e>Sending FSP: HTTP 200 (Request State  Object)\n    deactivate Sending FSP\n    deactivate Switch\n    Receiving FSP->>Switch: PUT {Callback URL} (Quotations Object)\n    activate Switch\n    activate Sending FSP\n    Note right of Receiving FSP: (4) The FSP informs the Switch that the quotation has been successfully"),n("br"),e._v("created by returning the final representation of the quotation.\n    Switch--\x3e>Receiving FSP: HTTP 204\n    deactivate Receiving FSP\n    Switch->>Sending FSP: PUT {Callback URL} (Quotations Object)\n    Note right of Switch: (5) The Swith in turn informs the Sending FSP that the transaction has succesfully complteted"),n("br"),e._v("by returning the final representation of the transaction.\n    Sending FSP--\x3e>Switch: HTTP 204\n    deactivate Switch\n    deactivate Sending FSP\n    Sending FSP->>Switch: POST /transactions/type/transfer\n    activate Switch\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Switch: (6) Subject to sender confirmation, the Sending FSP submits a transfer request to the Swith. The Switch"),n("br"),e._v("will return the Request State object to indicate that the request is 'pending'.\n    Switch->>Receiving FSP: POST /transactions/type/transfer\n    Note right of Receiving FSP: (7) The Switch in turn submits the transaction request to the"),n("br"),e._v("Receiving FSP. The Receiving FSP will return the Request State object"),n("br"),e._v("to indicate that the request is 'pending'.\n    Receiving FSP--\x3e>Switch: HTTP 202 (Request State Object)\n    Switch--\x3e>Sending FSP: HTTP 202 (Request State Object)\n    deactivate Switch\n    deactivate Sending FSP\n    Receiving FSP->>Switch: PUT {Callback URL} (Transactions Object)\n    activate Switch\n    activate Sending FSP\n    Note right of Receiving FSP: (8) The FSP informs the Switch that the transaction has been "),n("br"),e._v(" successfully completed by returning the final representation of the"),n("br"),e._v("transaction.\n    Switch--\x3e>Receiving FSP: HTTP 204\n    deactivate Receiving FSP\n    Switch->>Sending FSP: PUT {Callback URL} (Transactions Object)\n    Note right of Switch: (9) The Swith in turn informs the Sending FSP that the transaction has been successfully completed"),n("br"),e._v("by returning the final representation of the transaction.\n    Sending FSP--\x3e>Switch: HTTP 204\n    deactivate Switch\n    deactivate Sending FSP\n")])]},proxy:!0}],null,!1,2239233433)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\n                Bilateral P2P Transfer\n              ")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this diagram, the sending FSP connects directly with the receiving FSP to confirm the recipient name and to perform the transfer. A callback is provided by the receiving FSP to return confirmation of the transfer. In this example, a quotation is not requested.")]),e._v(" "),n("Mermaid",[e._v("\n                  sequenceDiagram\n                  participant Sending FSP\n                  participant Receiving FSP\n                  Sending FSP->>Receiving FSP: GET /accounts/{identifierType}/{identifier}/accountname\n                  activate Sending FSP\n                  activate Receiving FSP\n                  Note right of Receiving FSP: (1) The Sending FSP retrieves the name of the intended recipient from the Receiving FSP.\n                  Receiving FSP--\x3e>Sending FSP: HTTP 200 (Account Holder Name Object)\n                  deactivate Receiving FSP\n                  Sending FSP->>Receiving FSP: POST /transactions/type/transfer\n                  activate Receiving FSP\n                  Note right of Receiving FSP: (2) Subject to sender confirmation, the Sending FSP submits a transfer request. "),n("br"),e._v('The Receiving FSP will return the Request State object to indicate that the request is "pending".\n                  Receiving FSP--\x3e>Sending FSP: HTTP 202 (Request State Object)\n                  deactivate Sending FSP\n                  deactivate Receiving FSP\n                  Receiving FSP->>Sending FSP: PUT {Callback URL} (Transaction Object)\n                  activate Sending FSP\n                  activate Receiving FSP\n                  Note right of Receiving FSP: (3) The FSP in turn informs the Sending FSP that the transation has been succesfully completed'),n("br"),e._v("by returning the final representation of the transaction.\n                  Sending FSP--\x3e>Receiving FSP: HTTP 204\n                  deactivate Sending FSP\n                  deactivate Receiving FSP\n                ")])]},proxy:!0}],null,!1,2957631820)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\n                ‘On-us’ P2P Transfer Initiated by a Third Party Provider\n              ")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this diagram, A third party provider enables a sender to transfer money to a recipient in the same FSP. The third party provider (1) confirms the recipient name, (2) requests a quotation and (3) performs the transfer with the FSP. A callback is provided by the FSP to return confirmation of the transfer.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n    participant Third Party Provider\n    participant FSP\n    Third Party Provider->>FSP: GET /accounts/{identifierType}/{identifier}/accountname\n    activate Third Party Provider\n    activate FSP\n    Note right of FSP: (1) The Third Party Provider retrieves the name of the"),n("br"),e._v("intended recipient from the FSP.\n    FSP--\x3e>Third Party Provider: HTTP 200 (Account Holder Name Object)\n    deactivate Third Party Provider\n    deactivate FSP\n    Third Party Provider->>FSP: POST /quotations\n    activate Third Party Provider\n    activate FSP\n    Note right of FSP: (2) Subject to sender confirmation, the Third Party Provider"),n("br"),e._v("submits a quotation request. The FSP will return the"),n("br"),e._v("Request State object to indicate that the request is"),n("br"),e._v("'pending'.\n    Third Party Provider--\x3e>FSP: HTTP 202 (Request State Object)\n    deactivate Third Party Provider\n    deactivate FSP\n    FSP->>Third Party Provider: PUT {Callback URL} (Quotations Object)\n    activate Third Party Provider\n    activate FSP\n    Note right of FSP: (3) The FSP in turn informs the Third Party Provider that"),n("br"),e._v("the quotation has been successfully completed by"),n("br"),e._v("returning the final representation of the quotation.\n    Third Party Provider--\x3e>FSP: HTTP 204\n    deactivate Third Party Provider\n    deactivate FSP\n    Third Party Provider->>FSP: POST /transactions/type/transfer\n    activate Third Party Provider\n    activate FSP\n    Note right of FSP: (4) Subject to sender confirmation, the Third Party Provider"),n("br"),e._v("submits a transfer request. The FSP will return the"),n("br"),e._v("Request State object to indicate that the request is"),n("br"),e._v("'pending'.\n    Third Party Provider--\x3e>FSP: HTTP 202 (Request State Object)\n    deactivate Third Party Provider\n    deactivate FSP\n    FSP->>Third Party Provider: PUT {Callback URL} (Transactions Object)\n    activate Third Party Provider\n    activate FSP\n    Note right of FSP: (5) The FSP in turn informs the Third Party Provider that"),n("br"),e._v("the transaction has been successfully completed by"),n("br"),e._v("returning the final representation of the transaction.\n    Third Party Provider--\x3e>FSP: HTTP 204\n    deactivate Third Party Provider\n    deactivate FSP\n")])]},proxy:!0}],null,!1,1513324969)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\n                P2P Transfer Failure\n              ")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In some failure scenarios, a transfer may need to be reversed. This diagram illustrates an reversal with the final result communicated via the callback.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n    participant Sending FSP\n    participant Receiving FSP\n    Sending FSP->>Receiving FSP: GET /accounts/{identifierType}/{identifier}/accountname\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (1) The Sending FSP retrieves the name of the"),n("br"),e._v("intended recipient from the Receiving FSP.\n    Receiving FSP--\x3e>Sending FSP: HTTP 200 (Account Holder Name Object)\n    deactivate Receiving FSP\n    Sending FSP->>Receiving FSP: POST /transactions/type/transfer\n    activate Receiving FSP\n    Note right of Receiving FSP: (2) Subject to sender confirmation, the Sending FSP"),n("br"),e._v("submits a transfer request. The Receiving FSP will"),n("br"),e._v("return the Request State object to indicate that the"),n("br"),e._v('request is "pending".\n    Receiving FSP--\x3e>Sending FSP: HTTP 202 (Request State Object)\n    deactivate Sending FSP\n    deactivate Receiving FSP\n    Receiving FSP->>Sending FSP: PUT {Callback URL} (Error Object)\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (3) The FSP in turn informs the Sending FSP that the'),n("br"),e._v("transation has been failed by returning an Error"),n("br"),e._v("object containing the reason for failure. \n    Sending FSP--\x3e>Receiving FSP: HTTP 204\n    deactivate Sending FSP\n    deactivate Receiving FSP\n")])]},proxy:!0}],null,!1,153161452)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\n                P2P Transfer Reversal\n              ")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In some failure scenarios, a transfer may need to be reversed. This diagram illustrates an reversal with the final result communicated via the callback.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n    participant Sending FSP\n    participant Receiving FSP\n    Sending FSP->>Receiving FSP: POST /transactions/{original transaction reference}/reversals\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (1) The Sending FSP submits the reversal request for"),n("br"),e._v("processing to the Receiving FSP - passing the reference of"),n("br"),e._v("the transaction that is to bve reversed. The Receiving FSP"),n("br"),e._v("will return the Request State object to indicate the the"),n("br"),e._v('request is "pending".\n    Receiving FSP--\x3e>Sending FSP: HTTP 202 (Request State Object)\n    Receiving FSP->>Sending FSP: PUT {Callback URL} (Reversal Object)\n    Note right of Receiving FSP: (2) The Receiving FSP informs the Sending FSP'),n("br"),e._v("that the reversal has been successully"),n("br"),e._v("completed by returning the final representation"),n("br"),e._v("of the reversal transaction.\n    Sending FSP--\x3e>Receiving FSP: HTTP 204\n    deactivate Sending FSP\n    deactivate Receiving FSP\n")])]},proxy:!0}],null,!1,1538787316)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\n                Obtain an FSP Balance\n              ")]},proxy:!0},{key:"body",fn:function(){return[n("mermaid",[e._v("\n  sequenceDiagram\n    participant Requesting FSP\n    participant FSP\n    Requesting FSP->>FSP: GET /accounts/{identifierType}/{identifier}/balance\n    activate Requesting FSP\n    activate FSP\n    Note right of FSP: (1) Obtain the balance of the"),n("br"),e._v("Requesting FSP's account.\n    FSP--\x3e>Requesting FSP: HTTP 200 (Balance Object)\n    deactivate Requesting FSP\n    deactivate FSP\n")])]},proxy:!0}],null,!1,4117859411)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\n                Retrieve Transactions for an FSP\n              ")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This diagram illustrates use of a cursor mechanism to retrieve all transactions for a sending requesting FSP via multiple requests.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n    participant Requesting FSP\n    participant FSP\n    Requesting FSP->>FSP: GET /accounts/{identifierType}/{identifier}/transactions?offset=0&limit=20\n    activate Requesting FSP\n    activate FSP\n    Note right of FSP: (1) The Requesting FSP requests up to"),n("br"),e._v("20 transactions for their account"),n("br"),e._v("from the FSP.\n    FSP--\x3e>Requesting FSP: HTTP 200 (Transactions Array) (X-Records-Available-Count=40)\n    Note right of FSP: (2) The FSP returns an array of 20"),n("br"),e._v("transactions and indicates via a"),n("br"),e._v("response header that there are 40"),n("br"),e._v("records available in total.\n    Requesting FSP->>FSP: GET /accounts/{identifierType}/{identifier}/transactions?offset=20&limit=20\n    Note right of FSP: (3) The Requesting FSP requests the"),n("br"),e._v("remaining transactions from the"),n("br"),e._v("account from the Receiving FSP.\n    FSP--\x3e>Requesting FSP: HTTP 200 (Transactions Array) (X-Records-Available-Count=40)\n    deactivate Requesting FSP\n    deactivate FSP\n")])]},proxy:!0}],null,!1,3435797641)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\n                Check for Service Availability\n              ")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("The Heartbeat API is used for monitoring purposes and establishes whether the FSP is in a state that enables a client to submit a request for processing.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n    participant Requesting FSP\n    participant FSP\n    Requesting FSP->>FSP: GET /heartbeat\n    activate Requesting FSP\n    activate FSP\n    Note right of FSP: (1) The Requesting FSP requests the"),n("br"),e._v("availability of the service from the FSP.\n    FSP--\x3e>Requesting FSP: HTTP 200 (Heartbeat Object)\n    Note right of FSP: (2) The FSP returns the availability of"),n("br"),e._v("the service - available, unavailable"),n("br"),e._v("or degraded.\n    deactivate Requesting FSP\n    deactivate FSP\n")])]},proxy:!0}],null,!1,3870883620)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\n                Retrieve a Missing API Response\n              ")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This API can be used by the sending FSP to retrieve a link to the final representation of the resource for which it attempted to create. Use this API when a callback is not received from the receiving FSP.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n    participant Sending FSP\n    participant Receiving FSP\n    Sending FSP->>Receiving FSP: GET /responses{clientCorrelationId}\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (1) Using the Sending FSP's"),n("br"),e._v("clientCorrelationId, a request for the"),n("br"),e._v("missing API response is sent.\n    Sending FSP--\x3e>Receiving FSP: HTTP 200 (Responses Object)\n    Note right of Receiving FSP: (2) A Responses object is returned"),n("br"),e._v("containing a link to the missing"),n("br"),e._v("resource.\n    Sending FSP->>Receiving FSP: GET /{link}\n    Note right of Receiving FSP: (3) The Sending FSP uses the link to"),n("br"),e._v("obtain a representation of the missing"),n("br"),e._v("resource.\n    Receiving FSP--\x3e>Sending FSP: HTTP 200 (Requested Object)\n    deactivate Receiving FSP\n    deactivate Sending FSP\n")])]},proxy:!0}],null,!1,369639659)})],1)],e._v(" "),n("router-link",{staticClass:"btn btn--transparent btn--tab-link",attrs:{to:"/use-cases/p-2-p-transfers/"}},[e._v("Start developing")])],2):e._e(),e._v(" "),e.isActiveTab("International Transfers")?n("TabSection",{key:"2"},[[n("h2",{attrs:{id:"introduction-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#introduction-2"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),n("p",[e._v("The International Transfer Mobile Money APIs allow financial service providers to perform cross-border mobile money transfers, including remittances.")]),e._v(" "),n("p",[e._v("For further reading, please refer to the following:")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("Getting Started.")]),e._v(" Specifies the design principles, behaviours, and error handling of the Mobile Money API.")]),e._v(" "),n("li",[n("strong",[e._v("API Service Definition.")]),e._v(" Documents all Mobile Money API endpoints, fields, objects, and enumerations.")])]),e._v(" "),n("p",[e._v("All documentation can be found on the "),n("RouterLink",{attrs:{to:"/api-versions-1.2/"}},[e._v("GSMA Mobile Money API Developer Portal")]),e._v(".")],1),e._v(" "),n("h2",{attrs:{id:"intended-audience"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#intended-audience"}},[e._v("#")]),e._v(" Intended Audience")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Audience")])]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Usage")])]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Role")])])])]),e._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("FSP - Mobile Money Providers")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("- To understand how to implement the Mobile Money API to receive International transfers from other FSPs.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Provider")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}}),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("- To understand how to implement the Mobile Money API to send international transfers to other FSPs.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Consumer")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("FSP – International Remittance Organisations")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("- To understand how to implement the Mobile Money API to receive international remittances from Mobile Money Providers.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Provider")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}}),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("- To understand how to implement the Mobile Money API to send international remittances to Mobile Money Providers.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Consumer")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("International Transfer Hubs")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("- To understand how to implement the Mobile Money APIs to receive international transfers from FSPs.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Provider")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}}),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("- To understand how to implement the Mobile Money APIs to send international transfers to FSPs.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Consumer")])])])])],e._v(" "),[n("h3",{staticClass:"h3"},[e._v("Use case scenarios")]),e._v(" "),n("accordion",[n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nInternational Transfer via Hub\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this diagram, a hub is used by the sending FSP to obtain a quotation and perform the transfer with the receiving FSP. A callback is provided by the receiving FSP to return the quotation and the confirmation of the transfer.")]),e._v(" "),n("p",[e._v("This flow can also be used for bilateral international transfers.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n      participant Sending FSP\n      participant International Transfer Hub\n      participant Receiving FSP   \n      Sending FSP->>International Transfer Hub: POST /quotations\n      activate Sending FSP\n      activate International Transfer Hub\n      activate Receiving FSP\n      Note right of International Transfer Hub: (1) The Sending FSP submits a quotation request to"),n("br"),e._v("the International Remittance Hub. The Hub will return the"),n("br"),e._v("Request State object to indicate that the request"),n("br"),e._v("is 'pending'.\n      International Transfer Hub--\x3e>Sending FSP: HTTP 202 (Request State  Object)      \n      deactivate Sending FSP    \n      International Transfer Hub->>Sending FSP: PUT {Callback URL} (Quotations Object)\n      activate Sending FSP\n      Note right of International Transfer Hub: (2) The Hub returns the quotation to the Sending FSP.\n      Sending FSP--\x3e>International Transfer Hub: HTTP 204     \n      deactivate International Transfer Hub\n      deactivate Sending FSP      \n      Sending FSP->>International Transfer Hub: POST /transactions/type/inttransfer\n      activate International Transfer Hub\n      activate Sending FSP\n      activate Receiving FSP\n      Note right of International Transfer Hub: (3) Subject to sender confirmation, the Sending FSP submits a transaction"),n("br"),e._v("request to the International Remittance Hub. The Hub will return the"),n("br"),e._v("Request State object to indicate that the request is 'pending'.\n      International Transfer Hub->>Receiving FSP: POST /transactions/type/inttransfer\n      Note right of Receiving FSP: (4) The Hub in turn submits the transaction request to the"),n("br"),e._v("Receiving FSP. The Receiving FSP will return the"),n("br"),e._v("Request State object to indicate that the request is"),n("br"),e._v("'pending'.\n      Receiving FSP--\x3e>International Transfer Hub: HTTP 202 (Request State Object)\n      International Transfer Hub--\x3e>Sending FSP: HTTP 202 (Request State Object)    \n      deactivate International Transfer Hub\n      deactivate Sending FSP     \n      Receiving FSP->>International Transfer Hub: PUT {Callback URL} (Transactions Object)\n      activate International Transfer Hub\n      activate Sending FSP\n      Note right of Receiving FSP: (5) The FSP informs the Hub that the transaction"),n("br"),e._v("has been successfully completed by returning"),n("br"),e._v("the final representation of the transaction.\n      International Transfer Hub--\x3e>Receiving FSP: HTTP 204\n      deactivate Receiving FSP\n      International Transfer Hub->>Sending FSP: PUT {Callback URL} (Transactions Object)\n      Note right of International Transfer Hub: (6) The Hub in turn informs the Sending FSP that the"),n("br"),e._v("transaction has been successfully completed"),n("br"),e._v("by returning the final representation of the transaction.\n      Sending FSP--\x3e>International Transfer Hub: HTTP 204      \n      deactivate International Transfer Hub\n      deactivate Sending FSP\n")])]},proxy:!0}],null,!1,10769895)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nBilateral International Transfer\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this diagram, the sending FSP connects directly with the receiving FSP to obtain a quotation and to perform the transfer. A callback is provided by the receiving FSP to return confirmation of the transfer.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Sending FSP\n    participant Receiving FSP\n    Sending FSP->>Receiving FSP: POST /quotations\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (1) The Sending FSP submits a quotation request to the"),n("br"),e._v("Receiving FSP. The Receiving FSP will return the Request"),n("br"),e._v("State object to indicate that the request is 'pending'.\n    Receiving FSP--\x3e>Sending FSP: HTTP 202 (Request State  Object)\n    deactivate Sending FSP  \n    Receiving FSP->>Sending FSP: PUT {Callback URL} (Quotations Object)\n    activate Sending FSP\n    Note right of Receiving FSP: (2) The Receiving FSP returns the quotation to the Sending"),n("br"),e._v("FSP.\n    Sending FSP--\x3e>Receiving FSP: HTTP 204\n    deactivate Sending FSP\n    deactivate Receiving FSP   \n    Sending FSP->>Receiving FSP: POST /transactions/type/inttransfer\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (3) Subject to sender confirmation, the Sending FSP submits a transaction"),n("br"),e._v("request to the Receiving FSP. The Receiving FSP will return the Request"),n("br"),e._v("State object to indicate that the request is 'pending'.\n    Receiving FSP--\x3e>Sending FSP: HTTP 202 (Request State Object)\n    deactivate Sending FSP\n    deactivate Receiving FSP   \n    Receiving FSP->>Sending FSP: PUT {Callback URL} (Transactions Object)\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (4) The FSP in turn informs the Sending FSP that the"),n("br"),e._v("transation has been successfully completed by"),n("br"),e._v("returning the final representation of the transaction. \n    Sending FSP--\x3e>Receiving FSP: HTTP 204  \n    deactivate Sending FSP\n    deactivate Receiving FSP\n")])]},proxy:!0}],null,!1,2647509598)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nInternational Transfer Failure\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("The failure of a transfer is reflected by the return of an error object in the callback from the receiving FSP. The same pattern would also apply to a quotation failure.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Sending FSP\n    participant Receiving FSP\n    Sending FSP->>Receiving FSP: POST /quotations\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (1) The Sending FSP submits a quotation request to the"),n("br"),e._v("Receiving FSP. The Receiving FSP will return the Request"),n("br"),e._v("State object to indicate that the request is 'pending'.\n    Receiving FSP--\x3e>Sending FSP: HTTP 202 (Request State  Object)\n    deactivate Sending FSP\n    Receiving FSP->>Sending FSP: PUT {Callback URL} (Quotations Object)\n    activate Sending FSP\n    Note right of Receiving FSP: (2) The Receiving FSP returns the quotation to the Sending"),n("br"),e._v("FSP.\n    Sending FSP--\x3e>Receiving FSP: HTTP 204\n    deactivate Sending FSP\n    deactivate Receiving FSP\n    Sending FSP->>Receiving FSP: POST /transactions/type/inttransfer\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (3) Subject to sender confirmation, the Sending FSP submits a transaction"),n("br"),e._v("request to the Receiving FSP. The Receiving FSP will return the Request"),n("br"),e._v("State object to indicate that the request is 'pending'.\n    Receiving FSP--\x3e>Sending FSP: HTTP 202 (Request State Object)\n    deactivate Sending FSP\n    deactivate Receiving FSP   \n    Receiving FSP->>Sending FSP: PUT {Callback URL} (Error Object)\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (4) The FSP in turn informs the Sending FSP that the"),n("br"),e._v("transation has been failed by returning an Error"),n("br"),e._v("object containing the reason for failure. \n    Sending FSP--\x3e>Receiving FSP: HTTP 204   \n    deactivate Sending FSP\n    deactivate Receiving FSP\n")])]},proxy:!0}],null,!1,2424724551)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nInternational Transfer Reversal\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In some failure scenarios, a transfer may need to be reversed. This diagram illustrates an reversal with the final result communicated via the callback.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Sending FSP\n    participant Receiving FSP  \n    Sending FSP->>Receiving FSP: POST /transactions/{original transaction reference}/reversals\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (1) The Sending FSP submits the reversal request for"),n("br"),e._v("processing to the Receiving FSP - passing the reference of"),n("br"),e._v("the transaction that is to be reversed. The Receiving FSP"),n("br"),e._v("will return the Request State object to indicate the the"),n("br"),e._v('request is "pending".\n    Receiving FSP--\x3e>Sending FSP: HTTP 202 (Request State Object)\n    Receiving FSP->>Sending FSP: PUT {Callback URL} (Reversal Object)\n    Note right of Receiving FSP: (2) The Receiving FSP informs the Sending FSP'),n("br"),e._v("that the reversal has been successully"),n("br"),e._v("completed by returning the final representation"),n("br"),e._v("of the reversal transaction.\n    Sending FSP--\x3e>Receiving FSP: HTTP 204  \n    deactivate Sending FSP\n    deactivate Receiving FSP\n")])]},proxy:!0}],null,!1,4121793258)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nObtain an FSP Balance\n")]},proxy:!0},{key:"body",fn:function(){return[n("mermaid",[e._v("\nsequenceDiagram\n    participant Sending FSP\n    participant Receiving FSP  \n    Sending FSP->>Receiving FSP: GET /accounts/{identifierType}/{identifier}/balance\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (1) Obtain the balance of the"),n("br"),e._v("Receiving FSP's account with"),n("br"),e._v("the Sending FSP.\n    Receiving FSP--\x3e>Sending FSP: HTTP 200 (Balance Object)\n    deactivate Sending FSP\n    deactivate Receiving FSP\n")])]},proxy:!0}],null,!1,609232806)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRetrieve Transactions for an FSP\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This diagram illustrates use of a cursor mechanism to retrieve all transactions for a sending FSP via multiple requests.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Sending FSP\n    participant Receiving FSP  \n    Sending FSP->>Receiving FSP: GET /accounts/{identifierType}/{identifier}/transactions?offset=0&limit=20\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (1) The Sending FSP requests up to 20"),n("br"),e._v("transactions for their account from"),n("br"),e._v("the Receiving FSP.\n    Receiving FSP--\x3e>Sending FSP: HTTP 200 (Transactions Array) (X-Records-Available-Count=40)\n    Note right of Receiving FSP: (2) The Receiving FSP returns an array"),n("br"),e._v("of 20 transactions and indicates via a"),n("br"),e._v("response header that there are 40"),n("br"),e._v("records available in total.   \n    Sending FSP->>Receiving FSP: GET /accounts/{identifierType}/{identifier}/transactions?offset=20&limit=20\n    Note right of Receiving FSP: (3) The Sending FSP requests the"),n("br"),e._v("remaining transactions from the"),n("br"),e._v("account from the Receiving FSP.\n    Receiving FSP--\x3e>Sending FSP: HTTP 200 (Transactions Array) (X-Records-Available-Count=40)   \n    deactivate Sending FSP\n    deactivate Receiving FSP\n")])]},proxy:!0}],null,!1,3376898965)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nCheck for Service Availability\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("The Heartbeat API is used for monitoring purposes and establishes whether the FSP is in a state that enables a client to submit a request for processing.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Sending FSP\n    participant Receiving FSP \n    Sending FSP->>Receiving FSP: GET /heartbeat\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (1) The Sending FSP requests the"),n("br"),e._v("availability of the service from the"),n("br"),e._v("Receiving FSP.\n    Receiving FSP--\x3e>Sending FSP: HTTP 200 (Heartbeat Object)\n    Note right of Receiving FSP: (2) The Receiving FSP returns the"),n("br"),e._v("availability of the service - available,"),n("br"),e._v("unavailable or degraded.   \n    deactivate Sending FSP\n    deactivate Receiving FSP\n")])]},proxy:!0}],null,!1,3884588911)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRetrieve a Missing API Response\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This API can be used by the sending FSP to retrieve a link to the final representation of the resource for which it attempted to create. Use this API when a callback is not received from the receiving FSP.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Sending FSP\n    participant Receiving FSP  \n    Sending FSP->>Receiving FSP: GET /responses{clientCorrelationId}\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (1) Using the Sending FSP's"),n("br"),e._v("clientCorrelationId, a request for the"),n("br"),e._v("missing API response is sent.\n    Receiving FSP--\x3e>Sending FSP: HTTP 200 (Responses Object)\n    Note right of Receiving FSP: (2) A Responses object is returned"),n("br"),e._v("containing a link to the missing"),n("br"),e._v("resource.  \n    Sending FSP->>Receiving FSP: GET /{link}\n    Note right of Receiving FSP: (3) The Sending FSP uses the link to"),n("br"),e._v("obtain a representation of the missing"),n("br"),e._v("resource.\n    Receiving FSP--\x3e>Sending FSP: HTTP 200 (Requested Object)   \n    deactivate Receiving FSP\n    deactivate Sending FSP\n")])]},proxy:!0}],null,!1,1232582315)})],1)],e._v(" "),n("router-link",{staticClass:"btn btn--transparent btn--tab-link",attrs:{to:"/use-cases/international-transfers/"}},[e._v("Start developing")])],2):e._e(),e._v(" "),e.isActiveTab("Merchant Payments")?n("TabSection",{key:"3"},[[n("h2",{attrs:{id:"introduction-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#introduction-3"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),n("p",[e._v("The Merchant Payment Mobile Money APIs allow merchants to accept payments from mobile money customers. Supported payment mechanisms include:")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("Payee-initiated merchant payment.")]),e._v(" The merchant initiates the payment and the payer is requested to authenticate to confirm acceptance by the mobile money provider.")]),e._v(" "),n("li",[n("strong",[e._v("Payer-initiated merchant payment.")]),e._v(" The payer initiates the payment by specifying the merchant that is to be paid.")]),e._v(" "),n("li",[n("strong",[e._v("Merchant payment via pre-authorised payment code.")]),e._v(" The payer generates a payment authorisation code up to a maximum payment amount. The merchant then enters or scans (if rendered as a QR code) the payer’s code to perform the payment.")])]),e._v(" "),n("p",[e._v("Closed loop and open-loop merchant payments are supported by the Mobile Money API. Closed loop merchant payments occur where the payer and payee accounts reside with the same mobile money provider. Open loop payments occur where the payer and payee accounts reside with different mobile money providers.\nFor further reading, please refer to the following:")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("Getting Started.")]),e._v(" Specifies the design principles, behaviours, and error handling of the Mobile Money API.")]),e._v(" "),n("li",[n("strong",[e._v("API Service Definition.")]),e._v(" Documents all Mobile Money API endpoints, fields, objects, and enumerations.")])]),e._v(" "),n("p",[e._v("All documentation can be found on the "),n("RouterLink",{attrs:{to:"/api-versions-1.2/"}},[e._v("GSMA Mobile Money API Developer Portal")]),e._v(".")],1),e._v(" "),n("h2",{attrs:{id:"intended-audience-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#intended-audience-2"}},[e._v("#")]),e._v(" Intended Audience")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Audience")])]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Usage")])]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Role")])])])]),e._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Mobile Money Providers")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("To understand how to implement the Mobile Money API to receive payments from merchants.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Provider")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Merchants")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("To understand how to implement the Mobile Money API to accept mobile money payments.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Consumer")])])])])],e._v(" "),[n("h3",{staticClass:"h3"},[e._v("Use case scenarios")]),e._v(" "),n("accordion",[n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nPayee-Initiated Merchant Payment\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this example, an asynchronous payment flow is used with a final callback. The merchant initiates the request and will be credited when the payer approves the request.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n    participant Merchant\n    participant Mobile Money Provider \n    participant Payer  \n    Merchant->>Mobile Money Provider: POST /transactions/type/merchantpay\n    activate Merchant\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The Merchant submits the payment request for processing "),n("br"),e._v(" to the MMP. The MMP will return the Request State object "),n("br"),e._v(" to indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Merchant: HTTP 202 (Request State Object)\n    deactivate Merchant\n    Mobile Money Provider->>Payer: Obtain Customer Authorisation\n    activate Payer\n    Note right of Payer: (2) The Payer is requested to the MMP to "),n("br"),e._v(" authorise the payment. This can be "),n("br"),e._v(" achieved through a number of means "),n("br"),e._v(" including USSD Push and One Time Code. "),n("br"),e._v(" OpenId can also be used for Payer authorisation.\n    Payer--\x3e>Mobile Money Provider: (Authorised)\n    deactivate Payer\n    activate Merchant\n    Mobile Money Provider->>Merchant: PUT {Callback URL} (Transactions Object)\n    Note right of Mobile Money Provider: (3) The MMP informs the Merchant that the "),n("br"),e._v(" transaction has been successfully completed "),n("br"),e._v(" by returning the final representation of the "),n("br"),e._v(" transaction.\n    Merchant--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Merchant\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,1845378966)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nPayee-Initiated Merchant Payment Failure\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this example, an asynchronous payment flow is used with a final callback that contains the reason for failure.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Merchant\n    participant Mobile Money Provider \n    participant Payer  \n    Merchant->>Mobile Money Provider: POST /transactions/type/merchantpay\n    activate Merchant\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The Merchant submits the payment request for processing "),n("br"),e._v(" to the MMP. The MMP will return the Request State object "),n("br"),e._v(" to indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Merchant: HTTP 202 (Request State Object)\n    deactivate Merchant\n    Mobile Money Provider->>Payer: Obtain Customer Authorisation\n    activate Payer\n    Note right of Payer: (2) The Payer is requested to the MMP to "),n("br"),e._v(" authorise the payment. This can be "),n("br"),e._v(" achieved through a number of means "),n("br"),e._v(" including USSD Push and One Time Code. "),n("br"),e._v(" OpenId can also be used for Payer authorisation.\n    Payer--\x3e>Mobile Money Provider: (Authorised)\n    deactivate Payer\n    activate Merchant\n    Mobile Money Provider->>Merchant: PUT {Callback URL} (Transactions Object)\n    Note right of Mobile Money Provider: (3) The MMP informs the Merchant that the "),n("br"),e._v(" transaction has been successfully completed "),n("br"),e._v(" by returning the final representation of the "),n("br"),e._v(" transaction.\n    Merchant--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Merchant\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,3658394599)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nPayee-Initiated Merchant Payment using the Polling Method\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this example, an asynchronous payment flow is used with the polling method. The client polls against the request state object to determine the outcome of the payment request.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Merchant\n    participant Mobile Money Provider \n    participant Payer\n    Merchant->>Mobile Money Provider: POST /transactions/type/merchantpay\n    activate Merchant\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The Merchant submits the payment request for processing "),n("br"),e._v(" to the MMP. The MMP will return the Request State object "),n("br"),e._v(" to indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Merchant: HTTP 202 (Request State Object)\n    deactivate Merchant      \n    par\n        loop \n            activate Merchant\n            Merchant->>Mobile Money Provider: GET /requeststates/{serverCorrelationId}\n            Note right of Mobile Money Provider: (2) The Merchant polls the MMP for the Request State until the "),n("br"),e._v(" transaction is authorised or declined or until the polling limit "),n("br"),e._v(" is reached.\n            Mobile Money Provider--\x3e>Merchant: HTTP 200 (Request State Object)\n        end\n    and\n        Mobile Money Provider->>Payer: Obtain Customer Authorisation\n        activate Payer\n        Note right of Payer: (3) The Payer is requested to the MMP to "),n("br"),e._v(" authorise the payment. This can be "),n("br"),e._v(" achieved through a number of means "),n("br"),e._v(" including USSD Push and One Time Code. "),n("br"),e._v(" OpenId can also be used for Payer "),n("br"),e._v(" authorisation.\n        Payer--\x3e>Mobile Money Provider: (Authorised)\n    end\n    deactivate Merchant\n    deactivate Payer\n    deactivate Mobile Money Provider\n    opt\n        activate Mobile Money Provider\n        activate Merchant\n        Merchant->>Mobile Money Provider: GET /transactions/transactionsReference\n        Note right of Mobile Money Provider: (4) The Merchant can use the objectReference returned in the "),n("br"),e._v(" Request State to retrieve a representation of the complete "),n("br"),e._v(" payment transaction.\n        Mobile Money Provider--\x3e>Merchant: HTTP 200 (Transactions Object)\n    end    \n    deactivate Merchant\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,1349603230)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nPayer-Initiated Merchant Payment\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this example, an asynchronous payment flow is used with a final callback. The payer initiates the request and will be debited upon successful completion of the request.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Payer  \n    participant Mobile Money Provider  \n    participant Merchant\n    Payer->>Mobile Money Provider: POST /transactions/type/merchantpay\n    activate Payer\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The Payer's channel (e.g. Mobile Money App) submits the"),n("br"),e._v("payment request for processing to the MMP. The MMP will"),n("br"),e._v("return the Request State object to indicate that the request"),n("br"),e._v("is 'pending'.\n    Mobile Money Provider--\x3e>Payer: HTTP 202 (Request State Object)\n    deactivate Payer   \n    Mobile Money Provider->>Payer: PUT {Callback URL} (transactions Object)\n    activate Payer\n    Note right of Mobile Money Provider: (2) The MMP informs the Payer's channel that the"),n("br"),e._v("payment has been successfully completed"),n("br"),e._v("by returning the final representation of the"),n("br"),e._v("transaction.\n    Payer--\x3e>Mobile Money Provider: HTTP 204  \n    deactivate Payer\n    activate Merchant\n    Mobile Money Provider->>Merchant: Notify\n    Note right of Merchant: (3) The MMP notifies the merchant tha the"),n("br"),e._v("payment has successfully compeleted.\n    deactivate Mobile Money Provider\n    deactivate Merchant\n")])]},proxy:!0}],null,!1,3739384430)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nPayer-Initiated Merchant Payment Failure\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this example, an asynchronous payment flow is used with a final callback that contains the reason for failure.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Payer  \n    participant Mobile Money Provider  \n    participant Merchant\n    Payer->>Mobile Money Provider: POST /transactions/type/merchantpay\n    activate Payer\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The Payer's channel (e.g. Mobile Money App) submits the"),n("br"),e._v("payment request for processing to the MMP. The MMP will"),n("br"),e._v("return the Request State object to indicate that the request"),n("br"),e._v("is 'pending'.\n    Mobile Money Provider--\x3e>Payer: HTTP 202 (Request State Object)\n    deactivate Payer  \n    Mobile Money Provider->>Payer: PUT {Callback URL} (Error Object)\n    activate Payer\n    Note right of Mobile Money Provider: (2) The MMP informs the Payer's channel that the"),n("br"),e._v("payment has been failed and returns the error"),n("br"),e._v("object detailing the reason for failure.\n    Payer--\x3e>Mobile Money Provider: HTTP 204   \n    deactivate Payer\n    activate Merchant\n    Mobile Money Provider->>Merchant: Notify\n    Note right of Merchant: (3) The MMP notifies the merchant tha the"),n("br"),e._v("payment has failed.\n    deactivate Mobile Money Provider\n    deactivate Merchant\n")])]},proxy:!0}],null,!1,3013475341)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nPayee-Initiated Merchant Payment using a Pre-authorised Payment Code\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this example the /authorisationcodes API is used to obtain a pre-authorised payment code. This in turn is presented by the payer to the merchant who initiates the payment request. Both flows in the diagram result in a callback. This flow is primarily used for payment on delivery use cases.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Payer  \n    participant Merchant\n    participant Mobile Money Provider    \n    Payer->>Mobile Money Provider: POST /accounts/{identifierType}/{identifier}/authorisationcodes\n    activate Payer\n    activate Mobile Money Provider \n    Note right of Mobile Money Provider: (1) The Payer's channel (e.g. Mobile Money App) submits"),n("br"),e._v("the request to generate an authorisation code to the"),n("br"),e._v("MMP. The MMP will return the Request State object to"),n("br"),e._v("indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Payer: HTTP 202 (Request State Object)\n    Mobile Money Provider->>Payer: PUT {Callback URL} (Authorisation Code Object)\n    Note right of Mobile Money Provider: (2) The MMP informs the Payer's channel that the"),n("br"),e._v("request has been successfully completed by"),n("br"),e._v("returing the final representation of the"),n("br"),e._v("authorisation code.\n    Payer--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Payer\n    deactivate Mobile Money Provider    \n    Note right of Payer: (3) The Payer communicates the code to the merchant. This"),n("br"),e._v("can be via QR code or by verbally communicating the code. \n    Payer->>Merchant: Communicates Code Verbally or via QR Presentment\n    activate Payer\n    activate Merchant\n    activate Mobile Money Provider \n    Merchant->>Mobile Money Provider: POST /transactions/type/merchantpay\n    Note right of Mobile Money Provider: (4) The Merchant submits the payment request for"),n("br"),e._v("processing to the MMP. The request will contain the"),n("br"),e._v("authorisation code. The MMP will return the Request"),n("br"),e._v("State object to indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Merchant: HTTP 202 (Request State Object)\n    deactivate Merchant\n    Mobile Money Provider->>Merchant: PUT {Callback URL} (Transactions Object)\n    activate Merchant\n    Note right of Mobile Money Provider: (5) The MMP informs the Merchant that the"),n("br"),e._v("transaction has been successfully completed by"),n("br"),e._v("returning the final representation of the"),n("br"),e._v("transaction.\n    Merchant--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Payer\n    deactivate Merchant\n    deactivate Mobile Money Provider \n")])]},proxy:!0}],null,!1,273542686)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nMerchant Payment Refund\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("Merchants can issue a refund to payers. In this diagram, the refund is not linked to the original transaction and hence the /transactions API is used. Where a refund needs to be linked to the original transaction, the /reversals API must be used to perform the refund.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Merchant\n    participant Mobile Money Provider \n    Merchant->>Mobile Money Provider: POST /transactions/type/adjustment\n    activate Merchant\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The Merchant submits the refund request for processing to"),n("br"),e._v("the MMP. The MMP will return the Request State object to"),n("br"),e._v("indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Merchant: HTTP 202 (Request State Object)\n    Mobile Money Provider->>Merchant: PUT {Callback URL} (Transactions Object)\n    Note right of Mobile Money Provider: (2) The MMP informs the Merchant that the"),n("br"),e._v("refund has been successfully completed by"),n("br"),e._v("returning the final representation of the refund.\n    Merchant--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Merchant\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,1114204120)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nMerchant Payment Reversal\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In some failure scenarios, a merchant may need to reverse a transaction. This diagram illustrates a reversal with the final result communicated via the callback.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Merchant\n    participant Mobile Money Provider \n    Merchant->>Mobile Money Provider: POST /transactions/{original transaction reference}/reversals\n    activate Merchant\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The Merchant submits the reversal request for processing"),n("br"),e._v("to the MMP - passing the reference of the transaction that"),n("br"),e._v("is to be reversed. The MMP will return the Request State"),n("br"),e._v("object to indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Merchant: HTTP 202 (Request State Object)\n    Mobile Money Provider->>Merchant: PUT {Callback URL} (Reversal Object)\n    Note right of Mobile Money Provider: (2) The MMP informs the Merchant that the"),n("br"),e._v("reversal has been successfully completed by"),n("br"),e._v("returning the final representation of the"),n("br"),e._v("reversal transaction.\n    Merchant--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Merchant\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,2079265539)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nObtain a Merchant Balance\n")]},proxy:!0},{key:"body",fn:function(){return[n("mermaid",[e._v("\nsequenceDiagram\n    participant Merchant\n    participant Mobile Money Provider \n    Merchant->>Mobile Money Provider: GET /accounts/{identifierType}/{identifier}/balance\n    activate Merchant\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) Obtain the balance of the"),n("br"),e._v("requested account.\n    Mobile Money Provider--\x3e>Merchant: HTTP 200 (Balance Object)\n    deactivate Merchant\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,2279714108)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRetrieve Payments for a Merchant\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This diagram illustrates use of a cursor mechanism to retrieve all payments for a merchant via multiple requests.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Merchant\n    participant Mobile Money Provider \n    Merchant->>Mobile Money Provider: GET /accounts/{identifierType}/{identifier}/transactions?offset=0&limit=20\n    activate Merchant\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The Merchant requests up to"),n("br"),e._v("20 transactions for the"),n("br"),e._v("account from the MMP.\n    Mobile Money Provider--\x3e>Merchant: HTTP 200 (Transactions Array) (X-Records-Available-Count=40)\n    Note right of Mobile Money Provider: (2) The MMP returns an array of"),n("br"),e._v("20 transactions and indicates"),n("br"),e._v("via a response header that"),n("br"),e._v("there are 40 records"),n("br"),e._v("available in total.    \n    Merchant->>Mobile Money Provider: GET /accounts/{identifierType}/{identifier}/transactions?offset=20&limit=20\n    Note right of Mobile Money Provider: (3) The Merchant requests the"),n("br"),e._v("remaining transactions for"),n("br"),e._v("the account from the MMP.\n    Mobile Money Provider--\x3e>Merchant: HTTP 200 (Transactions Array) (X-Records-Available-Count=40)\n    deactivate Merchant\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,1290181500)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nCheck for Service Availability\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("The Heartbeat API is used for monitoring purposes and establishes whether the mobile money provider is in a state that enables a client to submit a request for processing.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Merchant\n    participant Mobile Money Provider \n    Merchant->>Mobile Money Provider: GET /heartbeat\n    activate Merchant\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The Merchant requests the availability"),n("br"),e._v("of the service from the MMP.\n    Mobile Money Provider--\x3e>Merchant: HTTP 200 (Heartbeat Object)\n    Note right of Mobile Money Provider: (2) The MMP returns the availability of"),n("br"),e._v("the service - available, unavailable"),n("br"),e._v("or degraded.\n    deactivate Merchant\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,3745387524)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRetrieve a Missing API Response\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This API can be used by the merchant to retrieve a link to the final representation of the resource for which it attempted to create. Use this API when a callback is not received from the mobile money provider.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Merchant\n    participant Mobile Money Provider \n    Merchant->>Mobile Money Provider: GET /responses{clientCorrelationId}\n    activate Merchant\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) Using the Merchant's"),n("br"),e._v("clientCorrelationId, a request for the"),n("br"),e._v("missing API response is sent.\n    Mobile Money Provider--\x3e>Merchant: HTTP 200 (Responses Object) \n    Note right of Mobile Money Provider: (2) A Responses object is returned"),n("br"),e._v("containing a link to the missing"),n("br"),e._v("resource.  \n    Merchant->>Mobile Money Provider: GET /{link}\n    Note right of Mobile Money Provider: (3) The Merchant uses the link to obtain"),n("br"),e._v("a representation of the missing"),n("br"),e._v("resource.\n    Mobile Money Provider--\x3e>Merchant: HTTP 200 (Requested Object)\n    deactivate Merchant\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,1991659217)})],1)],e._v(" "),n("router-link",{staticClass:"btn btn--transparent btn--tab-link",attrs:{to:"/use-cases/merchant-payments/"}},[e._v("Start developing")])],2):e._e()],1)])])],e._v(" "),[n("section",{staticClass:"testimonials-section section--m-gap"},[n("div",{staticClass:"container container--narrow"},[n("div",{staticClass:"section-intro section-intro--one-column"},[n("h2",{attrs:{id:"testimonials"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#testimonials"}},[e._v("#")]),e._v(" Testimonials")])]),e._v(" "),n("div",{staticClass:"testimonials__slider-wrapper"},[n("testimonials-slide",{attrs:{mediaType:"image/svg+xml",imageLink:"/images/payment_service_providers_aggregators.svg"},scopedSlots:e._u([{key:"description",fn:function(){return[e._v("\nAs a payment service provider that is directly integrated with over 35 MNO partners, we understand the importance of Standardised APIs to save time on development work, resources and keeping integrations up to date.\n")]},proxy:!0},{key:"company",fn:function(){return[e._v("Cellulant")]},proxy:!0},{key:"organisation",fn:function(){return[e._v("Payment Service Provider")]},proxy:!0},{key:"links",fn:function(){return[n("p",[n("router-link",{attrs:{to:"/use-cases/merchant-payments/"}},[e._v("Merchant Payments")])],1),e._v(" "),n("p",[n("router-link",{attrs:{to:"/use-cases/international-transfers/"}},[e._v("International Transfers")])],1),e._v(" "),n("p",[n("router-link",{attrs:{to:"/use-cases/p-2-p-transfers/"}},[e._v("P2P transfers")])],1)]},proxy:!0}])})],1)])])],e._v(" "),[n("section",{staticClass:"get-started-section section--p-gap"},[n("div",{staticClass:"container container--narrow"},[n("div",{staticClass:"section-intro section-intro--narrow text-center"},[n("h2",{attrs:{id:"ready-to-explore"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ready-to-explore"}},[e._v("#")]),e._v(" Ready to explore?")]),e._v(" "),n("div",{staticClass:"section-description"},[e._v("Find our latest API documentation.\n        ")])]),e._v(" "),n("div",{staticClass:"buttons-holder content-center get-started__btn-holder"},[e.borderedLink?n("router-link",{staticClass:"btn",attrs:{to:e.borderedLink.link}},[e._v(" "+e._s(e.borderedLink.text)+"\n        ")]):e._e(),e._v(" "),e.accentLink?n("router-link",{staticClass:"btn btn--accent",attrs:{to:e.getActiveTab()}},[e._v(" "+e._s(e.accentLink.text)+"\n        ")]):e._e()],1)])])]],2)}),[],!1,null,null,null);t.default=h.exports}}]);