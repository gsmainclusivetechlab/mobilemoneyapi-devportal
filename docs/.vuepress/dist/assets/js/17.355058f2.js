(window.webpackJsonp=window.webpackJsonp||[]).push([[17,50,65,66],{393:function(e,t,n){"use strict";n.r(t);var i={name:"accordion",data:function(){return{isOpened:!1}}},r=n(24),a=Object(r.a)(i,(function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"accordion"},[t("div",{staticClass:"accordion-wrapper"},[this._t("default")],2)])}),[],!1,null,null,null);t.default=a.exports},394:function(e,t,n){"use strict";n.r(t);n(130);var i={name:"accordion-item",props:{expanded:{type:Boolean},businessPage:{type:Boolean}},data:function(){return{isOpened:!1,itemElement:null,itemElementHeig:"auto",timeout:null,showElement:!0}},created:function(){this.isOpened=!!this.expanded},mounted:function(){var e=this;this.itemElement=this.$el.getElementsByClassName("accordion__item-body-content")[0],this.detectItemHeigth(),window.addEventListener("resize",(function(){e.timeout&&clearTimeout(e.timeout),e.timeout=setTimeout((function(){e.detectItemHeigth()}),20)}))},methods:{openClose:function(){this.detectItemHeigth(),this.isOpened=!this.isOpened},detectItemHeigth:function(){this.itemElementHeig="auto",this.itemElementHeig="".concat(this.itemElement.offsetHeight,"px")}}},r=n(24),a=Object(r.a)(i,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{directives:[{name:"show",rawName:"v-show",value:!e.showElement||e.businessPage,expression:"!showElement || businessPage"}],staticClass:"accordion__item",class:{"accordion__item--active":e.isOpened}},[n("div",{staticClass:"accordion__item-wrapper"},[n("div",{staticClass:"accordion__item-header",on:{click:e.openClose}},[n("div",{staticClass:"title"},[e._t("header")],2),e._v(" "),n("svg",{staticClass:"arrow-icon",attrs:{width:"17",height:"11",viewBox:"0 0 17 11",fill:"none",xmlns:"http://www.w3.org/2000/svg"}},[n("path",{attrs:{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M1.42413 10.0384L8.19336 3.26916L14.9626 10.0384L16.1934 8.80762L9.42413 2.0384L8.19336 0.807629L6.96259 2.0384L0.193366 8.80762L1.42413 10.0384Z",fill:"#DE002B"}})])]),e._v(" "),n("div",{staticClass:"accordion__item-body",style:{height:e.isOpened?e.itemElementHeig:"0px"}},[n("div",{staticClass:"accordion__item-body-content"},[e._t("body")],2)])])])}),[],!1,null,null,null);t.default=a.exports},395:function(e,t,n){"use strict";n.r(t);var i={name:"TabSection"},r=n(24),a=Object(r.a)(i,(function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"use-case-tab tabs__item tabs__item--active"},[t("div",{staticClass:"tab-content"},[this._t("default")],2)])}),[],!1,null,null,null);t.default=a.exports},396:function(e,t,n){"use strict";t.a={created:function(){this.activeTabName=this.tabs.length?this.tabs[0]:""},methods:{handleTabSwitch:function(e){this.activeTabName=e,this.$forceUpdate()},isActiveTab:function(e){return e===this.activeTabName}}}},511:function(e,t,n){"use strict";n.r(t);var i=n(397),r=n.n(i),a=(n(398),n(399),n(395)),o=n(393),s=n(394),c=n(396),v={components:{VueSlickCarousel:r.a,AccordionItem:s.default,Accordion:o.default,TabSection:a.default},data:function(){return{options:{dots:!0,arrows:!0,dotsClass:"testimonials__dots",infinite:!1,speed:500,slidesToShow:1},borderedLink:!1,accentLink:{text:"Start developing",link:"/examples"},tabs:["P2P Transfers","Merchant Payments","Disbursements","International Transfers","Recurring Payments","Account Linking","Bill Payments","Agent Services"],activeTabName:""}},mixins:[c.a]},d=n(24),l=Object(d.a)(v,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("IndustryHeroSection",{attrs:{imageSrc:"/images/mobileMoneyProviders.png",imageAlt:"image alt"},scopedSlots:e._u([{key:"description",fn:function(){return[n("p",[e._v("Mobile Money providers are companies that operate an electronic wallet which allows users to send, receive and store money using their mobile phone.")]),e._v(" "),n("p",[e._v("Mobile Money providers can use the GSMA API specification to simplify the integration process and to connect with many third party service providers at scale enabling further revenue streams.")])]},proxy:!0}])}),e._v(" "),[n("div",{staticClass:"use-cases-tabs-section tabs-section section--m-gap"},[n("div",{staticClass:"container container--narrow"},[n("div",{staticClass:"section-intro"},[n("h2",{attrs:{id:"use-cases"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#use-cases"}},[e._v("#")]),e._v(" Use cases")])]),e._v(" "),n("div",{staticClass:"tabs-buttons"},e._l(e.tabs,(function(t,i){return n("button",{key:"tab-button-"+i,staticClass:"btn btn-bordered",class:{"btn--accent":e.isActiveTab(t),"btn--inactive":!e.isActiveTab(t)},attrs:{type:"button"},on:{click:function(n){return e.handleTabSwitch(t)}}},[e._v("\n          "+e._s(t)+"\n        ")])})),0),e._v(" "),n("div",{staticClass:"tabs-holder"},[e.isActiveTab("P2P Transfers")?n("TabSection",{key:"1"},[[n("h2",{attrs:{id:"introduction"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),n("p",[e._v("The P2P Transfer Mobile Money APIs allow financial service providers (FSPs) to transfer funds from an account holding individual to another account holding individual or to a non-account holding individual (known as an unregistered customer). The API supports a wide number of financial service providers including mobile money providers, banks, and micro-finance institutions. The API supports ‘on-us’ P2P transfers (both accounts held within one FSP) and ‘off-us’ P2P transfers (accounts held in different FSPs). Bilateral and Switch-based transfers can be supported.")]),e._v(" "),n("p",[e._v("For further reading, please refer to the following:")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("Getting Started")]),e._v(". Specifies the design principles, behaviours, and error handling of the Mobile Money API.")]),e._v(" "),n("li",[n("strong",[e._v("API Service Definition")]),e._v(". Documents all Mobile Money API endpoints, fields, objects, and enumerations.")])]),e._v(" "),n("p",[e._v("All documentation can be found on the "),n("RouterLink",{attrs:{to:"/api-versions-1.2/"}},[e._v("GSMA Mobile Money API Developer Portal")]),e._v(".")],1)],e._v(" "),[n("h3",{staticClass:"h3"},[e._v("Use case scenarios")]),e._v(" "),n("accordion",[n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\n                P2P Transfer via Switch\n              ")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this diagram, a switch is used by the sending FSP to (1) confirm the recipient name, (2) request a quotation and and to (3) perform the transfer with the receiving FSP. A callback is provided by the receiving FSP to return confirmation of the transfer.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Sending FSP\n    participant Switch\n    participant Receiving FSP\n    Sending FSP->>Switch: GET /accounts/{identifierType}/{identifier}/accountname\n    activate Sending FSP\n    activate Switch\n    activate Receiving FSP\n    Note right of Switch: (1) The Sending FSP retrieves the name of the intended recipient from the Receiving FSP via the Switch.\n    Switch->>Receiving FSP: GET /accounts/{identifierType}/{identifier}/accountname\n    Receiving FSP--\x3e>Switch: HTTP 200 (Account Holder Name Object)\n    Switch--\x3e>Sending FSP: HTTP 200 (Account Holder Name Object)\n    deactivate Sending FSP\n    deactivate Switch\n    deactivate Receiving FSP\n    Sending FSP->>Switch: POST /quotations\n    activate Sending FSP\n    activate Switch\n    activate Receiving FSP\n    Note right of Switch: (2) Subject to sender confirmation of the name returned in step 1, the Sending FSP submits a quotation"),n("br"),e._v("request to the Switch. The Switch will return the Request State object to indicate that the request"),n("br"),e._v("is 'pending'.\n    Switch->>Receiving FSP: POST /quotations\n    Note right of Receiving FSP: (3) The Swith in turn submits the quotation request to the Receiving FSP."),n("br"),e._v("The Receiving FSP will return the Request State object to indicate"),n("br"),e._v("that the request is 'pending'.\n    Receiving FSP--\x3e>Switch: HTTP 200 (Request State Object)\n    Switch--\x3e>Sending FSP: HTTP 200 (Request State  Object)\n    deactivate Sending FSP\n    deactivate Switch\n    Receiving FSP->>Switch: PUT {Callback URL} (Quotations Object)\n    activate Switch\n    activate Sending FSP\n    Note right of Receiving FSP: (4) The FSP informs the Switch that the quotation has been successfully"),n("br"),e._v("created by returning the final representation of the quotation.\n    Switch--\x3e>Receiving FSP: HTTP 204\n    deactivate Receiving FSP\n    Switch->>Sending FSP: PUT {Callback URL} (Quotations Object)\n    Note right of Switch: (5) The Swith in turn informs the Sending FSP that the transaction has succesfully complteted"),n("br"),e._v("by returning the final representation of the transaction.\n    Sending FSP--\x3e>Switch: HTTP 204\n    deactivate Switch\n    deactivate Sending FSP\n    Sending FSP->>Switch: POST /transactions/type/transfer\n    activate Switch\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Switch: (6) Subject to sender confirmation, the Sending FSP submits a transfer request to the Swith. The Switch"),n("br"),e._v("will return the Request State object to indicate that the request is 'pending'.\n    Switch->>Receiving FSP: POST /transactions/type/transfer\n    Note right of Receiving FSP: (7) The Switch in turn submits the transaction request to the"),n("br"),e._v("Receiving FSP. The Receiving FSP will return the Request State object"),n("br"),e._v("to indicate that the request is 'pending'.\n    Receiving FSP--\x3e>Switch: HTTP 202 (Request State Object)\n    Switch--\x3e>Sending FSP: HTTP 202 (Request State Object)\n    deactivate Switch\n    deactivate Sending FSP\n    Receiving FSP->>Switch: PUT {Callback URL} (Transactions Object)\n    activate Switch\n    activate Sending FSP\n    Note right of Receiving FSP: (8) The FSP informs the Switch that the transaction has been "),n("br"),e._v(" successfully completed by returning the final representation of the"),n("br"),e._v("transaction.\n    Switch--\x3e>Receiving FSP: HTTP 204\n    deactivate Receiving FSP\n    Switch->>Sending FSP: PUT {Callback URL} (Transactions Object)\n    Note right of Switch: (9) The Swith in turn informs the Sending FSP that the transaction has been successfully completed"),n("br"),e._v("by returning the final representation of the transaction.\n    Sending FSP--\x3e>Switch: HTTP 204\n    deactivate Switch\n    deactivate Sending FSP\n")])]},proxy:!0}],null,!1,2239233433)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\n                Bilateral P2P Transfer\n              ")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this diagram, the sending FSP connects directly with the receiving FSP to confirm the recipient name and to perform the transfer. A callback is provided by the receiving FSP to return confirmation of the transfer. In this example, a quotation is not requested.")]),e._v(" "),n("Mermaid",[e._v("\n                  sequenceDiagram\n                  participant Sending FSP\n                  participant Receiving FSP\n                  Sending FSP->>Receiving FSP: GET /accounts/{identifierType}/{identifier}/accountname\n                  activate Sending FSP\n                  activate Receiving FSP\n                  Note right of Receiving FSP: (1) The Sending FSP retrieves the name of the intended recipient from the Receiving FSP.\n                  Receiving FSP--\x3e>Sending FSP: HTTP 200 (Account Holder Name Object)\n                  deactivate Receiving FSP\n                  Sending FSP->>Receiving FSP: POST /transactions/type/transfer\n                  activate Receiving FSP\n                  Note right of Receiving FSP: (2) Subject to sender confirmation, the Sending FSP submits a transfer request. "),n("br"),e._v('The Receiving FSP will return the Request State object to indicate that the request is "pending".\n                  Receiving FSP--\x3e>Sending FSP: HTTP 202 (Request State Object)\n                  deactivate Sending FSP\n                  deactivate Receiving FSP\n                  Receiving FSP->>Sending FSP: PUT {Callback URL} (Transaction Object)\n                  activate Sending FSP\n                  activate Receiving FSP\n                  Note right of Receiving FSP: (3) The FSP in turn informs the Sending FSP that the transation has been succesfully completed'),n("br"),e._v("by returning the final representation of the transaction.\n                  Sending FSP--\x3e>Receiving FSP: HTTP 204\n                  deactivate Sending FSP\n                  deactivate Receiving FSP\n                ")])]},proxy:!0}],null,!1,2957631820)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\n                ‘On-us’ P2P Transfer Initiated by a Third Party Provider\n              ")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this diagram, A third party provider enables a sender to transfer money to a recipient in the same FSP. The third party provider (1) confirms the recipient name, (2) requests a quotation and (3) performs the transfer with the FSP. A callback is provided by the FSP to return confirmation of the transfer.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n    participant Third Party Provider\n    participant FSP\n    Third Party Provider->>FSP: GET /accounts/{identifierType}/{identifier}/accountname\n    activate Third Party Provider\n    activate FSP\n    Note right of FSP: (1) The Third Party Provider retrieves the name of the"),n("br"),e._v("intended recipient from the FSP.\n    FSP--\x3e>Third Party Provider: HTTP 200 (Account Holder Name Object)\n    deactivate Third Party Provider\n    deactivate FSP\n    Third Party Provider->>FSP: POST /quotations\n    activate Third Party Provider\n    activate FSP\n    Note right of FSP: (2) Subject to sender confirmation, the Third Party Provider"),n("br"),e._v("submits a quotation request. The FSP will return the"),n("br"),e._v("Request State object to indicate that the request is"),n("br"),e._v("'pending'.\n    Third Party Provider--\x3e>FSP: HTTP 202 (Request State Object)\n    deactivate Third Party Provider\n    deactivate FSP\n    FSP->>Third Party Provider: PUT {Callback URL} (Quotations Object)\n    activate Third Party Provider\n    activate FSP\n    Note right of FSP: (3) The FSP in turn informs the Third Party Provider that"),n("br"),e._v("the quotation has been successfully completed by"),n("br"),e._v("returning the final representation of the quotation.\n    Third Party Provider--\x3e>FSP: HTTP 204\n    deactivate Third Party Provider\n    deactivate FSP\n    Third Party Provider->>FSP: POST /transactions/type/transfer\n    activate Third Party Provider\n    activate FSP\n    Note right of FSP: (4) Subject to sender confirmation, the Third Party Provider"),n("br"),e._v("submits a transfer request. The FSP will return the"),n("br"),e._v("Request State object to indicate that the request is"),n("br"),e._v("'pending'.\n    Third Party Provider--\x3e>FSP: HTTP 202 (Request State Object)\n    deactivate Third Party Provider\n    deactivate FSP\n    FSP->>Third Party Provider: PUT {Callback URL} (Transactions Object)\n    activate Third Party Provider\n    activate FSP\n    Note right of FSP: (5) The FSP in turn informs the Third Party Provider that"),n("br"),e._v("the transaction has been successfully completed by"),n("br"),e._v("returning the final representation of the transaction.\n    Third Party Provider--\x3e>FSP: HTTP 204\n    deactivate Third Party Provider\n    deactivate FSP\n")])]},proxy:!0}],null,!1,1513324969)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\n                P2P Transfer Failure\n              ")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In some failure scenarios, a transfer may need to be reversed. This diagram illustrates an reversal with the final result communicated via the callback.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n    participant Sending FSP\n    participant Receiving FSP\n    Sending FSP->>Receiving FSP: GET /accounts/{identifierType}/{identifier}/accountname\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (1) The Sending FSP retrieves the name of the"),n("br"),e._v("intended recipient from the Receiving FSP.\n    Receiving FSP--\x3e>Sending FSP: HTTP 200 (Account Holder Name Object)\n    deactivate Receiving FSP\n    Sending FSP->>Receiving FSP: POST /transactions/type/transfer\n    activate Receiving FSP\n    Note right of Receiving FSP: (2) Subject to sender confirmation, the Sending FSP"),n("br"),e._v("submits a transfer request. The Receiving FSP will"),n("br"),e._v("return the Request State object to indicate that the"),n("br"),e._v('request is "pending".\n    Receiving FSP--\x3e>Sending FSP: HTTP 202 (Request State Object)\n    deactivate Sending FSP\n    deactivate Receiving FSP\n    Receiving FSP->>Sending FSP: PUT {Callback URL} (Error Object)\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (3) The FSP in turn informs the Sending FSP that the'),n("br"),e._v("transation has been failed by returning an Error"),n("br"),e._v("object containing the reason for failure. \n    Sending FSP--\x3e>Receiving FSP: HTTP 204\n    deactivate Sending FSP\n    deactivate Receiving FSP\n")])]},proxy:!0}],null,!1,153161452)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\n                P2P Transfer Reversal\n              ")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In some failure scenarios, a transfer may need to be reversed. This diagram illustrates an reversal with the final result communicated via the callback.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n    participant Sending FSP\n    participant Receiving FSP\n    Sending FSP->>Receiving FSP: POST /transactions/{original transaction reference}/reversals\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (1) The Sending FSP submits the reversal request for"),n("br"),e._v("processing to the Receiving FSP - passing the reference of"),n("br"),e._v("the transaction that is to bve reversed. The Receiving FSP"),n("br"),e._v("will return the Request State object to indicate the the"),n("br"),e._v('request is "pending".\n    Receiving FSP--\x3e>Sending FSP: HTTP 202 (Request State Object)\n    Receiving FSP->>Sending FSP: PUT {Callback URL} (Reversal Object)\n    Note right of Receiving FSP: (2) The Receiving FSP informs the Sending FSP'),n("br"),e._v("that the reversal has been successully"),n("br"),e._v("completed by returning the final representation"),n("br"),e._v("of the reversal transaction.\n    Sending FSP--\x3e>Receiving FSP: HTTP 204\n    deactivate Sending FSP\n    deactivate Receiving FSP\n")])]},proxy:!0}],null,!1,1538787316)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\n                Obtain an FSP Balance\n              ")]},proxy:!0},{key:"body",fn:function(){return[n("mermaid",[e._v("\n  sequenceDiagram\n    participant Requesting FSP\n    participant FSP\n    Requesting FSP->>FSP: GET /accounts/{identifierType}/{identifier}/balance\n    activate Requesting FSP\n    activate FSP\n    Note right of FSP: (1) Obtain the balance of the"),n("br"),e._v("Requesting FSP's account.\n    FSP--\x3e>Requesting FSP: HTTP 200 (Balance Object)\n    deactivate Requesting FSP\n    deactivate FSP\n")])]},proxy:!0}],null,!1,4117859411)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\n                Retrieve Transactions for an FSP\n              ")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This diagram illustrates use of a cursor mechanism to retrieve all transactions for a sending requesting FSP via multiple requests.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n    participant Requesting FSP\n    participant FSP\n    Requesting FSP->>FSP: GET /accounts/{identifierType}/{identifier}/transactions?offset=0&limit=20\n    activate Requesting FSP\n    activate FSP\n    Note right of FSP: (1) The Requesting FSP requests up to"),n("br"),e._v("20 transactions for their account"),n("br"),e._v("from the FSP.\n    FSP--\x3e>Requesting FSP: HTTP 200 (Transactions Array) (X-Records-Available-Count=40)\n    Note right of FSP: (2) The FSP returns an array of 20"),n("br"),e._v("transactions and indicates via a"),n("br"),e._v("response header that there are 40"),n("br"),e._v("records available in total.\n    Requesting FSP->>FSP: GET /accounts/{identifierType}/{identifier}/transactions?offset=20&limit=20\n    Note right of FSP: (3) The Requesting FSP requests the"),n("br"),e._v("remaining transactions from the"),n("br"),e._v("account from the Receiving FSP.\n    FSP--\x3e>Requesting FSP: HTTP 200 (Transactions Array) (X-Records-Available-Count=40)\n    deactivate Requesting FSP\n    deactivate FSP\n")])]},proxy:!0}],null,!1,3435797641)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\n                Check for Service Availability\n              ")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("The Heartbeat API is used for monitoring purposes and establishes whether the FSP is in a state that enables a client to submit a request for processing.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n    participant Requesting FSP\n    participant FSP\n    Requesting FSP->>FSP: GET /heartbeat\n    activate Requesting FSP\n    activate FSP\n    Note right of FSP: (1) The Requesting FSP requests the"),n("br"),e._v("availability of the service from the FSP.\n    FSP--\x3e>Requesting FSP: HTTP 200 (Heartbeat Object)\n    Note right of FSP: (2) The FSP returns the availability of"),n("br"),e._v("the service - available, unavailable"),n("br"),e._v("or degraded.\n    deactivate Requesting FSP\n    deactivate FSP\n")])]},proxy:!0}],null,!1,3870883620)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\n                Retrieve a Missing API Response\n              ")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This API can be used by the sending FSP to retrieve a link to the final representation of the resource for which it attempted to create. Use this API when a callback is not received from the receiving FSP.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n    participant Sending FSP\n    participant Receiving FSP\n    Sending FSP->>Receiving FSP: GET /responses{clientCorrelationId}\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (1) Using the Sending FSP's"),n("br"),e._v("clientCorrelationId, a request for the"),n("br"),e._v("missing API response is sent.\n    Sending FSP--\x3e>Receiving FSP: HTTP 200 (Responses Object)\n    Note right of Receiving FSP: (2) A Responses object is returned"),n("br"),e._v("containing a link to the missing"),n("br"),e._v("resource.\n    Sending FSP->>Receiving FSP: GET /{link}\n    Note right of Receiving FSP: (3) The Sending FSP uses the link to"),n("br"),e._v("obtain a representation of the missing"),n("br"),e._v("resource.\n    Receiving FSP--\x3e>Sending FSP: HTTP 200 (Requested Object)\n    deactivate Receiving FSP\n    deactivate Sending FSP\n")])]},proxy:!0}],null,!1,369639659)})],1)],e._v(" "),n("router-link",{staticClass:"btn btn--transparent btn--tab-link",attrs:{to:"/use-cases/p-2-p-transfers/"}},[e._v("Start developing")])],2):e._e(),e._v(" "),e.isActiveTab("Merchant Payments")?n("TabSection",{key:"2"},[[n("h2",{attrs:{id:"introduction-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#introduction-2"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),n("p",[e._v("The Merchant Payment Mobile Money APIs allow merchants to accept payments from mobile money customers. Supported payment mechanisms include:")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("Payee-initiated merchant payment.")]),e._v(" The merchant initiates the payment and the payer is requested to authenticate to confirm acceptance by the mobile money provider.")]),e._v(" "),n("li",[n("strong",[e._v("Payer-initiated merchant payment.")]),e._v(" The payer initiates the payment by specifying the merchant that is to be paid.")]),e._v(" "),n("li",[n("strong",[e._v("Merchant payment via pre-authorised payment code.")]),e._v(" The payer generates a payment authorisation code up to a maximum payment amount. The merchant then enters or scans (if rendered as a QR code) the payer’s code to perform the payment.")])]),e._v(" "),n("p",[e._v("Closed loop and open-loop merchant payments are supported by the Mobile Money API. Closed loop merchant payments occur where the payer and payee accounts reside with the same mobile money provider. Open loop payments occur where the payer and payee accounts reside with different mobile money providers.\nFor further reading, please refer to the following:")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("Getting Started.")]),e._v(" Specifies the design principles, behaviours, and error handling of the Mobile Money API.")]),e._v(" "),n("li",[n("strong",[e._v("API Service Definition.")]),e._v(" Documents all Mobile Money API endpoints, fields, objects, and enumerations.")])]),e._v(" "),n("p",[e._v("All documentation can be found on the "),n("RouterLink",{attrs:{to:"/api-versions-1.2/"}},[e._v("GSMA Mobile Money API Developer Portal")]),e._v(".")],1),e._v(" "),n("h2",{attrs:{id:"intended-audience"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#intended-audience"}},[e._v("#")]),e._v(" Intended Audience")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Audience")])]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Usage")])]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Role")])])])]),e._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Mobile Money Providers")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("To understand how to implement the Mobile Money API to receive payments from merchants.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Provider")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Merchants")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("To understand how to implement the Mobile Money API to accept mobile money payments.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Consumer")])])])])],e._v(" "),[n("h3",{staticClass:"h3"},[e._v("Use case scenarios")]),e._v(" "),n("accordion",[n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nPayee-Initiated Merchant Payment\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this example, an asynchronous payment flow is used with a final callback. The merchant initiates the request and will be credited when the payer approves the request.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n    participant Merchant\n    participant Mobile Money Provider \n    participant Payer  \n    Merchant->>Mobile Money Provider: POST /transactions/type/merchantpay\n    activate Merchant\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The Merchant submits the payment request for processing "),n("br"),e._v(" to the MMP. The MMP will return the Request State object "),n("br"),e._v(" to indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Merchant: HTTP 202 (Request State Object)\n    deactivate Merchant\n    Mobile Money Provider->>Payer: Obtain Customer Authorisation\n    activate Payer\n    Note right of Payer: (2) The Payer is requested to the MMP to "),n("br"),e._v(" authorise the payment. This can be "),n("br"),e._v(" achieved through a number of means "),n("br"),e._v(" including USSD Push and One Time Code. "),n("br"),e._v(" OpenId can also be used for Payer authorisation.\n    Payer--\x3e>Mobile Money Provider: (Authorised)\n    deactivate Payer\n    activate Merchant\n    Mobile Money Provider->>Merchant: PUT {Callback URL} (Transactions Object)\n    Note right of Mobile Money Provider: (3) The MMP informs the Merchant that the "),n("br"),e._v(" transaction has been successfully completed "),n("br"),e._v(" by returning the final representation of the "),n("br"),e._v(" transaction.\n    Merchant--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Merchant\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,1845378966)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nPayee-Initiated Merchant Payment Failure\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this example, an asynchronous payment flow is used with a final callback that contains the reason for failure.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Merchant\n    participant Mobile Money Provider \n    participant Payer  \n    Merchant->>Mobile Money Provider: POST /transactions/type/merchantpay\n    activate Merchant\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The Merchant submits the payment request for processing "),n("br"),e._v(" to the MMP. The MMP will return the Request State object "),n("br"),e._v(" to indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Merchant: HTTP 202 (Request State Object)\n    deactivate Merchant\n    Mobile Money Provider->>Payer: Obtain Customer Authorisation\n    activate Payer\n    Note right of Payer: (2) The Payer is requested to the MMP to "),n("br"),e._v(" authorise the payment. This can be "),n("br"),e._v(" achieved through a number of means "),n("br"),e._v(" including USSD Push and One Time Code. "),n("br"),e._v(" OpenId can also be used for Payer authorisation.\n    Payer--\x3e>Mobile Money Provider: (Authorised)\n    deactivate Payer\n    activate Merchant\n    Mobile Money Provider->>Merchant: PUT {Callback URL} (Transactions Object)\n    Note right of Mobile Money Provider: (3) The MMP informs the Merchant that the "),n("br"),e._v(" transaction has been successfully completed "),n("br"),e._v(" by returning the final representation of the "),n("br"),e._v(" transaction.\n    Merchant--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Merchant\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,3658394599)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nPayee-Initiated Merchant Payment using the Polling Method\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this example, an asynchronous payment flow is used with the polling method. The client polls against the request state object to determine the outcome of the payment request.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Merchant\n    participant Mobile Money Provider \n    participant Payer\n    Merchant->>Mobile Money Provider: POST /transactions/type/merchantpay\n    activate Merchant\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The Merchant submits the payment request for processing "),n("br"),e._v(" to the MMP. The MMP will return the Request State object "),n("br"),e._v(" to indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Merchant: HTTP 202 (Request State Object)\n    deactivate Merchant      \n    par\n        loop \n            activate Merchant\n            Merchant->>Mobile Money Provider: GET /requeststates/{serverCorrelationId}\n            Note right of Mobile Money Provider: (2) The Merchant polls the MMP for the Request State until the "),n("br"),e._v(" transaction is authorised or declined or until the polling limit "),n("br"),e._v(" is reached.\n            Mobile Money Provider--\x3e>Merchant: HTTP 200 (Request State Object)\n        end\n    and\n        Mobile Money Provider->>Payer: Obtain Customer Authorisation\n        activate Payer\n        Note right of Payer: (3) The Payer is requested to the MMP to "),n("br"),e._v(" authorise the payment. This can be "),n("br"),e._v(" achieved through a number of means "),n("br"),e._v(" including USSD Push and One Time Code. "),n("br"),e._v(" OpenId can also be used for Payer "),n("br"),e._v(" authorisation.\n        Payer--\x3e>Mobile Money Provider: (Authorised)\n    end\n    deactivate Merchant\n    deactivate Payer\n    deactivate Mobile Money Provider\n    opt\n        activate Mobile Money Provider\n        activate Merchant\n        Merchant->>Mobile Money Provider: GET /transactions/transactionsReference\n        Note right of Mobile Money Provider: (4) The Merchant can use the objectReference returned in the "),n("br"),e._v(" Request State to retrieve a representation of the complete "),n("br"),e._v(" payment transaction.\n        Mobile Money Provider--\x3e>Merchant: HTTP 200 (Transactions Object)\n    end    \n    deactivate Merchant\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,1349603230)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nPayer-Initiated Merchant Payment\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this example, an asynchronous payment flow is used with a final callback. The payer initiates the request and will be debited upon successful completion of the request.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Payer  \n    participant Mobile Money Provider  \n    participant Merchant\n    Payer->>Mobile Money Provider: POST /transactions/type/merchantpay\n    activate Payer\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The Payer's channel (e.g. Mobile Money App) submits the"),n("br"),e._v("payment request for processing to the MMP. The MMP will"),n("br"),e._v("return the Request State object to indicate that the request"),n("br"),e._v("is 'pending'.\n    Mobile Money Provider--\x3e>Payer: HTTP 202 (Request State Object)\n    deactivate Payer   \n    Mobile Money Provider->>Payer: PUT {Callback URL} (transactions Object)\n    activate Payer\n    Note right of Mobile Money Provider: (2) The MMP informs the Payer's channel that the"),n("br"),e._v("payment has been successfully completed"),n("br"),e._v("by returning the final representation of the"),n("br"),e._v("transaction.\n    Payer--\x3e>Mobile Money Provider: HTTP 204  \n    deactivate Payer\n    activate Merchant\n    Mobile Money Provider->>Merchant: Notify\n    Note right of Merchant: (3) The MMP notifies the merchant tha the"),n("br"),e._v("payment has successfully compeleted.\n    deactivate Mobile Money Provider\n    deactivate Merchant\n")])]},proxy:!0}],null,!1,3739384430)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nPayer-Initiated Merchant Payment Failure\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this example, an asynchronous payment flow is used with a final callback that contains the reason for failure.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Payer  \n    participant Mobile Money Provider  \n    participant Merchant\n    Payer->>Mobile Money Provider: POST /transactions/type/merchantpay\n    activate Payer\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The Payer's channel (e.g. Mobile Money App) submits the"),n("br"),e._v("payment request for processing to the MMP. The MMP will"),n("br"),e._v("return the Request State object to indicate that the request"),n("br"),e._v("is 'pending'.\n    Mobile Money Provider--\x3e>Payer: HTTP 202 (Request State Object)\n    deactivate Payer  \n    Mobile Money Provider->>Payer: PUT {Callback URL} (Error Object)\n    activate Payer\n    Note right of Mobile Money Provider: (2) The MMP informs the Payer's channel that the"),n("br"),e._v("payment has been failed and returns the error"),n("br"),e._v("object detailing the reason for failure.\n    Payer--\x3e>Mobile Money Provider: HTTP 204   \n    deactivate Payer\n    activate Merchant\n    Mobile Money Provider->>Merchant: Notify\n    Note right of Merchant: (3) The MMP notifies the merchant tha the"),n("br"),e._v("payment has failed.\n    deactivate Mobile Money Provider\n    deactivate Merchant\n")])]},proxy:!0}],null,!1,3013475341)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nPayee-Initiated Merchant Payment using a Pre-authorised Payment Code\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this example the /authorisationcodes API is used to obtain a pre-authorised payment code. This in turn is presented by the payer to the merchant who initiates the payment request. Both flows in the diagram result in a callback. This flow is primarily used for payment on delivery use cases.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Payer  \n    participant Merchant\n    participant Mobile Money Provider    \n    Payer->>Mobile Money Provider: POST /accounts/{identifierType}/{identifier}/authorisationcodes\n    activate Payer\n    activate Mobile Money Provider \n    Note right of Mobile Money Provider: (1) The Payer's channel (e.g. Mobile Money App) submits"),n("br"),e._v("the request to generate an authorisation code to the"),n("br"),e._v("MMP. The MMP will return the Request State object to"),n("br"),e._v("indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Payer: HTTP 202 (Request State Object)\n    Mobile Money Provider->>Payer: PUT {Callback URL} (Authorisation Code Object)\n    Note right of Mobile Money Provider: (2) The MMP informs the Payer's channel that the"),n("br"),e._v("request has been successfully completed by"),n("br"),e._v("returing the final representation of the"),n("br"),e._v("authorisation code.\n    Payer--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Payer\n    deactivate Mobile Money Provider    \n    Note right of Payer: (3) The Payer communicates the code to the merchant. This"),n("br"),e._v("can be via QR code or by verbally communicating the code. \n    Payer->>Merchant: Communicates Code Verbally or via QR Presentment\n    activate Payer\n    activate Merchant\n    activate Mobile Money Provider \n    Merchant->>Mobile Money Provider: POST /transactions/type/merchantpay\n    Note right of Mobile Money Provider: (4) The Merchant submits the payment request for"),n("br"),e._v("processing to the MMP. The request will contain the"),n("br"),e._v("authorisation code. The MMP will return the Request"),n("br"),e._v("State object to indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Merchant: HTTP 202 (Request State Object)\n    deactivate Merchant\n    Mobile Money Provider->>Merchant: PUT {Callback URL} (Transactions Object)\n    activate Merchant\n    Note right of Mobile Money Provider: (5) The MMP informs the Merchant that the"),n("br"),e._v("transaction has been successfully completed by"),n("br"),e._v("returning the final representation of the"),n("br"),e._v("transaction.\n    Merchant--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Payer\n    deactivate Merchant\n    deactivate Mobile Money Provider \n")])]},proxy:!0}],null,!1,273542686)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nMerchant Payment Refund\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("Merchants can issue a refund to payers. In this diagram, the refund is not linked to the original transaction and hence the /transactions API is used. Where a refund needs to be linked to the original transaction, the /reversals API must be used to perform the refund.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Merchant\n    participant Mobile Money Provider \n    Merchant->>Mobile Money Provider: POST /transactions/type/adjustment\n    activate Merchant\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The Merchant submits the refund request for processing to"),n("br"),e._v("the MMP. The MMP will return the Request State object to"),n("br"),e._v("indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Merchant: HTTP 202 (Request State Object)\n    Mobile Money Provider->>Merchant: PUT {Callback URL} (Transactions Object)\n    Note right of Mobile Money Provider: (2) The MMP informs the Merchant that the"),n("br"),e._v("refund has been successfully completed by"),n("br"),e._v("returning the final representation of the refund.\n    Merchant--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Merchant\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,1114204120)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nMerchant Payment Reversal\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In some failure scenarios, a merchant may need to reverse a transaction. This diagram illustrates a reversal with the final result communicated via the callback.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Merchant\n    participant Mobile Money Provider \n    Merchant->>Mobile Money Provider: POST /transactions/{original transaction reference}/reversals\n    activate Merchant\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The Merchant submits the reversal request for processing"),n("br"),e._v("to the MMP - passing the reference of the transaction that"),n("br"),e._v("is to be reversed. The MMP will return the Request State"),n("br"),e._v("object to indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Merchant: HTTP 202 (Request State Object)\n    Mobile Money Provider->>Merchant: PUT {Callback URL} (Reversal Object)\n    Note right of Mobile Money Provider: (2) The MMP informs the Merchant that the"),n("br"),e._v("reversal has been successfully completed by"),n("br"),e._v("returning the final representation of the"),n("br"),e._v("reversal transaction.\n    Merchant--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Merchant\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,2079265539)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nObtain a Merchant Balance\n")]},proxy:!0},{key:"body",fn:function(){return[n("mermaid",[e._v("\nsequenceDiagram\n    participant Merchant\n    participant Mobile Money Provider \n    Merchant->>Mobile Money Provider: GET /accounts/{identifierType}/{identifier}/balance\n    activate Merchant\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) Obtain the balance of the"),n("br"),e._v("requested account.\n    Mobile Money Provider--\x3e>Merchant: HTTP 200 (Balance Object)\n    deactivate Merchant\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,2279714108)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRetrieve Payments for a Merchant\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This diagram illustrates use of a cursor mechanism to retrieve all payments for a merchant via multiple requests.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Merchant\n    participant Mobile Money Provider \n    Merchant->>Mobile Money Provider: GET /accounts/{identifierType}/{identifier}/transactions?offset=0&limit=20\n    activate Merchant\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The Merchant requests up to"),n("br"),e._v("20 transactions for the"),n("br"),e._v("account from the MMP.\n    Mobile Money Provider--\x3e>Merchant: HTTP 200 (Transactions Array) (X-Records-Available-Count=40)\n    Note right of Mobile Money Provider: (2) The MMP returns an array of"),n("br"),e._v("20 transactions and indicates"),n("br"),e._v("via a response header that"),n("br"),e._v("there are 40 records"),n("br"),e._v("available in total.    \n    Merchant->>Mobile Money Provider: GET /accounts/{identifierType}/{identifier}/transactions?offset=20&limit=20\n    Note right of Mobile Money Provider: (3) The Merchant requests the"),n("br"),e._v("remaining transactions for"),n("br"),e._v("the account from the MMP.\n    Mobile Money Provider--\x3e>Merchant: HTTP 200 (Transactions Array) (X-Records-Available-Count=40)\n    deactivate Merchant\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,1290181500)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nCheck for Service Availability\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("The Heartbeat API is used for monitoring purposes and establishes whether the mobile money provider is in a state that enables a client to submit a request for processing.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Merchant\n    participant Mobile Money Provider \n    Merchant->>Mobile Money Provider: GET /heartbeat\n    activate Merchant\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The Merchant requests the availability"),n("br"),e._v("of the service from the MMP.\n    Mobile Money Provider--\x3e>Merchant: HTTP 200 (Heartbeat Object)\n    Note right of Mobile Money Provider: (2) The MMP returns the availability of"),n("br"),e._v("the service - available, unavailable"),n("br"),e._v("or degraded.\n    deactivate Merchant\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,3745387524)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRetrieve a Missing API Response\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This API can be used by the merchant to retrieve a link to the final representation of the resource for which it attempted to create. Use this API when a callback is not received from the mobile money provider.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Merchant\n    participant Mobile Money Provider \n    Merchant->>Mobile Money Provider: GET /responses{clientCorrelationId}\n    activate Merchant\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) Using the Merchant's"),n("br"),e._v("clientCorrelationId, a request for the"),n("br"),e._v("missing API response is sent.\n    Mobile Money Provider--\x3e>Merchant: HTTP 200 (Responses Object) \n    Note right of Mobile Money Provider: (2) A Responses object is returned"),n("br"),e._v("containing a link to the missing"),n("br"),e._v("resource.  \n    Merchant->>Mobile Money Provider: GET /{link}\n    Note right of Mobile Money Provider: (3) The Merchant uses the link to obtain"),n("br"),e._v("a representation of the missing"),n("br"),e._v("resource.\n    Mobile Money Provider--\x3e>Merchant: HTTP 200 (Requested Object)\n    deactivate Merchant\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,1991659217)})],1)],e._v(" "),n("router-link",{staticClass:"btn btn--transparent btn--tab-link",attrs:{to:"/use-cases/merchant-payments/"}},[e._v("Start developing")])],2):e._e(),e._v(" "),e.isActiveTab("Disbursements")?n("TabSection",{key:"3"},[[n("h2",{attrs:{id:"introduction-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#introduction-3"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),n("p",[e._v("The Disbursement Mobile Money APIs allow organisations to disburse funds to mobile money recipients.")]),e._v(" "),n("p",[e._v("For further reading, please refer to the following:")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("Getting Started.")]),e._v(" Specifies the design principles, behaviours, and error handling of the Mobile Money API.")]),e._v(" "),n("li",[n("strong",[e._v("API Service Definition.")]),e._v(" Documents all Mobile Money API endpoints, fields, objects, and enumerations.")])]),e._v(" "),n("p",[e._v("All documentation can be found on the "),n("RouterLink",{attrs:{to:"/api-versions-1.2/"}},[e._v("GSMA Mobile Money API Developer Portal")]),e._v(".")],1),e._v(" "),n("h2",{attrs:{id:"intended-audience-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#intended-audience-2"}},[e._v("#")]),e._v(" Intended Audience")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Audience")])]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Usage")])]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Role")])])])]),e._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Mobile Money Providers")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("To understand how to implement the Mobile Money API to allow organisations to disburse payments in singular and in bulk.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Provider")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("NGOs")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("To understand how to implement the Mobile Money API to provide aid payments to mobile money recipients.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Consumer")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Government Departments")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("To understand how to implement the Mobile Money API to provide social credit payments to mobile money recipients.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Consumer")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Employers")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("To understand how to implement the Mobile Money API to provide salary payments to mobile money recipients.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Consumer")])])])])],e._v(" "),[n("h3",{staticClass:"h3"},[e._v("Use case scenarios")]),e._v(" "),n("accordion",[n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nIndividual Disbursement\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This diagram illustrates an individual disbursement using an asynchronous flow with the notification provided via a callback.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n      participant Disbursement Organisation\n      participant Mobile Money Provider \n      Disbursement Organisation->>Mobile Money Provider: POST /transactions/type/disbursement\n      activate Disbursement Organisation\n      activate Mobile Money Provider\n      Note right of Mobile Money Provider: (1) The disbursement organisation submits the refund request for"),n("br"),e._v("processing to the MMP. The MMP will return the Request"),n("br"),e._v("State object to indicate that the request is 'pending'.\n      Mobile Money Provider--\x3e>Disbursement Organisation: HTTP 202 (Request State Object)     \n      deactivate Disbursement Organisation\n      Mobile Money Provider->>Disbursement Organisation: PUT {Callback URL} (Transactions Object)\n      activate Disbursement Organisation\n      Note right of Mobile Money Provider: (2) The MMP informs the disbursement"),n("br"),e._v("organisation that the disbursement has been"),n("br"),e._v("successfully completed by returning the final"),n("br"),e._v("representation of the transaction.\n      Disbursement Organisation--\x3e>Mobile Money Provider: HTTP 204\n      deactivate Disbursement Organisation\n      deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,2980218882)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nIndividual Disbursement Failure\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this example, an asynchronous flow is used with a final callback that contains the reason for failure.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Disbursement Organisation\n    participant Mobile Money Provider \n    Disbursement Organisation->>Mobile Money Provider: POST /transactions/type/disbursement\n    activate Disbursement Organisation\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The disbursement organisation submits the refund request for"),n("br"),e._v("processing to the MMP. The MMP will return the Request"),n("br"),e._v("State object to indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Disbursement Organisation: HTTP 202 (Request State Object)  \n    deactivate Disbursement Organisation\n    Mobile Money Provider->>Disbursement Organisation: PUT {Callback URL} (Error Object)\n    activate Disbursement Organisation\n    Note right of Mobile Money Provider: (2) The MMP informs the disbursement"),n("br"),e._v("organisation that the disbursement has failed"),n("br"),e._v("and returns the error object datailing the"),n("br"),e._v("reason for failure.\n    Disbursement Organisation--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Disbursement Organisation\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,2516448065)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nBulk Disbursement\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This diagram illustrates the flow for a ‘one-shot’ bulk disbursement.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Disbursement Organisation\n    participant Mobile Money Provider \n    Disbursement Organisation->>Mobile Money Provider: POST /batchtransactions\n    activate Disbursement Organisation\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The disbursement organisation submits the batch of"),n("br"),e._v("transactions for processing to the MMP. The MMP will"),n("br"),e._v("return the Request State object to indicate that the batch"),n("br"),e._v("request is 'pending'.\n    Mobile Money Provider--\x3e>Disbursement Organisation: HTTP 202 (Request State Object)   \n    deactivate Disbursement Organisation\n    Mobile Money Provider->>Disbursement Organisation: PUT {Callback URL} (Batch Transactions Object)\n    activate Disbursement Organisation\n    Note right of Mobile Money Provider: (2) The MMP informs the disbursement organisation that"),n("br"),e._v("the request has been processed by returning the"),n("br"),e._v("representation of the batch.\n    Disbursement Organisation--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Disbursement Organisation\n    deactivate Mobile Money Provider\n    opt\n        Disbursement Organisation->>Mobile Money Provider: GET /batchtransactions/{batchId}\n        activate Disbursement Organisation\n        activate Mobile Money Provider\n        Note right of Mobile Money Provider: (3) The disbursement organisation can optionally retrieve a"),n("br"),e._v("representation of the batch transactions object that will"),n("br"),e._v("confirm the overall success of the approval request.\n        Mobile Money Provider--\x3e>Disbursement Organisation: HTTP 200 (Batch Transactions Object)\n        Disbursement Organisation->>Mobile Money Provider: GET /batchtransactions/{batchId}/completions\n        Note right of Mobile Money Provider: (4) The disbursement organisation can optionally request"),n("br"),e._v("details of all transactions in the batch that have been"),n("br"),e._v("completed.\n        Mobile Money Provider--\x3e>Disbursement Organisation: HTTP 200 (Batch Completions Object)\n        Disbursement Organisation->>Mobile Money Provider: GET /batchtransactions/{batchId}/rejections\n        Note right of Mobile Money Provider: (5) The disbursement organisation can optionally request"),n("br"),e._v("details of all transactions in the batch that have been"),n("br"),e._v("rejected.\n        Mobile Money Provider--\x3e>Disbursement Organisation: HTTP 200 (Batch Rejections Object)\n    end    \n    deactivate Disbursement Organisation\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,2954941731)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nBulk Disbursement Failure\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this example, an asynchronous flow is used with a final callback that contains the reason for failure to process the bulk request.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n      participant Disbursement Organisation\n      participant Mobile Money Provider \n      Disbursement Organisation->>Mobile Money Provider: POST /batchtransactions\n      activate Disbursement Organisation\n      activate Mobile Money Provider\n      Note right of Mobile Money Provider: (1) The disbursement organisation submits the batch of"),n("br"),e._v("transactions for processing to the MMP. The MMP will"),n("br"),e._v("return the Request State object to indicate that the batch"),n("br"),e._v("request is 'pending'.\n      Mobile Money Provider--\x3e>Disbursement Organisation: HTTP 202 (Request State Object)      \n      deactivate Disbursement Organisation\n      Mobile Money Provider->>Disbursement Organisation: PUT {Callback URL} (Error Object)\n      activate Disbursement Organisation\n      Note right of Mobile Money Provider: (2) The MMP informs the disbursement organisation that"),n("br"),e._v("the request has failed by returning the representation of"),n("br"),e._v("the error object.\n      Disbursement Organisation--\x3e>Mobile Money Provider: HTTP 204\n      deactivate Disbursement Organisation\n      deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,1131325861)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nBulk Disbursement with Maker / Checker\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This flow allows a bulk request to be processed in two steps. The first step involves the ‘maker’ system loading the request into the mobile money provider. The second step involves the ‘checker’ system approving the request.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Disbursement Organisation Maker\n    participant Disbursement Organisation Checker\n    participant Mobile Money Provider \n    Disbursement Organisation Maker->>Mobile Money Provider: POST /batchtransactions\n    activate Disbursement Organisation Maker\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The disbursement organisation maker submits the batch of"),n("br"),e._v("transactions for processing to the MMP. The MMP will"),n("br"),e._v("return the Request State object to indicate that the batch"),n("br"),e._v("request is 'pending'.\n    Mobile Money Provider--\x3e>Disbursement Organisation Maker: HTTP 202 (Request State Object)   \n    deactivate Disbursement Organisation Maker\n    Mobile Money Provider->>Disbursement Organisation Maker: PUT {Callback URL} (Batch Transactions Object)\n    activate Disbursement Organisation Maker\n    Note right of Mobile Money Provider: (2) The MMP informs the disbursement organisation maker"),n("br"),e._v("that the request has been processed by returning the"),n("br"),e._v("representation of the batch.\n    Disbursement Organisation Maker--\x3e>Mobile Money Provider: HTTP 204\n    opt\n        Disbursement Organisation Maker->>Mobile Money Provider: GET /batchtransactions/{batchId}/rejections\n        Note right of Mobile Money Provider: (3) The disbursement organisation maker can optionally"),n("br"),e._v("request details of all transactions in the batch that have"),n("br"),e._v("been rejected.\n        Mobile Money Provider--\x3e>Disbursement Organisation Maker: HTTP 200 (Batch Rejections Object)\n    end\n    deactivate Disbursement Organisation Maker\n    deactivate Mobile Money Provider\n    Disbursement Organisation Checker->>Mobile Money Provider: PATCH /batchtransactions/{batchId}\n    activate Disbursement Organisation Checker\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (4) The disbursement organisation checker submits a request"),n("br"),e._v(" to approve the transaction batch. The MMP will return the"),n("br"),e._v("Request State object to indicate that the request is"),n("br"),e._v("'pending'.\n    Mobile Money Provider--\x3e>Disbursement Organisation Checker: HTTP 202 (Request State Object)\n    deactivate Disbursement Organisation Checker\n    Mobile Money Provider->>Disbursement Organisation Checker: PUT {Callback URL} (Success)\n    activate Disbursement Organisation Checker\n    Note right of Mobile Money Provider: (5) The MMP informs the disbursement organisation checker"),n("br"),e._v("that the request has been processed by returning the"),n("br"),e._v("representation of the batch.\n    Disbursement Organisation Checker--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Mobile Money Provider\n    deactivate Disbursement Organisation Checker\n    opt\n        activate Mobile Money Provider\n        activate Disbursement Organisation Checker\n        Disbursement Organisation Checker->>Mobile Money Provider: GET /batchtransactions/{batchId}\n        Note right of Mobile Money Provider: (6) The disbursement organisation checker can optionally"),n("br"),e._v("retrieve a representation of the batch transactions object"),n("br"),e._v("that will confirm the overall success of the approval"),n("br"),e._v("request.\n        Mobile Money Provider--\x3e>Disbursement Organisation Checker: HTTP 200 (Batch Transactions Object)\n        Disbursement Organisation Checker->>Mobile Money Provider: GET /batchtransactions/{batchId}/completions\n        Note right of Mobile Money Provider: (7) The disbursement organisation checker can optionally"),n("br"),e._v("request details of all transactions in the batch that have"),n("br"),e._v("been completed.\n        Mobile Money Provider--\x3e>Disbursement Organisation Checker: HTTP 200 (Batch Completions Object)\n        Disbursement Organisation Checker->>Mobile Money Provider: GET /batchtransactions/{batchId}/rejections\n        Note right of Mobile Money Provider: (8) The disbursement organisation checker can optionally"),n("br"),e._v("request details of all transactions in the batch that have"),n("br"),e._v("been rejected.\n        Mobile Money Provider--\x3e>Disbursement Organisation Checker: HTTP 200 (Batch Rejections Object)\n    end   \n    deactivate Disbursement Organisation Checker\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,2929802315)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nIndividual Disbursement Using the Polling Method\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this diagram, an asynchronous flow is used with the polling method. The client polls against the request state object to determine the outcome of the individual disbursement request.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n      participant Disbursement Organisation\n      participant Mobile Money Provider \n      Disbursement Organisation->>Mobile Money Provider: POST /transactions/type/disbursement\n      activate Disbursement Organisation\n      activate Mobile Money Provider\n      Note right of Mobile Money Provider: (1) The disbursement organisation submits the refund request for"),n("br"),e._v("processing to the MMP. The MMP will return the Request"),n("br"),e._v("State object to indicate that the request is 'pending'.\n      Mobile Money Provider--\x3e>Disbursement Organisation: HTTP 202 (Request State Object)     \n      deactivate Disbursement Organisation\n      loop\n          activate Disbursement Organisation\n          Disbursement Organisation->>Mobile Money Provider: GET /requeststates/{serverCorrelationId}\n          Note right of Mobile Money Provider: (2) The disbursement organisation polls the MMP for the"),n("br"),e._v("Request State until the transaction is authorised or declied"),n("br"),e._v("or until the polling limit is reached.\n          Mobile Money Provider--\x3e>Disbursement Organisation: HTTP 200 (Request State Object)\n      end     \n      deactivate Mobile Money Provider\n      opt\n          activate Mobile Money Provider\n          Disbursement Organisation->>Mobile Money Provider: GET /transactions/transactionReference\n          Note right of Mobile Money Provider: (3) The disbursement organisation can use the objectReference"),n("br"),e._v("returned in the Request State to retrieve a representation of"),n("br"),e._v("the completed disbursement.\n          Mobile Money Provider--\x3e>Disbursement Organisation: HTTP 200 (Transactions Object)\n      end\n      deactivate Disbursement Organisation\n      deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,1398040443)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nDisbursement Reversal\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In some failure scenarios, a organisation may need to reverse an individual disbursement transaction. This diagram illustrates a reversal with the final result communicated via the callback.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n      participant Disbursement Organisation\n      participant Mobile Money Provider \n      Disbursement Organisation->>Mobile Money Provider: POST /transactions/{original transaction reference}/reversals\n      activate Disbursement Organisation\n      activate Mobile Money Provider\n      Note right of Mobile Money Provider: (1) The disbursement organisation submits the reversal"),n("br"),e._v("request for processing to the MMP - passing the reference"),n("br"),e._v("of the transaction that is to be reversed. The MMP will"),n("br"),e._v("return the Request State object to indicate that the request"),n("br"),e._v("is 'pending'.\n      Mobile Money Provider--\x3e>Disbursement Organisation: HTTP 202 (Request State Object)\n      Mobile Money Provider->>Disbursement Organisation: PUT {Callback URL} (Reversal Object)\n      Note right of Mobile Money Provider: (2) The MMP informs the The disbursement"),n("br"),e._v("organisation that the reversal has been"),n("br"),e._v("successfully completed by returning the final"),n("br"),e._v("representation of the reversal transaction.\n      Disbursement Organisation--\x3e>Mobile Money Provider: HTTP 204\n      deactivate Disbursement Organisation\n      deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,3886109047)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nObtain a Disbursement Organisation Balance\n")]},proxy:!0},{key:"body",fn:function(){return[n("mermaid",[e._v("\nsequenceDiagram\n    participant Disbursement Organisation\n    participant Mobile Money Provider \n    Disbursement Organisation->>Mobile Money Provider: GET /accounts/{identifierType}/{identifier}/balance\n    activate Disbursement Organisation\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) Obtain the balance of the"),n("br"),e._v("requested account.\n    Mobile Money Provider--\x3e>Disbursement Organisation: HTTP 200 (Balance Object)\n    deactivate Disbursement Organisation\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,4086465052)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRetrieve Transactions for a Disbursement Organisation\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This diagram illustrates use of a cursor mechanism to retrieve all transactions for a disbursement organisation via multiple requests.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n      participant Disbursement Organisation\n      participant Mobile Money Provider \n      Disbursement Organisation->>Mobile Money Provider: GET /accounts/{identifierType}/{identifier}/transactions?offset=0&limit=20\n      activate Disbursement Organisation\n      activate Mobile Money Provider\n      Note right of Mobile Money Provider: (1) The disbursement"),n("br"),e._v("organisation requests up to"),n("br"),e._v("20 transactions for the"),n("br"),e._v("account from the MMP.\n      Mobile Money Provider--\x3e>Disbursement Organisation: HTTP 200 (Transactions Array) (X-Records-Available-Count=40)\n      Note right of Mobile Money Provider: (2) The MMP returns an array of"),n("br"),e._v("20 transactions and indicates"),n("br"),e._v("via a response header that"),n("br"),e._v("there are 40 records"),n("br"),e._v("available in total.     \n      Disbursement Organisation->>Mobile Money Provider: GET /accounts/{identifierType}/{identifier}/transactions?offset=20&limit=20\n      Note right of Mobile Money Provider: (3) The disbursement"),n("br"),e._v("organisation requests the"),n("br"),e._v("remaining transactions for"),n("br"),e._v("the account from the MMP.\n      Mobile Money Provider--\x3e>Disbursement Organisation: HTTP 200 (Transactions Array) (X-Records-Available-Count=40)\n      deactivate Disbursement Organisation\n      deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,3116821051)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nCheck for Service Availability\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("The Heartbeat API is used for monitoring purposes and establishes whether the mobile money provider is in a state that enables a client to submit a request for processing.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n      participant Disbursement Organisation\n      participant Mobile Money Provider \n      Disbursement Organisation->>Mobile Money Provider: GET /heartbeat\n      activate Disbursement Organisation\n      activate Mobile Money Provider\n      Note right of Mobile Money Provider: (1) The disbursement organisation requests"),n("br"),e._v("the availability of the service from the MMP.\n      Mobile Money Provider--\x3e>Disbursement Organisation: HTTP 200 (Heartbeat Object)\n      Note right of Mobile Money Provider: (2) The MMP returns the availability of"),n("br"),e._v("the service - available, unavailable"),n("br"),e._v("or degraded.\n      deactivate Disbursement Organisation\n      deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,3640360484)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRetrieve a Missing API Response\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This API can be used by the disbursement organisation to retrieve a link to the final representation of the resource for which it attempted to create. Use this API when a callback is not received from the mobile money provider.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n      participant Disbursement Organisation\n      participant Mobile Money Provider \n      Disbursement Organisation->>Mobile Money Provider: GET /responses{clientCorrelationId}\n      activate Disbursement Organisation\n      activate Mobile Money Provider\n      Note right of Mobile Money Provider: (1) Using the disbursement organisations"),n("br"),e._v("clientCorrelationId, a request for the"),n("br"),e._v("missing API response is sent.\n      Mobile Money Provider--\x3e>Disbursement Organisation: HTTP 200 (Responses Object) \n      Note right of Mobile Money Provider: (2) A Responses object is returned"),n("br"),e._v("containing a link to the missing"),n("br"),e._v("resource.      \n      Disbursement Organisation->>Mobile Money Provider: GET /{link}\n      Note right of Mobile Money Provider: (3) The disbursement organisation uses"),n("br"),e._v("the link to obtain a representation of"),n("br"),e._v("the missing resource.\n      Mobile Money Provider--\x3e>Disbursement Organisation: HTTP 200 (Requested Object)\n      deactivate Disbursement Organisation\n      deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,2394608022)})],1)],e._v(" "),n("router-link",{staticClass:"btn btn--transparent btn--tab-link",attrs:{to:"/use-cases/disbursements/"}},[e._v("Start developing")])],2):e._e(),e._v(" "),e.isActiveTab("International Transfers")?n("TabSection",{key:"4"},[[n("h2",{attrs:{id:"introduction-4"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#introduction-4"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),n("p",[e._v("The International Transfer Mobile Money APIs allow financial service providers to perform cross-border mobile money transfers, including remittances.")]),e._v(" "),n("p",[e._v("For further reading, please refer to the following:")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("Getting Started.")]),e._v(" Specifies the design principles, behaviours, and error handling of the Mobile Money API.")]),e._v(" "),n("li",[n("strong",[e._v("API Service Definition.")]),e._v(" Documents all Mobile Money API endpoints, fields, objects, and enumerations.")])]),e._v(" "),n("p",[e._v("All documentation can be found on the "),n("RouterLink",{attrs:{to:"/api-versions-1.2/"}},[e._v("GSMA Mobile Money API Developer Portal")]),e._v(".")],1),e._v(" "),n("h2",{attrs:{id:"intended-audience-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#intended-audience-3"}},[e._v("#")]),e._v(" Intended Audience")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Audience")])]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Usage")])]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Role")])])])]),e._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("FSP - Mobile Money Providers")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("- To understand how to implement the Mobile Money API to receive International transfers from other FSPs.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Provider")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}}),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("- To understand how to implement the Mobile Money API to send international transfers to other FSPs.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Consumer")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("FSP – International Remittance Organisations")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("- To understand how to implement the Mobile Money API to receive international remittances from Mobile Money Providers.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Provider")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}}),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("- To understand how to implement the Mobile Money API to send international remittances to Mobile Money Providers.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Consumer")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("International Transfer Hubs")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("- To understand how to implement the Mobile Money APIs to receive international transfers from FSPs.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Provider")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}}),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("- To understand how to implement the Mobile Money APIs to send international transfers to FSPs.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Consumer")])])])])],e._v(" "),[n("h3",{staticClass:"h3"},[e._v("Use case scenarios")]),e._v(" "),n("accordion",[n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nInternational Transfer via Hub\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this diagram, a hub is used by the sending FSP to obtain a quotation and perform the transfer with the receiving FSP. A callback is provided by the receiving FSP to return the quotation and the confirmation of the transfer.")]),e._v(" "),n("p",[e._v("This flow can also be used for bilateral international transfers.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n      participant Sending FSP\n      participant International Transfer Hub\n      participant Receiving FSP   \n      Sending FSP->>International Transfer Hub: POST /quotations\n      activate Sending FSP\n      activate International Transfer Hub\n      activate Receiving FSP\n      Note right of International Transfer Hub: (1) The Sending FSP submits a quotation request to"),n("br"),e._v("the International Remittance Hub. The Hub will return the"),n("br"),e._v("Request State object to indicate that the request"),n("br"),e._v("is 'pending'.\n      International Transfer Hub--\x3e>Sending FSP: HTTP 202 (Request State  Object)      \n      deactivate Sending FSP    \n      International Transfer Hub->>Sending FSP: PUT {Callback URL} (Quotations Object)\n      activate Sending FSP\n      Note right of International Transfer Hub: (2) The Hub returns the quotation to the Sending FSP.\n      Sending FSP--\x3e>International Transfer Hub: HTTP 204     \n      deactivate International Transfer Hub\n      deactivate Sending FSP      \n      Sending FSP->>International Transfer Hub: POST /transactions/type/inttransfer\n      activate International Transfer Hub\n      activate Sending FSP\n      activate Receiving FSP\n      Note right of International Transfer Hub: (3) Subject to sender confirmation, the Sending FSP submits a transaction"),n("br"),e._v("request to the International Remittance Hub. The Hub will return the"),n("br"),e._v("Request State object to indicate that the request is 'pending'.\n      International Transfer Hub->>Receiving FSP: POST /transactions/type/inttransfer\n      Note right of Receiving FSP: (4) The Hub in turn submits the transaction request to the"),n("br"),e._v("Receiving FSP. The Receiving FSP will return the"),n("br"),e._v("Request State object to indicate that the request is"),n("br"),e._v("'pending'.\n      Receiving FSP--\x3e>International Transfer Hub: HTTP 202 (Request State Object)\n      International Transfer Hub--\x3e>Sending FSP: HTTP 202 (Request State Object)    \n      deactivate International Transfer Hub\n      deactivate Sending FSP     \n      Receiving FSP->>International Transfer Hub: PUT {Callback URL} (Transactions Object)\n      activate International Transfer Hub\n      activate Sending FSP\n      Note right of Receiving FSP: (5) The FSP informs the Hub that the transaction"),n("br"),e._v("has been successfully completed by returning"),n("br"),e._v("the final representation of the transaction.\n      International Transfer Hub--\x3e>Receiving FSP: HTTP 204\n      deactivate Receiving FSP\n      International Transfer Hub->>Sending FSP: PUT {Callback URL} (Transactions Object)\n      Note right of International Transfer Hub: (6) The Hub in turn informs the Sending FSP that the"),n("br"),e._v("transaction has been successfully completed"),n("br"),e._v("by returning the final representation of the transaction.\n      Sending FSP--\x3e>International Transfer Hub: HTTP 204      \n      deactivate International Transfer Hub\n      deactivate Sending FSP\n")])]},proxy:!0}],null,!1,10769895)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nBilateral International Transfer\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this diagram, the sending FSP connects directly with the receiving FSP to obtain a quotation and to perform the transfer. A callback is provided by the receiving FSP to return confirmation of the transfer.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Sending FSP\n    participant Receiving FSP\n    Sending FSP->>Receiving FSP: POST /quotations\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (1) The Sending FSP submits a quotation request to the"),n("br"),e._v("Receiving FSP. The Receiving FSP will return the Request"),n("br"),e._v("State object to indicate that the request is 'pending'.\n    Receiving FSP--\x3e>Sending FSP: HTTP 202 (Request State  Object)\n    deactivate Sending FSP  \n    Receiving FSP->>Sending FSP: PUT {Callback URL} (Quotations Object)\n    activate Sending FSP\n    Note right of Receiving FSP: (2) The Receiving FSP returns the quotation to the Sending"),n("br"),e._v("FSP.\n    Sending FSP--\x3e>Receiving FSP: HTTP 204\n    deactivate Sending FSP\n    deactivate Receiving FSP   \n    Sending FSP->>Receiving FSP: POST /transactions/type/inttransfer\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (3) Subject to sender confirmation, the Sending FSP submits a transaction"),n("br"),e._v("request to the Receiving FSP. The Receiving FSP will return the Request"),n("br"),e._v("State object to indicate that the request is 'pending'.\n    Receiving FSP--\x3e>Sending FSP: HTTP 202 (Request State Object)\n    deactivate Sending FSP\n    deactivate Receiving FSP   \n    Receiving FSP->>Sending FSP: PUT {Callback URL} (Transactions Object)\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (4) The FSP in turn informs the Sending FSP that the"),n("br"),e._v("transation has been successfully completed by"),n("br"),e._v("returning the final representation of the transaction. \n    Sending FSP--\x3e>Receiving FSP: HTTP 204  \n    deactivate Sending FSP\n    deactivate Receiving FSP\n")])]},proxy:!0}],null,!1,2647509598)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nInternational Transfer Failure\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("The failure of a transfer is reflected by the return of an error object in the callback from the receiving FSP. The same pattern would also apply to a quotation failure.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Sending FSP\n    participant Receiving FSP\n    Sending FSP->>Receiving FSP: POST /quotations\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (1) The Sending FSP submits a quotation request to the"),n("br"),e._v("Receiving FSP. The Receiving FSP will return the Request"),n("br"),e._v("State object to indicate that the request is 'pending'.\n    Receiving FSP--\x3e>Sending FSP: HTTP 202 (Request State  Object)\n    deactivate Sending FSP\n    Receiving FSP->>Sending FSP: PUT {Callback URL} (Quotations Object)\n    activate Sending FSP\n    Note right of Receiving FSP: (2) The Receiving FSP returns the quotation to the Sending"),n("br"),e._v("FSP.\n    Sending FSP--\x3e>Receiving FSP: HTTP 204\n    deactivate Sending FSP\n    deactivate Receiving FSP\n    Sending FSP->>Receiving FSP: POST /transactions/type/inttransfer\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (3) Subject to sender confirmation, the Sending FSP submits a transaction"),n("br"),e._v("request to the Receiving FSP. The Receiving FSP will return the Request"),n("br"),e._v("State object to indicate that the request is 'pending'.\n    Receiving FSP--\x3e>Sending FSP: HTTP 202 (Request State Object)\n    deactivate Sending FSP\n    deactivate Receiving FSP   \n    Receiving FSP->>Sending FSP: PUT {Callback URL} (Error Object)\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (4) The FSP in turn informs the Sending FSP that the"),n("br"),e._v("transation has been failed by returning an Error"),n("br"),e._v("object containing the reason for failure. \n    Sending FSP--\x3e>Receiving FSP: HTTP 204   \n    deactivate Sending FSP\n    deactivate Receiving FSP\n")])]},proxy:!0}],null,!1,2424724551)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nInternational Transfer Reversal\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In some failure scenarios, a transfer may need to be reversed. This diagram illustrates an reversal with the final result communicated via the callback.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Sending FSP\n    participant Receiving FSP  \n    Sending FSP->>Receiving FSP: POST /transactions/{original transaction reference}/reversals\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (1) The Sending FSP submits the reversal request for"),n("br"),e._v("processing to the Receiving FSP - passing the reference of"),n("br"),e._v("the transaction that is to be reversed. The Receiving FSP"),n("br"),e._v("will return the Request State object to indicate the the"),n("br"),e._v('request is "pending".\n    Receiving FSP--\x3e>Sending FSP: HTTP 202 (Request State Object)\n    Receiving FSP->>Sending FSP: PUT {Callback URL} (Reversal Object)\n    Note right of Receiving FSP: (2) The Receiving FSP informs the Sending FSP'),n("br"),e._v("that the reversal has been successully"),n("br"),e._v("completed by returning the final representation"),n("br"),e._v("of the reversal transaction.\n    Sending FSP--\x3e>Receiving FSP: HTTP 204  \n    deactivate Sending FSP\n    deactivate Receiving FSP\n")])]},proxy:!0}],null,!1,4121793258)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nObtain an FSP Balance\n")]},proxy:!0},{key:"body",fn:function(){return[n("mermaid",[e._v("\nsequenceDiagram\n    participant Sending FSP\n    participant Receiving FSP  \n    Sending FSP->>Receiving FSP: GET /accounts/{identifierType}/{identifier}/balance\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (1) Obtain the balance of the"),n("br"),e._v("Receiving FSP's account with"),n("br"),e._v("the Sending FSP.\n    Receiving FSP--\x3e>Sending FSP: HTTP 200 (Balance Object)\n    deactivate Sending FSP\n    deactivate Receiving FSP\n")])]},proxy:!0}],null,!1,609232806)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRetrieve Transactions for an FSP\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This diagram illustrates use of a cursor mechanism to retrieve all transactions for a sending FSP via multiple requests.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Sending FSP\n    participant Receiving FSP  \n    Sending FSP->>Receiving FSP: GET /accounts/{identifierType}/{identifier}/transactions?offset=0&limit=20\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (1) The Sending FSP requests up to 20"),n("br"),e._v("transactions for their account from"),n("br"),e._v("the Receiving FSP.\n    Receiving FSP--\x3e>Sending FSP: HTTP 200 (Transactions Array) (X-Records-Available-Count=40)\n    Note right of Receiving FSP: (2) The Receiving FSP returns an array"),n("br"),e._v("of 20 transactions and indicates via a"),n("br"),e._v("response header that there are 40"),n("br"),e._v("records available in total.   \n    Sending FSP->>Receiving FSP: GET /accounts/{identifierType}/{identifier}/transactions?offset=20&limit=20\n    Note right of Receiving FSP: (3) The Sending FSP requests the"),n("br"),e._v("remaining transactions from the"),n("br"),e._v("account from the Receiving FSP.\n    Receiving FSP--\x3e>Sending FSP: HTTP 200 (Transactions Array) (X-Records-Available-Count=40)   \n    deactivate Sending FSP\n    deactivate Receiving FSP\n")])]},proxy:!0}],null,!1,3376898965)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nCheck for Service Availability\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("The Heartbeat API is used for monitoring purposes and establishes whether the FSP is in a state that enables a client to submit a request for processing.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Sending FSP\n    participant Receiving FSP \n    Sending FSP->>Receiving FSP: GET /heartbeat\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (1) The Sending FSP requests the"),n("br"),e._v("availability of the service from the"),n("br"),e._v("Receiving FSP.\n    Receiving FSP--\x3e>Sending FSP: HTTP 200 (Heartbeat Object)\n    Note right of Receiving FSP: (2) The Receiving FSP returns the"),n("br"),e._v("availability of the service - available,"),n("br"),e._v("unavailable or degraded.   \n    deactivate Sending FSP\n    deactivate Receiving FSP\n")])]},proxy:!0}],null,!1,3884588911)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRetrieve a Missing API Response\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This API can be used by the sending FSP to retrieve a link to the final representation of the resource for which it attempted to create. Use this API when a callback is not received from the receiving FSP.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Sending FSP\n    participant Receiving FSP  \n    Sending FSP->>Receiving FSP: GET /responses{clientCorrelationId}\n    activate Sending FSP\n    activate Receiving FSP\n    Note right of Receiving FSP: (1) Using the Sending FSP's"),n("br"),e._v("clientCorrelationId, a request for the"),n("br"),e._v("missing API response is sent.\n    Receiving FSP--\x3e>Sending FSP: HTTP 200 (Responses Object)\n    Note right of Receiving FSP: (2) A Responses object is returned"),n("br"),e._v("containing a link to the missing"),n("br"),e._v("resource.  \n    Sending FSP->>Receiving FSP: GET /{link}\n    Note right of Receiving FSP: (3) The Sending FSP uses the link to"),n("br"),e._v("obtain a representation of the missing"),n("br"),e._v("resource.\n    Receiving FSP--\x3e>Sending FSP: HTTP 200 (Requested Object)   \n    deactivate Receiving FSP\n    deactivate Sending FSP\n")])]},proxy:!0}],null,!1,1232582315)})],1)],e._v(" "),n("router-link",{staticClass:"btn btn--transparent btn--tab-link",attrs:{to:"/use-cases/international-transfers/"}},[e._v("Start developing")])],2):e._e(),e._v(" "),e.isActiveTab("Recurring Payments")?n("TabSection",{key:"5"},[[n("h2",{attrs:{id:"introduction-5"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#introduction-5"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),n("p",[e._v("The Recurring Payments Mobile Money APIs allow service providers to setup electronic payment mandates for mobile money customers and initiate payments against payment mandates.")]),e._v(" "),n("p",[e._v("For further reading, please refer to the following:")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("Getting Started")]),e._v(". Specifies the design principles, behaviours, and error handling of the Mobile Money API.")]),e._v(" "),n("li",[n("strong",[e._v("API Service Definition")]),e._v(". Documents all Mobile Money API endpoints, fields, objects, and enumerations.")])]),e._v(" "),n("p",[e._v("All documentation can be found on the "),n("RouterLink",{attrs:{to:"/api-versions-1.2/"}},[e._v("GSMA Mobile Money API Developer Portal")]),e._v(".")],1),e._v(" "),n("h2",{attrs:{id:"intended-audience-4"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#intended-audience-4"}},[e._v("#")]),e._v(" Intended Audience")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Audience")])]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Usage")])]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Role")])])])]),e._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Mobile Money Providers")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("- To understand how to implement the Mobile Money API to receive recurring payment requests from service providers."),n("br"),e._v("- To understand how to implement the Mobile Money API to create recurring payment requests initiated by customers using a channel (e.g. app) provided by the mobile money provider.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Provider")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Service Providers")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("To understand how to implement the Mobile Money API to request recurring payment mandates against mobile money accounts.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Consumer")])])])])],e._v(" "),[n("h3",{staticClass:"h3"},[e._v("Use case scenarios")]),e._v(" "),n("accordion",[n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nSetup a Recurring Payment\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This diagram illustrates the setting-up of a recurring payment via a debit mandate. The service provider initiates the request which is authorised by the account holding customer. In this diagram, an asynchronous flow is used with a final callback.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Service Provider\n    participant Mobile Money Provider \n    participant Account Holder  \n    Service Provider->>Mobile Money Provider: POST /accounts/{identifierType}/{identifier}/debitmandates\n    activate Service Provider\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The service provider submits the debit mandate request for"),n("br"),e._v("processing to the MMP. The MMP will return the Request"),n("br"),e._v("State object to indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Service Provider: HTTP 202 (Request State Object)\n    Mobile Money Provider->>Account Holder: Obtain Customer Authorisation\n    activate Account Holder\n    Note right of Account Holder: (2) The customer is requested to the MMP to"),n("br"),e._v("authorise the mandate. This can be"),n("br"),e._v("achieved through a number of means"),n("br"),e._v("including USSD Push and One Time Code."),n("br"),e._v("OpenId can also be used to secure"),n("br"),e._v("customer authorisation.\n    Account Holder--\x3e>Mobile Money Provider: (Authorised)   \n    deactivate Account Holder\n    Mobile Money Provider->>Service Provider: PUT {Callback URL} (Debit Mandates Object)\n    Note right of Mobile Money Provider: (3) The MMP informs the service provider that the"),n("br"),e._v("debit mandate has been successfully created"),n("br"),e._v("by returning the final representation of the"),n("br"),e._v("debit mandate.\n    Service Provider--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Service Provider\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,2940329644)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nSetup a Recurring Payment Failure\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this diagram, the account holder declines to provide authorisation to setup the recurring payment. The service provider receives a callback containing an error object detailing the reason for failure.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Service Provider\n    participant Mobile Money Provider \n    participant Account Holder  \n    Service Provider->>Mobile Money Provider: POST /accounts/{identifierType}/{identifier}/debitmandates\n    activate Service Provider\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The service provider submits the payment request for"),n("br"),e._v("processing to the MMP. The MMP will return the Request"),n("br"),e._v("State object to indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Service Provider: HTTP 202 (Request State Object)\n    Mobile Money Provider->>Account Holder: Obtain Customer Authorisation\n    activate Account Holder\n    Note right of Account Holder: (2) The customer declines the request by the"),n("br"),e._v("MMP to accept the debit mandate.\n    Account Holder--\x3e>Mobile Money Provider: (Declined)   \n    deactivate Account Holder\n    Mobile Money Provider->>Service Provider: PUT {Callback URL} (Error Object)\n    Note right of Mobile Money Provider: (3) The MMP informs the service provider that the"),n("br"),e._v("debit mandate has been declined by returning"),n("br"),e._v("an error object.\n    Service Provider--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Service Provider\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,1605898510)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nTake a Recurring Payment\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this diagram, the service provider initiates a payment request to the FSP to debit the account-holders account as per the debit mandate.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Service Provider\n    participant Mobile Money Provider \n    Service Provider->>Mobile Money Provider: POST /transactions/type/merchantpay\n    activate Service Provider\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The service provider submits the payment request for"),n("br"),e._v("processing to the MMP, ensuring that a mandate reference"),n("br"),e._v("is provided for the payment. The MMP will return the"),n("br"),e._v("Request State object to indicate that the request is"),n("br"),e._v("'pending'.\n    Mobile Money Provider--\x3e>Service Provider: HTTP 202 (Request State Object)    \n    deactivate Service Provider\n    Mobile Money Provider->>Service Provider: PUT {Callback URL} (Transactions Object)\n    activate Service Provider\n    Note right of Mobile Money Provider: (2) The MMP informs the service provider that the"),n("br"),e._v("transaction has been successfully completed"),n("br"),e._v("by returning the final representation of the"),n("br"),e._v("transaction.\n    Service Provider--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Service Provider\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,2933488771)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nTake a Recurring Payment Failure\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this diagram, the service provider initiates a payment request to the FSP to debit the account-holders account as per the debit mandate. The FSP is unable to process the payment and returns a callback containing the error object.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Service Provider\n    participant Mobile Money Provider \n    Service Provider->>Mobile Money Provider: POST /transactions/type/merchantpay\n    activate Service Provider\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The service provider submits the payment request for"),n("br"),e._v("processing to the MMP, ensuring that a mandate reference"),n("br"),e._v("is provided for the payment. The MMP will return the"),n("br"),e._v("Request State object to indicate that the request is"),n("br"),e._v("'pending'.\n    Mobile Money Provider--\x3e>Service Provider: HTTP 202 (Request State Object)  \n    deactivate Service Provider\n    Mobile Money Provider->>Service Provider: PUT {Callback URL} (Error Object)\n    activate Service Provider\n    Note right of Mobile Money Provider: (2) The MMP informs the service provider that the"),n("br"),e._v("payment has failed and returns the error"),n("br"),e._v("object detailing the reason for failure.\n    Service Provider--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Service Provider\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,1975775464)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nTake a Recurring Payment using the Polling Method\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this example, an asynchronous payment flow is used with the polling method. The client polls against the request state object to determine the outcome of the payment request.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Service Provider\n    participant Mobile Money Provider \n    Service Provider->>Mobile Money Provider: POST /transactions/type/merchantpay\n    activate Service Provider\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The service provider submits the payment request for"),n("br"),e._v("processing to the MMP, ensuring that a mandate reference"),n("br"),e._v("is provided for the payment. The MMP will return the"),n("br"),e._v("Request State object to indicate that the request is"),n("br"),e._v("'pending'.\n    Mobile Money Provider--\x3e>Service Provider: HTTP 202 (Request State Object)    \n    deactivate Service Provider\n    loop\n        activate Service Provider\n        Service Provider->>Mobile Money Provider: GET /requeststates/{serverCorrelationId}\n        Note right of Mobile Money Provider: (2) The service provider polls the MMP for the Request State"),n("br"),e._v("until the transaction is authorised or declied or until the"),n("br"),e._v("polling limit is reached.\n        Mobile Money Provider--\x3e>Service Provider: HTTP 200 (Request State Object)\n    end   \n    deactivate Mobile Money Provider\n    opt\n        activate Mobile Money Provider\n        Service Provider->>Mobile Money Provider: GET /transactions/transactionReference\n        Note right of Mobile Money Provider: (3) The service provider can use the objectReference returned in"),n("br"),e._v("the Request State to retrieve a representation of the"),n("br"),e._v("completed payment.\n        Mobile Money Provider--\x3e>Service Provider: HTTP 200 (Transactions Object)\n    end\n    deactivate Service Provider\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,1523713784)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRecurring Payment Refund\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("Service Providers can issue a refund to payers. In this diagram, the refund is not linked to the original transaction and hence the /transactions API is used. Where a refund needs to be linked to the original transaction, the /reversals API must be used to perform the refund.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n      participant Service Provider\n      participant Mobile Money Provider \n      Service Provider->>Mobile Money Provider: POST /transactions/type/adjustment\n      activate Service Provider\n      activate Mobile Money Provider\n      Note right of Mobile Money Provider: (1) The service provider submits the refund request for"),n("br"),e._v("processing to the MMP. The MMP will return the Request"),n("br"),e._v("State object to indicate that the request is 'pending'.\n      Mobile Money Provider--\x3e>Service Provider: HTTP 202 (Request State Object)\n      Mobile Money Provider->>Service Provider: PUT {Callback URL} (Transactions Object)\n      Note right of Mobile Money Provider: (2) The MMP informs the service provider that the"),n("br"),e._v("refund has been successfully completed by"),n("br"),e._v("returning the final representation of the refund.\n      Service Provider--\x3e>Mobile Money Provider: HTTP 204\n      deactivate Service Provider\n      deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,776447443)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRecurring Payment Reversal\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In some failure scenarios, a service provider may need to reverse a transaction. This diagram illustrates a reversal with the final result communicated via the callback.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n      participant Service Provider\n      participant Mobile Money Provider \n      Service Provider->>Mobile Money Provider: POST /transactions/{original transaction reference}/reversals\n      activate Service Provider\n      activate Mobile Money Provider\n      Note right of Mobile Money Provider: (1) The service provider submits the reversal request for"),n("br"),e._v("processing to the MMP - passing the reference of the"),n("br"),e._v("transaction that is to be reversed. The MMP will return the"),n("br"),e._v("Request State object to indicate that the request is"),n("br"),e._v("'pending'.\n      Mobile Money Provider--\x3e>Service Provider: HTTP 202 (Request State Object)\n      Mobile Money Provider->>Service Provider: PUT {Callback URL} (Reversal Object)\n      Note right of Mobile Money Provider: (2) The MMP informs the service provider that the"),n("br"),e._v("reversal has been successfully completed by"),n("br"),e._v("returning the final representation of the"),n("br"),e._v("reversal transaction.\n      Service Provider--\x3e>Mobile Money Provider: HTTP 204\n      deactivate Service Provider\n      deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,3566642605)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nPayer sets up a Recurring Payment using MMP Channel\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This diagram illustrates how the MM API can be used by a mobile money provider to allow a payer to setup a recurring payment using a channel provided by the provider, for example, a mobile money app.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n      participant Mobile Money Provider Channel\n      participant Mobile Money Provider \n      Mobile Money Provider Channel->>Mobile Money Provider: POST /accounts/{identifierType}/{identifier}/debitmandates\n      activate Mobile Money Provider Channel\n      activate Mobile Money Provider\n      Note right of Mobile Money Provider: (1) The MMP Channel submits the debit mandate request for"),n("br"),e._v("processing to the MMP. The MMP will return the Request"),n("br"),e._v("State object to indicate that the request is 'pending'.\n      Mobile Money Provider--\x3e>Mobile Money Provider Channel: HTTP 202 (Request State Object)\n      Mobile Money Provider->>Mobile Money Provider Channel: PUT {Callback URL} (Debit Mandates Object)\n      Note right of Mobile Money Provider: (2) The MMP informs the MMP Channel that the"),n("br"),e._v("debit mandate has been successfully created"),n("br"),e._v("by returning the final representation of the"),n("br"),e._v("debit mandate.\n      Mobile Money Provider Channel--\x3e>Mobile Money Provider: HTTP 204\n      deactivate Mobile Money Provider Channel\n      deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,2047319906)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nObtain a Service Provider Balance\n")]},proxy:!0},{key:"body",fn:function(){return[n("mermaid",[e._v("\n  sequenceDiagram\n      participant Service Provider\n      participant Mobile Money Provider    \n      Service Provider->>Mobile Money Provider: GET /accounts/{identifierType}/{identifier}/balance\n      activate Service Provider\n      activate Mobile Money Provider\n      Note right of Mobile Money Provider: (1) Obtain the balance of the"),n("br"),e._v("requested account.\n      Mobile Money Provider--\x3e>Service Provider: HTTP 200 (Balance Object)    \n      deactivate Service Provider\n      deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,882970588)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRetrieve Payments for a Service Provider\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This diagram illustrates use of a cursor mechanism to retrieve all payments for a service provider via multiple requests.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n      participant Service Provider\n      participant Mobile Money Provider   \n      Service Provider->>Mobile Money Provider: GET /accounts/{identifierType}/{identifier}/transactions?offset=0&limit=20\n      activate Service Provider\n      activate Mobile Money Provider\n      Note right of Mobile Money Provider: (1) The service provider requests"),n("br"),e._v("up to 20 transactions for the"),n("br"),e._v("account from the MMP.\n      Mobile Money Provider--\x3e>Service Provider: HTTP 200 (Transactions Array) (X-Records-Available-Count=40)\n      Note right of Mobile Money Provider: (2) The MMP returns an array of"),n("br"),e._v("20 transactions and indicates"),n("br"),e._v("via a response header that"),n("br"),e._v("there are 40 records"),n("br"),e._v("available in total.      \n      Service Provider->>Mobile Money Provider: GET /accounts/{identifierType}/{identifier}/transactions?offset=20&limit=20\n      Note right of Mobile Money Provider: (3) The service provider requests"),n("br"),e._v("the remaining transactions for"),n("br"),e._v("the account from the MMP.\n      Mobile Money Provider--\x3e>Service Provider: HTTP 200 (Transactions Array) (X-Records-Available-Count=40)\n      deactivate Service Provider\n      deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,2820693994)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nCheck for Service Availability\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("The Heartbeat API is used for monitoring purposes and establishes whether the FSP is in a state that enables a client to submit a request for processing.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n      participant Service Provider\n      participant Mobile Money Provider    \n      Service Provider->>Mobile Money Provider: GET /heartbeat\n      activate Service Provider\n      activate Mobile Money Provider\n      Note right of Mobile Money Provider: (1) The service provider requests the"),n("br"),e._v("availability of the service from the MMP.\n      Mobile Money Provider--\x3e>Service Provider: HTTP 200 (Heartbeat Object)\n      Note right of Mobile Money Provider: (2) The MMP returns the availability of"),n("br"),e._v("the service - available, unavailable"),n("br"),e._v("or degraded.\n      deactivate Service Provider\n      deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,1960547888)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRetrieve a Missing API Response\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This API can be used by the service provider to retrieve a link to the final representation of the resource for which it attempted to create. Use this API when a callback is not received from the FSP.")]),e._v(" "),n("mermaid",[e._v("\n  sequenceDiagram\n      participant Service Provider\n      participant Mobile Money Provider\n      Service Provider->>Mobile Money Provider: GET /responses{clientCorrelationId}\n      activate Service Provider\n      activate Mobile Money Provider\n      Note right of Mobile Money Provider: (1) Using the service provider's"),n("br"),e._v("clientCorrelationId, a request for the"),n("br"),e._v("missing API response is sent.\n      Mobile Money Provider--\x3e>Service Provider: HTTP 200 (Responses Object)\n      Note right of Mobile Money Provider: (2) A Responses object is returned"),n("br"),e._v("containing a link to the missing"),n("br"),e._v("resource.     \n      Service Provider->>Mobile Money Provider: GET /{link}\n      Note right of Mobile Money Provider: (3) The service provider uses the link to"),n("br"),e._v("obtain a representation of the missing"),n("br"),e._v("resource.\n      Mobile Money Provider--\x3e>Service Provider: HTTP 200 (Requested Object)\n      deactivate Mobile Money Provider\n      deactivate Service Provider\n")])]},proxy:!0}],null,!1,1316062725)})],1)],e._v(" "),n("router-link",{staticClass:"btn btn--transparent btn--tab-link",attrs:{to:"/use-cases/recurring-payments/"}},[e._v("Start developing")])],2):e._e(),e._v(" "),e.isActiveTab("Account Linking")?n("TabSection",{key:"6"},[[n("h2",{attrs:{id:"introduction-6"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#introduction-6"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),n("p",[e._v("The Account Linking Mobile Money APIs allow financial service providers to link customer accounts to mobile money accounts, thus allowing their customers to push funds to and pull funds from mobile money. Conversely, mobile money providers can use the APIs to link their customers mobile money accounts to financial service providers.")]),e._v(" "),n("p",[e._v("For further reading, please refer to the following:")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("Getting Started")]),e._v(". Specifies the design principles, behaviours, and error handling of the Mobile Money API.")]),e._v(" "),n("li",[n("strong",[e._v("API Service Definition")]),e._v(". Documents all Mobile Money API endpoints, fields, objects, and enumerations.\nAll documentation can be found on the "),n("RouterLink",{attrs:{to:"/api-versions-1.2/"}},[e._v("GSMA Mobile Money API Developer Portal")]),e._v(".")],1)]),e._v(" "),n("h2",{attrs:{id:"intended-audience-5"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#intended-audience-5"}},[e._v("#")]),e._v(" Intended Audience")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Audience")])]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Usage")])]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Role")])])])]),e._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("FSP - Mobile Money Providers")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("- To understand how to implement the Mobile Money API to accept account linking requests from other financial service providers.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Provider")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}}),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("- To understand how to implement the Mobile Money API to request linking of accounts to other financial service providers.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Consumer")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("FSP Banks and Microfinance Institutions")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("- To understand how to implement the Mobile Money API to accept account linking requests mobile money providers.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Provider")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}}),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("- To understand how to implement the Mobile Money API to request linking of accounts to mobile money providers.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Consumer")])])])])],e._v(" "),[n("h3",{staticClass:"h3"},[e._v("Use case scenarios")]),e._v(" "),n("accordion",[n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nSetup an Account Link\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This diagram illustrates the setting-up of an account link. The requesting FSP initiates the request which is authorised by the account holding customer. In this diagram, an asynchronous flow is used with a final callback.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Requesting FPS\n    participant FSP \n    participant Account Holder  \n    Requesting FPS->>FSP: POST /accounts/{identifierType}/{identifier}/links\n    activate Requesting FPS\n    activate FSP\n    Note right of FSP: (1) The requesting FPS submits the debit mandate request for"),n("br"),e._v("processing to the FSP. The FSP will return the Request"),n("br"),e._v("State object to indicate that the request is 'pending'.\n    FSP--\x3e>Requesting FPS: HTTP 202 (Request State Object)\n    FSP->>Account Holder: Obtain Customer Authorisation\n    activate Account Holder\n    Note right of Account Holder: (2) The account holder is requested by the"),n("br"),e._v("FSP to authorise the link. This can be"),n("br"),e._v("achieved through a number of means"),n("br"),e._v("including USSD Push and One Time Code."),n("br"),e._v("OpenId can also be used to secure"),n("br"),e._v("customer authorisation.\n    Account Holder--\x3e>FSP: (Authorised)   \n    deactivate Account Holder\n    FSP->>Requesting FPS: PUT {Callback URL} (Debit Mandates Object)\n    Note right of FSP: (3) The FSP informs the requesting FPS that the"),n("br"),e._v("link has been successfully created by"),n("br"),e._v("returning the final representation of the link.\n    Requesting FPS--\x3e>FSP: HTTP 204\n    deactivate Requesting FPS\n    deactivate FSP \n")])]},proxy:!0}],null,!1,2949653161)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nSetup an Account Link Failure\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this diagram, the account holder declines to provide authorisation to setup the account link. The requesting FSP receives a callback containing an error object detailing the reason for failure.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Requesting FPS\n    participant FSP \n    participant Account Holder  \n    Requesting FPS->>FSP: POST /accounts/{identifierType}/{identifier}/links\n    activate Requesting FPS\n    activate FSP\n    Note right of FSP: (1) The requesting FPS submits the debit mandate request for"),n("br"),e._v("processing to the FSP. The FSP will return the Request"),n("br"),e._v("State object to indicate that the request is 'pending'.\n    FSP--\x3e>Requesting FPS: HTTP 202 (Request State Object)\n    FSP->>Account Holder: Obtain Customer Authorisation\n    activate Account Holder\n    Note right of Account Holder: (2) The account holder declines the link"),n("br"),e._v("request.\n    Account Holder--\x3e>FSP: (Declined)   \n    deactivate Account Holder\n    FSP->>Requesting FPS: PUT {Callback URL} (Error Object)\n    Note right of FSP: (3) The FSP informs the requesting FPS that the"),n("br"),e._v("link has been declined by returning an error"),n("br"),e._v("object.\n    Requesting FPS--\x3e>FSP: HTTP 204\n    deactivate Requesting FPS\n    deactivate FSP\n")])]},proxy:!0}],null,!1,3316841270)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nPerform a Transfer for a Linked Account\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this diagram, the requesting FSP initiates a transfer to the FSP using an established link.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Requesting FSP\n    participant FSP \n    Requesting FSP->>FSP: POST /transactions/type/transfer\n    activate Requesting FSP\n    activate FSP\n    Note right of FSP: (1) The requesting FSP submits the transfer request for"),n("br"),e._v("processing to the FSP, ensuring that a link reference"),n("br"),e._v("is provided for the transfer. The FSP will return the Request"),n("br"),e._v("State object to indicate that the request is 'pending'.\n    FSP--\x3e>Requesting FSP: HTTP 202 (Request State Object)  \n    deactivate Requesting FSP\n    FSP->>Requesting FSP: PUT {Callback URL} (Transactions Object)\n    activate Requesting FSP\n    Note right of FSP: (2) The FSP informs the requesting FSP that the"),n("br"),e._v("transfer has been successfully completed by"),n("br"),e._v("returning the final representation of the"),n("br"),e._v("transaction.\n    Requesting FSP--\x3e>FSP: HTTP 204\n    deactivate Requesting FSP\n    deactivate FSP\n")])]},proxy:!0}],null,!1,279221150)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nPerform a Transfer for a Linked Account - Failure\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this diagram, the requesting FSP initiates a transfer to the FSP using an established link. The FSP is unable to process the transfer and returns a callback containing the error object.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Requesting FSP\n    participant FSP \n    Requesting FSP->>FSP: POST /transactions/type/transfer\n    activate Requesting FSP\n    activate FSP\n    Note right of FSP: (1) The requesting FSP submits the transfer request for"),n("br"),e._v("processing to the FSP, ensuring that a link reference is"),n("br"),e._v("provided for the transfer. The FSP will return the Request"),n("br"),e._v("State object to indicate that the request is 'pending'.\n    FSP--\x3e>Requesting FSP: HTTP 202 (Request State Object) \n    deactivate Requesting FSP\n    FSP->>Requesting FSP: PUT {Callback URL} (Error Object)\n    activate Requesting FSP\n    Note right of FSP: (2) The FSP informs the requesting FSP that the"),n("br"),e._v("transfer has failed and returns the error object"),n("br"),e._v("detailing the reason for failure.\n    Requesting FSP--\x3e>FSP: HTTP 204\n    deactivate Requesting FSP\n    deactivate FSP\n")])]},proxy:!0}],null,!1,2282075927)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nPerform a Transfer using an Account Link via the Polling Method\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this example, an asynchronous flow is used with the polling method. The client polls against the request state object to determine the outcome of the transfer request.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Requesting FSP\n    participant FSP \n    Requesting FSP->>FSP: POST /transactions/type/transfer\n    activate Requesting FSP\n    activate FSP\n    Note right of FSP: (1) The requesting FSP submits the transfer request for"),n("br"),e._v("processing to the FSP, ensuring that a link reference is"),n("br"),e._v("provided for the transfer. The FSP will return the Request"),n("br"),e._v("State object to indicate that the request is 'pending'.\n    FSP--\x3e>Requesting FSP: HTTP 202 (Request State Object)  \n    deactivate Requesting FSP\n    loop\n        activate Requesting FSP\n        Requesting FSP->>FSP: GET /requeststates/{serverCorrelationId}\n        Note right of FSP: (2) The requesting FSP polls the FSP for the Request State"),n("br"),e._v("until the transaction is authorised or declied or until the"),n("br"),e._v("polling limit is reached.\n        FSP--\x3e>Requesting FSP: HTTP 200 (Request State Object)\n    end  \n    deactivate FSP\n    opt\n        activate FSP\n        Requesting FSP->>FSP: GET /transactions/transactionReference\n        Note right of FSP: (3) The requesting FSP can use the objectReference returned in"),n("br"),e._v("the Request State to retrieve a representation of the"),n("br"),e._v("completed transfer.\n        FSP--\x3e>Requesting FSP: HTTP 200 (Transactions Object)\n    end\n    deactivate Requesting FSP\n    deactivate FSP\n")])]},proxy:!0}],null,!1,1856073991)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nPerform a Transfer Reversal\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In some failure scenarios, a requesting FSP may need to reverse a transaction. This diagram illustrates a reversal with the final result communicated via the callback.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Requesting FSP\n    participant FSP \n    Requesting FSP->>FSP: POST /transactions/{original transaction reference}/reversals\n    activate Requesting FSP\n    activate FSP\n    Note right of FSP: (1) The requesting FSP submits the reversal request for"),n("br"),e._v("processing to the FSP - passing the reference of the"),n("br"),e._v("transaction that is to be reversed. The FSP will return the"),n("br"),e._v("Request State object to indicate that the request is"),n("br"),e._v("'pending'.\n    FSP--\x3e>Requesting FSP: HTTP 202 (Request State Object)\n    FSP->>Requesting FSP: PUT {Callback URL} (Reversal Object)\n    Note right of FSP: (2) The FSP informs the Requesting FSP that the"),n("br"),e._v("reversal has been successfully completed by"),n("br"),e._v("returning the final representation of the"),n("br"),e._v("reversal transaction.\n    Requesting FSP--\x3e>FSP: HTTP 204\n    deactivate Requesting FSP\n    deactivate FSP\n")])]},proxy:!0}],null,!1,130507788)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nObtain a Financial Service Provider Balance\n")]},proxy:!0},{key:"body",fn:function(){return[n("mermaid",[e._v("\nsequenceDiagram\n    participant Requesting FSP\n    participant FSP   \n    Requesting FSP->>FSP: GET /accounts/{identifierType}/{identifier}/balance\n    activate Requesting FSP\n    activate FSP\n    Note right of FSP: (1) Obtain the balance of the"),n("br"),e._v("requested account.\n    FSP--\x3e>Requesting FSP: HTTP 200 (Balance Object) \n    deactivate Requesting FSP\n    deactivate FSP\n")])]},proxy:!0}],null,!1,1121413693)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRetrieve Transfers for a Financial Service Provider\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This diagram illustrates use of a cursor mechanism to retrieve all transfers for a financial service provider via multiple requests.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Requesting FSP\n    participant FSP \n    Requesting FSP->>FSP: GET /accounts/{identifierType}/{identifier}/transactions?offset=0&limit=20\n    activate Requesting FSP\n    activate FSP\n    Note right of FSP: (1) The requesting FSP requests"),n("br"),e._v("up to 20 transactions for the"),n("br"),e._v("account from the FSP.\n    FSP--\x3e>Requesting FSP: HTTP 200 (Transactions Array) (X-Records-Available-Count=40)\n    Note right of FSP: (2) The FSP returns an array of"),n("br"),e._v("20 transactions and indicates"),n("br"),e._v("via a response header that"),n("br"),e._v("there are 40 records"),n("br"),e._v("available in total.   \n    Requesting FSP->>FSP: GET /accounts/{identifierType}/{identifier}/transactions?offset=20&limit=20\n    Note right of FSP: (3) The requesting FSP requests"),n("br"),e._v("the remaining transactions for"),n("br"),e._v("the account from the FSP.\n    FSP--\x3e>Requesting FSP: HTTP 200 (Transactions Array) (X-Records-Available-Count=40)\n    deactivate Requesting FSP\n    deactivate FSP\n")])]},proxy:!0}],null,!1,920233367)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nCheck for Service Availability\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("The Heartbeat API is used for monitoring purposes and establishes whether the FSP is in a state that enables a client to submit a request for processing.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Requesting FSP\n    participant FSP \n    Requesting FSP->>FSP: GET /heartbeat\n    activate Requesting FSP\n    activate FSP\n    Note right of FSP: (1) The requesting FSP requests the"),n("br"),e._v("availability of the service from the FSP.\n    FSP--\x3e>Requesting FSP: HTTP 200 (Heartbeat Object)\n    Note right of FSP: (2) The FSP returns the availability of"),n("br"),e._v("the service - available, unavailable"),n("br"),e._v("or degraded.    \n    deactivate Requesting FSP\n    deactivate FSP\n")])]},proxy:!0}],null,!1,498884132)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRetrieve a Missing API Response\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This API can be used by the requesting FSP to retrieve a link to the final representation of the resource for which it attempted to create. Use this API when a callback is not received from the FSP.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Requesting FSP\n    participant FSP    \n    Requesting FSP->>FSP: GET /responses{clientCorrelationId}\n    activate Requesting FSP\n    activate FSP\n    Note right of FSP: (1) Using the requesting FSP's"),n("br"),e._v("clientCorrelationId, a request for the"),n("br"),e._v("missing API response is sent.\n    FSP--\x3e>Requesting FSP: HTTP 200 (Responses Object)\n    Note right of FSP: (2) A Responses object is returned"),n("br"),e._v("containing a link to the missing"),n("br"),e._v("resource.   \n    Requesting FSP->>FSP: GET /{link}\n    Note right of FSP: (3) The requesting FSP uses the link to"),n("br"),e._v("obtain a representation of the missing"),n("br"),e._v("resource.\n    FSP--\x3e>Requesting FSP: HTTP 200 (Requested Object)   \n    deactivate FSP\n    deactivate Requesting FSP\n")])]},proxy:!0}],null,!1,642230853)})],1)],e._v(" "),n("router-link",{staticClass:"btn btn--transparent btn--tab-link",attrs:{to:"/use-cases/account-linking/"}},[e._v("Start developing")])],2):e._e(),e._v(" "),e.isActiveTab("Bill Payments")?n("TabSection",{key:"7"},[[n("h2",{attrs:{id:"introduction-7"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#introduction-7"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),n("p",[e._v("The Bill Payments Mobile Money APIs allow service providers to accept bill payments from mobile money customers.")]),e._v(" "),n("p",[e._v("For further reading, please refer to the following:")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("Getting Started")]),e._v(". Specifies the design principles, behaviours, and error handling of the Mobile Money API.")]),e._v(" "),n("li",[n("strong",[e._v("API Service Definition")]),e._v(". Documents all Mobile Money API endpoints, fields, objects, and enumerations.")])]),e._v(" "),n("p",[e._v("All documentation can be found on the "),n("RouterLink",{attrs:{to:"/api-versions-1.2/"}},[e._v("GSMA Mobile Money API Developer Portal")]),e._v(".")],1),e._v(" "),n("h2",{attrs:{id:"intended-audience-6"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#intended-audience-6"}},[e._v("#")]),e._v(" Intended Audience")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Audience")])]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Usage")])]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Role")])])])]),e._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Mobile Money Providers")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("To understand how to implement the Mobile Money API to make bill payments to service providers.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Consumer")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Service Providers")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("To understand how to implement the Mobile Money API to accept bill payments from Mobile Money Providers.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Provider")])])])])],e._v(" "),[n("h3",{staticClass:"h3"},[e._v("Use case scenarios")]),e._v(" "),n("accordion",[n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nSuccessful Retrieval of Bills\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This diagram illustrates how a mobile money provider can retrieve bills for a given service provider customer account.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Mobile Money Provider\n    participant Service Provider  \n    Mobile Money Provider->>Service Provider: GET /accounts/{identifierType}/{identifier}/bills\n    activate Mobile Money Provider\n    activate Service Provider\n    Note right of Service Provider: (1) Obtain all bills of a given account.\n    Service Provider--\x3e>Mobile Money Provider: HTTP 200 (Bills Object)  \n    deactivate Mobile Money Provider\n    deactivate Service Provider   \n")])]},proxy:!0}],null,!1,1844304188)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nUnsuccessful Retrieval of Bills\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This diagram illustrates the return of an error object where a service provider is unable to return bill details to a mobile money provider.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Mobile Money Provider\n    participant Service Provider  \n    Mobile Money Provider->>Service Provider: GET /accounts/{identifierType}/{identifier}/bills\n    activate Mobile Money Provider\n    activate Service Provider\n    Note right of Service Provider: (1) Retrieve all bills for a given account.   \n    Service Provider--\x3e>Mobile Money Provider: HTTP 4xx/5xx (Error Object)\n    Note right of Service Provider: (2) Return the error object providing"),n("br"),e._v("detais of the failure reason.   \n    deactivate Mobile Money Provider\n    deactivate Service Provider\n")])]},proxy:!0}],null,!1,1390792677)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nMake a Successful Bill Payment with Callback\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This diagram illustrates how a mobile money provider can make a bill payment to a service provider using the asynchronous callback method. To illustrate the end to end flow, a leg has been added to describe how a third payment provider can initiate a bill payment request to a mobile money provider.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Third Party Payment Provider\n    participant Mobile Money Provider\n    participant Service Provider\n    Note right of Third Party Payment Provider: (1) The provider that enables the payer to pay"),n("br"),e._v("bills submits a payment request to the MMP.\n    Third Party Payment Provider->>Mobile Money Provider: POST /transactions/type/billpay\n    activate Third Party Payment Provider\n    activate Mobile Money Provider\n    Mobile Money Provider--\x3e>Third Party Payment Provider: HTTP 202 (Request State Object)  \n    deactivate Third Party Payment Provider\n    Mobile Money Provider->>Service Provider: POST /accounts/{identifierType}/{identifier}/bills/{billReference}/payments\n    activate Service Provider\n    Note right of Service Provider: (2) The MMP submits the bill payment request"),n("br"),e._v("for processing to the Service Provider. The"),n("br"),e._v("Service Provider will return the Request State"),n("br"),e._v("object to indicate that the request is 'pending'.  \n    Service Provider--\x3e>Mobile Money Provider: HTTP 202 (Request State Object)  \n    deactivate Mobile Money Provider\n    Service Provider->>Mobile Money Provider: PUT {Callback URL} (Bill Payments Object)\n    activate Mobile Money Provider\n    Note right of Service Provider: (3) The Service Provider informs the MMP"),n("br"),e._v("that the request has been succesfully"),n("br"),e._v("completed by returning the final"),n("br"),e._v("representation of the bill payment. \n    Mobile Money Provider--\x3e>Service Provider: HTTP 204\n    deactivate Service Provider\n    Note right of Third Party Payment Provider: (4) The MMP informs the third party payment provider that the"),n("br"),e._v("request has been succesfully completed by returning the"),n("br"),e._v("final representation of the transactions object. \n    Mobile Money Provider->>Third Party Payment Provider: PUT {Callback URL} (Transactions Object)\n    activate Third Party Payment Provider\n    Third Party Payment Provider--\x3e> Mobile Money Provider: HTTP 204\n    deactivate Mobile Money Provider\n    deactivate Third Party Payment Provider\n")])]},proxy:!0}],null,!1,2466174972)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nMake an Unsuccessful Bill Payment with Callback\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This diagram illustrates the return of an error object where a service provider fails to process a bill payment request.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Mobile Money Provider\n    participant Service Provider\n    Mobile Money Provider->>Service Provider: POST /accounts/{identifierType}/{identifier}/bills/{billReference}/payments\n    activate Service Provider\n    activate Mobile Money Provider\n    Note right of Service Provider: (1) The MMP submits the bill payment request"),n("br"),e._v("for processing to the Service Provider. The"),n("br"),e._v("Service Provider will return the Request State"),n("br"),e._v("object to indicate that the request is 'pending'.  \n    Service Provider--\x3e>Mobile Money Provider: HTTP 202 (Request State Object)   \n    deactivate Mobile Money Provider\n    Service Provider->>Mobile Money Provider: PUT {Callback URL} (Error Object)\n    activate Mobile Money Provider\n    Note right of Service Provider: (2) The Service Provider informs the MMP"),n("br"),e._v("that the request failed by returning a"),n("br"),e._v("representation of the error object. \n    Mobile Money Provider--\x3e>Service Provider: HTTP 204\n    deactivate Service Provider\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,553878080)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nMake a Bill Payment with Polling\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This diagram illustrates how a mobile money provider can make a bill payment to a service provider using the asynchronous polling method.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Mobile Money Provider\n    participant Service Provider\n    Mobile Money Provider->>Service Provider: POST /accounts/{identifierType}/{identifier}/bills/{billReference}/payments\n    activate Service Provider\n    activate Mobile Money Provider\n    Note right of Service Provider: (1) The MMP submits the bill payment request for processing"),n("br"),e._v("to the Service Provider. The Service Provider will return"),n("br"),e._v("the Request State object to indicate that the request is"),n("br"),e._v("'pending'.  \n    Service Provider--\x3e>Mobile Money Provider: HTTP 202 (Request State Object)  \n    deactivate Mobile Money Provider\n    loop\n        activate Mobile Money Provider\n        Mobile Money Provider->>Service Provider: GET /requeststates/{serverCorrelationId}\n        Note right of Service Provider: (2) The MMP polls the Service Provider for the Request State"),n("br"),e._v("until the bill payment is processed or until the polling limit is"),n("br"),e._v("reached. The request state will return the final status of the"),n("br"),e._v("required, i.e. completed or failed.\n        Service Provider--\x3e>Mobile Money Provider: HTTP 200 (Request State Object)\n    end\n    deactivate Service Provider\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,1350533042)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRetrieval of Bill Payments\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This diagram illustrates how a mobile money provider can retrieve payments against a given bill for a given service provider customer account.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Mobile Money Provider\n    participant Service Provider    \n    Mobile Money Provider->>Service Provider: GET /accounts/{identifierType}/{identifier}/bills/{billReference}/payments?offset=0&limit=10\n    activate Mobile Money Provider\n    activate Service Provider\n    Note right of Service Provider: (1) The MMP requests up to 10 bill"),n("br"),e._v("payments for the account from the"),n("br"),e._v("Service Provider.\n    Service Provider--\x3e>Mobile Money Provider: HTTP 200 (Bill Payments Array) (X-Records-Available-Count=20)\n    Note right of Service Provider: (2) The Service Provider returns an array"),n("br"),e._v("of 10 bill payments and indicates via a"),n("br"),e._v("response header that there are 20"),n("br"),e._v("records available in total.   \n    Mobile Money Provider->>Service Provider: GET /accounts/{identifierType}/{identifier}/bills/{billReference}/payments?offset=10&limit=10\n    Note right of Service Provider: (3) The MMP requests the remaining"),n("br"),e._v("bill payments for the account"),n("br"),e._v("from the Service Provider.\n    Service Provider--\x3e>Mobile Money Provider: HTTP 200 (Bill Payments Array) (X-Records-Available-Count=20)    \n    deactivate Mobile Money Provider\n    deactivate Service Provider\n")])]},proxy:!0}],null,!1,3218209754)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nCheck for Service Availability\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("The Heartbeat API is used for monitoring purposes and establishes whether the Service Provider is in a state that enables an FSP to submit a request for processing.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Mobile Money Provider\n    participant Service Provider\n    Mobile Money Provider->>Service Provider: GET /heartbeat\n    activate Mobile Money Provider\n    activate Service Provider\n    Note right of Service Provider: (1) The MMP requests the availability of the"),n("br"),e._v("service from the Service Provider.\n    Service Provider--\x3e>Mobile Money Provider: HTTP 200 (Heartbeat Object)\n    Note right of Service Provider: (2) The Service Provider returns the"),n("br"),e._v("availability of the service - available,"),n("br"),e._v("unavailable or degraded.   \n    deactivate Mobile Money Provider\n    deactivate Service Provider\n")])]},proxy:!0}],null,!1,1664413559)})],1)],e._v(" "),n("router-link",{staticClass:"btn btn--transparent btn--tab-link",attrs:{to:"/use-cases/bill-payments/"}},[e._v("Start developing")])],2):e._e(),e._v(" "),e.isActiveTab("Agent Services")?n("TabSection",{key:"8"},[[n("h2",{attrs:{id:"introduction-8"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#introduction-8"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),n("p",[e._v("Agent Services comprises of the following:\n"),n("br"),n("br")]),e._v(" "),n("p",[n("strong",[e._v("Cash-in and Cash-out Services")])]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("Agent-initiated Cash-out")]),e._v(". The agent initiates the cash-out and the mobile money customer is requested to authenticate the cash-out by the mobile money provider.")]),e._v(" "),n("li",[n("strong",[e._v("Customer-initiated Cash-out")]),e._v(". The mobile money customer initiates the payment by specifying the agent that is to be performing the cash-out.")]),e._v(" "),n("li",[n("strong",[e._v("Cash-out via Authorisation Code")]),e._v(". The customer generates an authorisation code up to a maximum amount. The agent then enters or scans (if rendered as a QR code) the code to perform the withdrawal.")]),e._v(" "),n("li",[n("strong",[e._v("Cash-in")]),e._v(". The agent initiates the cash-in by entering the customer account identifier(s).")])]),e._v(" "),n("p",[e._v("Closed loop and open-loop agent cash-in and cash-out are supported by the Mobile Money API. Closed loop cash-in/cash-out occurs where the agent and customer accounts reside with the same mobile money provider. Open loop cash-in/cash-out occurs where the agent and customer accounts reside with different mobile money providers.")]),e._v(" "),n("p",[e._v("Agents can be physical agents, i.e. customers that are serviced by an human, or can be an ATM.\n"),n("br"),n("br")]),e._v(" "),n("p",[n("strong",[e._v("Customer Account Services")])]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("Customer Registration")]),e._v(". Agents can register new customers for mobile money.")]),e._v(" "),n("li",[n("strong",[e._v("KYC Verification")]),e._v(". Agents that provide KYC verification services can confirm that they have verified customer KYC.\n"),n("br"),n("br")])]),e._v(" "),n("p",[n("strong",[e._v("Further Reading")])]),e._v(" "),n("p",[e._v("For further reading, please refer to the following:")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("Getting Started")]),e._v(". Specifies the design principles, behaviours, and error handling of the Mobile Money API.")]),e._v(" "),n("li",[n("strong",[e._v("API Service Definition")]),e._v(". Documents all Mobile Money API endpoints, fields, objects, and enumerations.")])]),e._v(" "),n("p",[e._v("All documentation can be found on the "),n("RouterLink",{attrs:{to:"/api-versions-1.2/"}},[e._v("GSMA Mobile Money API Developer Portal")]),e._v(".")],1),e._v(" "),n("h2",{attrs:{id:"intended-audience-7"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#intended-audience-7"}},[e._v("#")]),e._v(" Intended Audience")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Audience")])]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Usage")])]),e._v(" "),n("th",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Role")])])])]),e._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Mobile Money Providers")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("To understand how to implement the Mobile Money API to allow agents to perform cash-in, cash-out, customer registration and customer KYC verification services on behalf of mobile money customers.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Provider")])]),e._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[n("strong",[e._v("Agents")])]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("To understand how to implement the Mobile Money API to service customer requests for cash-in, cash-out, registration and KYC verification.")]),e._v(" "),n("td",{staticStyle:{"text-align":"left"}},[e._v("API Consumer")])])])])],e._v(" "),[n("h3",{staticClass:"h3"},[e._v("Use case scenarios")]),e._v(" "),n("accordion",[n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nAgent-initiated Cash-out\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this example, an asynchronous cash-out flow is used with a final callback.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Agent\n    participant Mobile Money Provider \n    participant Customer  \n    Agent->>Mobile Money Provider: POST /transactions/type/withdrawal\n    activate Agent\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The Agent submits the payment request for processing to"),n("br"),e._v("the MMP. The MMP will return the Request State object to"),n("br"),e._v("indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Agent: HTTP 202 (Request State Object)\n    deactivate Agent\n    Mobile Money Provider->>Customer: Obtain Customer Authorisation\n    activate Customer\n    Note right of Customer: (2) The customer is requested by the MMP to"),n("br"),e._v("authorise the cash-out. This can be"),n("br"),e._v("achieved through a number of means"),n("br"),e._v("including USSD Push and One Time Code."),n("br"),e._v("OpenId can also be used for cash-out"),n("br"),e._v("authorisation.\n    Customer--\x3e>Mobile Money Provider: (Authorised)   \n    deactivate Customer\n    Mobile Money Provider->>Agent: PUT {Callback URL} (Transactions Object)\n    activate Agent\n    Note right of Mobile Money Provider: (3) The MMP informs the agent that the cash-out"),n("br"),e._v("has been successfully completed by returning"),n("br"),e._v("the final representation of the transaction.\n    Agent--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Agent\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,1210822766)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nAgent-initiated Cash-out Failure\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this example, an asynchronous cash-out flow is used with a final callback that contains the reason for failure.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Agent\n    participant Mobile Money Provider \n    participant Customer  \n    Agent->>Mobile Money Provider: POST /transactions/type/withdrawal\n    activate Agent\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The Agent submits the payment request for processing to"),n("br"),e._v("the MMP. The MMP will return the Request State object to"),n("br"),e._v("indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Agent: HTTP 202 (Request State Object)\n    deactivate Agent\n    Mobile Money Provider->>Customer: Obtain Customer Authorisation\n    activate Customer\n    Note right of Customer: (2) The customer is requested by the MMP to"),n("br"),e._v("authorise the cash-out. The customer"),n("br"),e._v("declines the request or the request times-"),n("br"),e._v("out.\n    Customer--\x3e>Mobile Money Provider: (Declined or Timeout)  \n    deactivate Customer\n    Mobile Money Provider->>Agent: PUT {Callback URL} (Error Object)\n    activate Agent\n    Note right of Mobile Money Provider: (3) The MMP informs the agent that the cash-out"),n("br"),e._v("has failed and returns the error object detailing"),n("br"),e._v("the reason for failure.\n    Agent--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Agent\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,1299580124)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nAgent-initiated Cash-out using the Polling Method\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this example, an asynchronous cash-out flow is used with the polling method. The client polls against the request state object to determine the outcome of the cash-out request.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Agent\n    participant Mobile Money Provider \n    participant Customer\n    Agent->>Mobile Money Provider: POST /transactions/type/withdrawal\n    activate Agent\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The agent submits the cash-out request for processing to"),n("br"),e._v("the MMP. The MMP will return the Request State object to"),n("br"),e._v("indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Agent: HTTP 202 (Request State Object)\n    deactivate Agent       \n    par\n        loop \n            activate Agent\n            Agent->>Mobile Money Provider: GET /requeststates/{serverCorrelationId}\n            Note right of Mobile Money Provider: (2) The agent polls the MMP for the Request State until the"),n("br"),e._v("transaction is authorised or declined or until the polling limit"),n("br"),e._v("is reached.\n            Mobile Money Provider--\x3e>Agent: HTTP 200 (Request State Object)\n        end\n    and\n        Mobile Money Provider->>Customer: Obtain Customer Authorisation\n        activate Customer\n        Note right of Customer: (3) The Customer is requested to the MMP to"),n("br"),e._v("authorise the cash-out. This can be"),n("br"),e._v("achieved through a number of means"),n("br"),e._v("including USSD Push and One Time Code."),n("br"),e._v("OpenId can also be used for cash-out"),n("br"),e._v("authorisation.\n        Customer--\x3e>Mobile Money Provider: (Authorised)\n    end\n    deactivate Agent\n    deactivate Customer\n    deactivate Mobile Money Provider\n    opt\n        activate Mobile Money Provider\n        activate Agent\n        Agent->>Mobile Money Provider: GET /transactions/transactionsReference\n        Note right of Mobile Money Provider: (4) The agent can use the objectReference returned in the"),n("br"),e._v("Request State to retrieve a representation of the complete"),n("br"),e._v("cash-out transaction.\n        Mobile Money Provider--\x3e>Agent: HTTP 200 (Transactions Object)\n    end   \n    deactivate Agent\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,3922166902)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nCustomer-initiated Cash-out\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this example, an asynchronous cash-out flow is used with a final callback.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Customer  \n    participant Mobile Money Provider  \n    participant Agent\n    Customer->>Mobile Money Provider: POST /transactions/type/withdrawal\n    activate Customer\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The customer's channel (e.g. Mobile Money App) submits"),n("br"),e._v("the cash-out request for processing to the MMP. The MMP"),n("br"),e._v("will return the Request State object to indicate that the"),n("br"),e._v("request is 'pending'.\n    Mobile Money Provider--\x3e>Customer: HTTP 202 (Request State Object)\n    deactivate Customer  \n    Mobile Money Provider->>Customer: PUT {Callback URL} (Transactions Object)\n    activate Customer\n    Note right of Mobile Money Provider: (2) The MMP informs the customer's channel that"),n("br"),e._v("the cash-out has been successfully completed"),n("br"),e._v("by returning the final representation of the"),n("br"),e._v("transaction.\n    Customer--\x3e>Mobile Money Provider: HTTP 204   \n    deactivate Customer\n    activate Agent\n    Mobile Money Provider->>Agent: Notify\n    Note right of Agent: (3) The MMP notifies the agent tha the cash-"),n("br"),e._v("out has successfully compeleted.\n    deactivate Mobile Money Provider\n    deactivate Agent\n")])]},proxy:!0}],null,!1,299909161)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nCustomer-initiated Cash-out Failure\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this example, an asynchronous cash-out flow is used with a final callback that contains the reason for failure.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Customer  \n    participant Mobile Money Provider  \n    participant Agent\n    Customer->>Mobile Money Provider: POST /transactions/type/withdrawal\n    activate Customer\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The customer's channel (e.g. Mobile Money App) submits"),n("br"),e._v("the cash-out request for processing to the MMP. The MMP"),n("br"),e._v("will return the Request State object to indicate that the"),n("br"),e._v("request is 'pending'.\n    Mobile Money Provider--\x3e>Customer: HTTP 202 (Request State Object)\n    deactivate Customer  \n    Mobile Money Provider->>Customer: PUT {Callback URL} (Error Object)\n    activate Customer\n    Note right of Mobile Money Provider: (2) The MMP informs the customer's channel that"),n("br"),e._v("the cash-out has failed and returns the error"),n("br"),e._v("object detailing the reason for failure.\n    Customer--\x3e>Mobile Money Provider: HTTP 204   \n    deactivate Customer\n    activate Agent\n    Mobile Money Provider->>Agent: Notify\n    Note right of Agent: (3) The MMP notifies the agent tha the cash-"),n("br"),e._v("out has failed.\n    deactivate Mobile Money Provider\n    deactivate Agent\n")])]},proxy:!0}],null,!1,305400870)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nCustomer Cash-out at an ATM using an Authorisation Code\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this example the /authorisationcodes API is used to obtain a pre-authorised code. This in turn is presented by the withdrawing customer to the ATM which then initiates the cash-out request. Both flows in the diagram result in a callback.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram    \n    participant Customer  \n    participant ATM\n    participant Mobile Money Provider    \n    Customer->>Mobile Money Provider: POST /accounts/{identifierType}/{identifier}/authorisationcodes\n    activate Customer\n    activate Mobile Money Provider \n    Note right of Mobile Money Provider: (1) The customer's channel (e.g. Mobile Money App)"),n("br"),e._v("submits the request to generate an authorisation code"),n("br"),e._v("to the MMP. The MMP will return the Request State"),n("br"),e._v("object to indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Customer: HTTP 202 (Request State Object)\n    Mobile Money Provider->>Customer: PUT {Callback URL} (Authorisation Codes Object)\n    Note right of Mobile Money Provider: (2) The MMP informs the customer's channel that"),n("br"),e._v("the request has been successfully completed by"),n("br"),e._v("returing the final representation of the"),n("br"),e._v("authorisation code.\n    Customer--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Customer\n    deactivate Mobile Money Provider    \n    Note right of Customer: (3) The customer enters the code into the ATM. \n    Customer->>ATM: Code Entry\n    activate Customer\n    activate ATM\n    activate Mobile Money Provider \n    ATM->>Mobile Money Provider: POST /transactions/type/withdrawal\n    Note right of Mobile Money Provider: (4) The ATM submits the cash-out request for processing"),n("br"),e._v("to the MMP. The request will contain the authorisation"),n("br"),e._v("code. The MMP will return the Request State object to"),n("br"),e._v("indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>ATM: HTTP 202 (Request State Object)\n    deactivate ATM\n    Mobile Money Provider->>ATM: PUT {Callback URL} (Transactions Object)\n    activate ATM\n    Note right of Mobile Money Provider: (5) The MMP informs the ATM that the cash-out"),n("br"),e._v("has been successfully completed by returning"),n("br"),e._v("the final representation of the transaction.\n    ATM--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Mobile Money Provider \n    ATM->>Customer: Notify\n    deactivate Customer\n    deactivate ATM\n")])]},proxy:!0}],null,!1,3998088095)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nAgent-initiated Customer Cash-in\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this diagram, the agent firstly checks that the depositing customer’s name is correct and will then submit the cash-in request. The final result is returned in the callback.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Agent  \n    participant Mobile Money Provider  \n    participant Customer\n    Agent->>Mobile Money Provider: GET /accounts/{identifierType}/{identifier}/accountname\n    activate Agent\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The agent retrieves the name of the depositing customer"),n("br"),e._v("and will check that the name is correct.\n    Mobile Money Provider--\x3e>Agent: HTTP 200 (Account Holder Name Object)\n    Agent->>Mobile Money Provider: POST /transactions/type/deposit\n    Note right of Mobile Money Provider: (2) The agent submits the cash-in request for processing to"),n("br"),e._v("the MMP. The MMP will return the Request State object to"),n("br"),e._v("indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Agent: HTTP 202 (Request State Object)\n    deactivate Agent   \n    Mobile Money Provider->>Agent: PUT {Callback URL} (Transactions Object)\n    activate Agent\n    Note right of Mobile Money Provider: (3) The MMP informs the agent that the cash-in"),n("br"),e._v("has been successfully completed by returning"),n("br"),e._v("the final representation of the transaction.\n    Agent--\x3e>Mobile Money Provider: HTTP 204  \n    deactivate Agent\n    activate Customer\n    Mobile Money Provider->>Customer: Notify\n    Note right of Customer: (4) The MMP notifies the customer that the"),n("br"),e._v("cash-in has successfully compeleted.\n    deactivate Mobile Money Provider\n    deactivate Customer\n")])]},proxy:!0}],null,!1,2022257185)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nCash-out Reversal\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In some failure scenarios, an agent may need to reverse a transaction. This diagram illustrates a reversal with the final result communicated via the callback.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Agent\n    participant Mobile Money Provider \n    Agent->>Mobile Money Provider: POST /transactions/{original transaction reference}/reversals\n    activate Agent\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The agent submits the reversal request for processing to"),n("br"),e._v("the MMP - passing the reference of the transaction that is"),n("br"),e._v("to be reversed. The MMP will return the Request State"),n("br"),e._v("object to indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Agent: HTTP 202 (Request State Object)\n    Mobile Money Provider->>Agent: PUT {Callback URL} (Reversal Object)\n    Note right of Mobile Money Provider: (2) The MMP informs the Agent that the reversal"),n("br"),e._v("has been successfully completed by returning"),n("br"),e._v("the final representation of the reversal"),n("br"),e._v("transaction.\n    Agent--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Agent\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,3146980999)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRegister a Customer Mobile Money Account\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this diagram, an agent registers a new mobile money customer on behalf of a mobile money provider.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Agent\n    participant Mobile Money Provider \n    Agent->>Mobile Money Provider: POST /accounts/individual\n    activate Agent\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The agent submits the account"),n("br"),e._v("registration request for processing"),n("br"),e._v("to the MMP. The MMP will return"),n("br"),e._v("the Request State object to"),n("br"),e._v("indicate that the request is"),n("br"),e._v("'pending'.\n    Mobile Money Provider--\x3e>Agent: HTTP 202 (Request State Object)\n    Mobile Money Provider->>Agent: PUT {Callback URL} (Account Object)\n    Note right of Mobile Money Provider: (2) The MMP informs the agent that"),n("br"),e._v("the reversal has been successfully"),n("br"),e._v("registered by returning the final"),n("br"),e._v("representation of the account.\n    Agent--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Agent\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,1512677179)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nVerify a Customer’s KYC\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("In this diagram, an agent verifies the physical KYC provided by the customer against details held by the mobile money provider and informs the provider that the KYC has been successfully verified.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Agent\n    participant Mobile Money Provider \n    Agent->>Mobile Money Provider: GET /accounts/{identifierType}/{identifier}\n    activate Agent\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The agent retrieves account"),n("br"),e._v("information from the MMP which"),n("br"),e._v("includes the customer's KYC"),n("br"),e._v("details.\n    Mobile Money Provider--\x3e>Agent: HTTP 200 (Account Object)\n    Agent->>Mobile Money Provider: PATCH /accounts/{identifierType}/{identifier}/identities/{identityId}\n    Note right of Mobile Money Provider: (2) The agent submits the KYC"),n("br"),e._v("verification request for processing"),n("br"),e._v("to the MMP. The MMP will return"),n("br"),e._v("the Request State object to"),n("br"),e._v("indicate that the request is"),n("br"),e._v("'pending'.\n    Mobile Money Provider--\x3e>Agent: HTTP 202 (Request State Object)\n    Mobile Money Provider->>Agent: PUT {Callback URL} (Success)\n    Note right of Mobile Money Provider: (3) The MMP informs the agent that"),n("br"),e._v("the verification request has been"),n("br"),e._v("successfully processed.\n    Agent--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Agent\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,39885153)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nObtain an Agent Balance\n")]},proxy:!0},{key:"body",fn:function(){return[n("mermaid",[e._v("\nsequenceDiagram\n    participant Agent\n    participant Mobile Money Provider \n    Agent->>Mobile Money Provider: GET /accounts/{identifierType}/{identifier}/balance\n    activate Agent\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) Obtain the balance of the"),n("br"),e._v("requested account.\n    Mobile Money Provider--\x3e>Agent: HTTP 200 (Balance Object)\n    deactivate Agent\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,3258070738)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRetrieve Transactions for an Agent\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This diagram illustrates use of a cursor mechanism to retrieve all transactions for an agent via multiple requests.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Agent\n    participant Mobile Money Provider \n    Agent->>Mobile Money Provider: GET /accounts/{identifierType}/{identifier}/transactions?offset=0&limit=20\n    activate Agent\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The agent requests up to 20"),n("br"),e._v("transactions for the account"),n("br"),e._v("from the MMP.\n    Mobile Money Provider--\x3e>Agent: HTTP 200 (Transactions Array) (X-Records-Available-Count=40)\n    Note right of Mobile Money Provider: (2) The MMP returns an array of"),n("br"),e._v("20 transactions and indicates"),n("br"),e._v("via a response header that"),n("br"),e._v("there are 40 records"),n("br"),e._v("available in total.    \n    Agent->>Mobile Money Provider: GET /accounts/{identifierType}/{identifier}/transactions?offset=20&limit=20\n    Note right of Mobile Money Provider: (3) The agent requests the"),n("br"),e._v("remaining transactions for"),n("br"),e._v("the account from the MMP.\n    Mobile Money Provider--\x3e>Agent: HTTP 200 (Transactions Array) (X-Records-Available-Count=40)\n    deactivate Agent\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,2435905135)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nCheck for Service Availability\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("The Heartbeat API is used for monitoring purposes and establishes whether the mobile money provider is in a state that enables a client to submit a request for processing.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Agent\n    participant Mobile Money Provider \n    Agent->>Mobile Money Provider: GET /heartbeat\n    activate Agent\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The agent requests the availability"),n("br"),e._v("of the service from the MMP.\n    Mobile Money Provider--\x3e>Agent: HTTP 200 (Heartbeat Object)\n    Note right of Mobile Money Provider: (2) The MMP returns the availability of"),n("br"),e._v("the service - available, unavailable"),n("br"),e._v("or degraded.\n    deactivate Agent\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,1588109284)}),e._v(" "),n("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRetrieve a Missing API Response\n")]},proxy:!0},{key:"body",fn:function(){return[n("p",[e._v("This API can be used by the agent to retrieve a link to the final representation of the resource for which it attempted to create. Use this API when a callback is not received from the mobile money provider.")]),e._v(" "),n("mermaid",[e._v("\nsequenceDiagram\n    participant Agent\n    participant Mobile Money Provider \n    Agent->>Mobile Money Provider: GET /responses{clientCorrelationId}\n    activate Agent\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) Using the agent's"),n("br"),e._v("clientCorrelationId, a request for the"),n("br"),e._v("missing API response is sent.\n    Mobile Money Provider--\x3e>Agent: HTTP 200 (Responses Object) \n    Note right of Mobile Money Provider: (2) A Responses object is returned"),n("br"),e._v("containing a link to the missing"),n("br"),e._v("resource.    \n    Agent->>Mobile Money Provider: GET /{link}\n    Note right of Mobile Money Provider: (3) The Agent uses the link to obtain"),n("br"),e._v("a representation of the missing"),n("br"),e._v("resource.\n    Mobile Money Provider--\x3e>Agent: HTTP 200 (Requested Object)\n    deactivate Agent\n    deactivate Mobile Money Provider\n")])]},proxy:!0}],null,!1,761184561)})],1)],e._v(" "),n("router-link",{key:"9",staticClass:"btn btn--transparent btn--tab-link",attrs:{to:"/use-cases/agent-services/"}},[e._v("Start developing")])],2):e._e()],1)])])],e._v(" "),[n("section",{staticClass:"get-started-section section--p-gap"},[n("div",{staticClass:"container container--narrow"},[n("div",{staticClass:"section-intro section-intro--narrow text-center"},[n("h2",{attrs:{id:"ready-to-explore"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ready-to-explore"}},[e._v("#")]),e._v(" Ready to explore?")]),e._v(" "),n("div",{staticClass:"section-description"},[e._v("Find our latest API documentation.\n        ")])]),e._v(" "),n("div",{staticClass:"buttons-holder content-center get-started__btn-holder"},[e.borderedLink?n("router-link",{staticClass:"btn",attrs:{to:e.borderedLink.link}},[e._v(" "+e._s(e.borderedLink.text)+"\n        ")]):e._e(),e._v(" "),e.accentLink?n("router-link",{staticClass:"btn btn--accent",attrs:{to:e.accentLink.link}},[e._v(" "+e._s(e.accentLink.text)+"\n        ")]):e._e()],1)])])]],2)}),[],!1,null,null,null);t.default=l.exports}}]);