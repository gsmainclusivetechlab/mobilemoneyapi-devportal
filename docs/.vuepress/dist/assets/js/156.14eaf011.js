(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{623:function(e,r,t){"use strict";t.r(r);var i=t(17),o=Object(i.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[[t("h2",{attrs:{id:"introduction"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),t("p",[e._v("The Recurring Payments Mobile Money APIs allow service providers to setup electronic payment mandates for mobile money customers and initiate payments against payment mandates.")]),e._v(" "),t("p",[e._v("For further reading, please refer to the following:")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("Getting Started")]),e._v(". Specifies the design principles, behaviours, and error handling of the Mobile Money API.")]),e._v(" "),t("li",[t("strong",[e._v("API Service Definition")]),e._v(". Documents all Mobile Money API endpoints, fields, objects, and enumerations.")])]),e._v(" "),t("p",[e._v("All documentation can be found on the "),t("RouterLink",{attrs:{to:"/api-versions-1.2/"}},[e._v("GSMA Mobile Money API Developer Portal")]),e._v(".")],1),e._v(" "),t("h2",{attrs:{id:"intended-audience"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#intended-audience"}},[e._v("#")]),e._v(" Intended Audience")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"left"}},[t("strong",[e._v("Audience")])]),e._v(" "),t("th",{staticStyle:{"text-align":"left"}},[t("strong",[e._v("Usage")])]),e._v(" "),t("th",{staticStyle:{"text-align":"left"}},[t("strong",[e._v("Role")])])])]),e._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("strong",[e._v("Mobile Money Providers")])]),e._v(" "),t("td",{staticStyle:{"text-align":"left"}},[e._v("- To understand how to implement the Mobile Money API to receive recurring payment requests from service providers."),t("br"),e._v("- To understand how to implement the Mobile Money API to create recurring payment requests initiated by customers using a channel (e.g. app) provided by the mobile money provider.")]),e._v(" "),t("td",{staticStyle:{"text-align":"left"}},[e._v("API Provider")])]),e._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("strong",[e._v("Service Providers")])]),e._v(" "),t("td",{staticStyle:{"text-align":"left"}},[e._v("To understand how to implement the Mobile Money API to request recurring payment mandates against mobile money accounts.")]),e._v(" "),t("td",{staticStyle:{"text-align":"left"}},[e._v("API Consumer")])])])]),e._v(" "),t("h3",{staticClass:"h3"},[e._v("Use case scenarios")]),e._v(" "),t("accordion",[t("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nSetup a Recurring Payment\n")]},proxy:!0},{key:"body",fn:function(){return[t("p",[e._v("This diagram illustrates the setting-up of a recurring payment via a debit mandate. The service provider initiates the request which is authorised by the account holding customer. In this diagram, an asynchronous flow is used with a final callback.")]),e._v(" "),t("mermaid",[e._v("\nsequenceDiagram\n    participant Service Provider\n    participant Mobile Money Provider \n    participant Account Holder  \n    Service Provider->>Mobile Money Provider: POST /accounts/{identifierType}/{identifier}/debitmandates\n    activate Service Provider\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The service provider submits the debit mandate request for"),t("br"),e._v("processing to the MMP. The MMP will return the Request"),t("br"),e._v("State object to indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Service Provider: HTTP 202 (Request State Object)\n    Mobile Money Provider->>Account Holder: Obtain Customer Authorisation\n    activate Account Holder\n    Note right of Account Holder: (2) The customer is requested to the MMP to"),t("br"),e._v("authorise the mandate. This can be"),t("br"),e._v("achieved through a number of means"),t("br"),e._v("including USSD Push and One Time Code."),t("br"),e._v("OpenId can also be used to secure"),t("br"),e._v("customer authorisation.\n    Account Holder--\x3e>Mobile Money Provider: (Authorised)   \n    deactivate Account Holder\n    Mobile Money Provider->>Service Provider: PUT {Callback URL} (Debit Mandates Object)\n    Note right of Mobile Money Provider: (3) The MMP informs the service provider that the"),t("br"),e._v("debit mandate has been successfully created"),t("br"),e._v("by returning the final representation of the"),t("br"),e._v("debit mandate.\n    Service Provider--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Service Provider\n    deactivate Mobile Money Provider\n")])]},proxy:!0}])}),e._v(" "),t("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nSetup a Recurring Payment Failure\n")]},proxy:!0},{key:"body",fn:function(){return[t("p",[e._v("In this diagram, the account holder declines to provide authorisation to setup the recurring payment. The service provider receives a callback containing an error object detailing the reason for failure.")]),e._v(" "),t("mermaid",[e._v("\nsequenceDiagram\n    participant Service Provider\n    participant Mobile Money Provider \n    participant Account Holder  \n    Service Provider->>Mobile Money Provider: POST /accounts/{identifierType}/{identifier}/debitmandates\n    activate Service Provider\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The service provider submits the payment request for"),t("br"),e._v("processing to the MMP. The MMP will return the Request"),t("br"),e._v("State object to indicate that the request is 'pending'.\n    Mobile Money Provider--\x3e>Service Provider: HTTP 202 (Request State Object)\n    Mobile Money Provider->>Account Holder: Obtain Customer Authorisation\n    activate Account Holder\n    Note right of Account Holder: (2) The customer declines the request by the"),t("br"),e._v("MMP to accept the debit mandate.\n    Account Holder--\x3e>Mobile Money Provider: (Declined)   \n    deactivate Account Holder\n    Mobile Money Provider->>Service Provider: PUT {Callback URL} (Error Object)\n    Note right of Mobile Money Provider: (3) The MMP informs the service provider that the"),t("br"),e._v("debit mandate has been declined by returning"),t("br"),e._v("an error object.\n    Service Provider--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Service Provider\n    deactivate Mobile Money Provider\n")])]},proxy:!0}])}),e._v(" "),t("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nTake a Recurring Payment\n")]},proxy:!0},{key:"body",fn:function(){return[t("p",[e._v("In this diagram, the service provider initiates a payment request to the FSP to debit the account-holders account as per the debit mandate.")]),e._v(" "),t("mermaid",[e._v("\nsequenceDiagram\n    participant Service Provider\n    participant Mobile Money Provider \n    Service Provider->>Mobile Money Provider: POST /transactions/type/merchantpay\n    activate Service Provider\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The service provider submits the payment request for"),t("br"),e._v("processing to the MMP, ensuring that a mandate reference"),t("br"),e._v("is provided for the payment. The MMP will return the"),t("br"),e._v("Request State object to indicate that the request is"),t("br"),e._v("'pending'.\n    Mobile Money Provider--\x3e>Service Provider: HTTP 202 (Request State Object)    \n    deactivate Service Provider\n    Mobile Money Provider->>Service Provider: PUT {Callback URL} (Transactions Object)\n    activate Service Provider\n    Note right of Mobile Money Provider: (2) The MMP informs the service provider that the"),t("br"),e._v("transaction has been successfully completed"),t("br"),e._v("by returning the final representation of the"),t("br"),e._v("transaction.\n    Service Provider--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Service Provider\n    deactivate Mobile Money Provider\n")])]},proxy:!0}])}),e._v(" "),t("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nTake a Recurring Payment Failure\n")]},proxy:!0},{key:"body",fn:function(){return[t("p",[e._v("In this diagram, the service provider initiates a payment request to the FSP to debit the account-holders account as per the debit mandate. The FSP is unable to process the payment and returns a callback containing the error object.")]),e._v(" "),t("mermaid",[e._v("\nsequenceDiagram\n    participant Service Provider\n    participant Mobile Money Provider \n    Service Provider->>Mobile Money Provider: POST /transactions/type/merchantpay\n    activate Service Provider\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The service provider submits the payment request for"),t("br"),e._v("processing to the MMP, ensuring that a mandate reference"),t("br"),e._v("is provided for the payment. The MMP will return the"),t("br"),e._v("Request State object to indicate that the request is"),t("br"),e._v("'pending'.\n    Mobile Money Provider--\x3e>Service Provider: HTTP 202 (Request State Object)  \n    deactivate Service Provider\n    Mobile Money Provider->>Service Provider: PUT {Callback URL} (Error Object)\n    activate Service Provider\n    Note right of Mobile Money Provider: (2) The MMP informs the service provider that the"),t("br"),e._v("payment has failed and returns the error"),t("br"),e._v("object detailing the reason for failure.\n    Service Provider--\x3e>Mobile Money Provider: HTTP 204\n    deactivate Service Provider\n    deactivate Mobile Money Provider\n")])]},proxy:!0}])}),e._v(" "),t("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nTake a Recurring Payment using the Polling Method\n")]},proxy:!0},{key:"body",fn:function(){return[t("p",[e._v("In this example, an asynchronous payment flow is used with the polling method. The client polls against the request state object to determine the outcome of the payment request.")]),e._v(" "),t("mermaid",[e._v("\nsequenceDiagram\n    participant Service Provider\n    participant Mobile Money Provider \n    Service Provider->>Mobile Money Provider: POST /transactions/type/merchantpay\n    activate Service Provider\n    activate Mobile Money Provider\n    Note right of Mobile Money Provider: (1) The service provider submits the payment request for"),t("br"),e._v("processing to the MMP, ensuring that a mandate reference"),t("br"),e._v("is provided for the payment. The MMP will return the"),t("br"),e._v("Request State object to indicate that the request is"),t("br"),e._v("'pending'.\n    Mobile Money Provider--\x3e>Service Provider: HTTP 202 (Request State Object)    \n    deactivate Service Provider\n    loop\n        activate Service Provider\n        Service Provider->>Mobile Money Provider: GET /requeststates/{serverCorrelationId}\n        Note right of Mobile Money Provider: (2) The service provider polls the MMP for the Request State"),t("br"),e._v("until the transaction is authorised or declied or until the"),t("br"),e._v("polling limit is reached.\n        Mobile Money Provider--\x3e>Service Provider: HTTP 200 (Request State Object)\n    end   \n    deactivate Mobile Money Provider\n    opt\n        activate Mobile Money Provider\n        Service Provider->>Mobile Money Provider: GET /transactions/transactionReference\n        Note right of Mobile Money Provider: (3) The service provider can use the objectReference returned in"),t("br"),e._v("the Request State to retrieve a representation of the"),t("br"),e._v("completed payment.\n        Mobile Money Provider--\x3e>Service Provider: HTTP 200 (Transactions Object)\n    end\n    deactivate Service Provider\n    deactivate Mobile Money Provider\n")])]},proxy:!0}])}),e._v(" "),t("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRecurring Payment Refund\n")]},proxy:!0},{key:"body",fn:function(){return[t("p",[e._v("Service Providers can issue a refund to payers. In this diagram, the refund is not linked to the original transaction and hence the /transactions API is used. Where a refund needs to be linked to the original transaction, the /reversals API must be used to perform the refund.")]),e._v(" "),t("mermaid",[e._v("\n  sequenceDiagram\n      participant Service Provider\n      participant Mobile Money Provider \n      Service Provider->>Mobile Money Provider: POST /transactions/type/adjustment\n      activate Service Provider\n      activate Mobile Money Provider\n      Note right of Mobile Money Provider: (1) The service provider submits the refund request for"),t("br"),e._v("processing to the MMP. The MMP will return the Request"),t("br"),e._v("State object to indicate that the request is 'pending'.\n      Mobile Money Provider--\x3e>Service Provider: HTTP 202 (Request State Object)\n      Mobile Money Provider->>Service Provider: PUT {Callback URL} (Transactions Object)\n      Note right of Mobile Money Provider: (2) The MMP informs the service provider that the"),t("br"),e._v("refund has been successfully completed by"),t("br"),e._v("returning the final representation of the refund.\n      Service Provider--\x3e>Mobile Money Provider: HTTP 204\n      deactivate Service Provider\n      deactivate Mobile Money Provider\n")])]},proxy:!0}])}),e._v(" "),t("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRecurring Payment Reversal\n")]},proxy:!0},{key:"body",fn:function(){return[t("p",[e._v("In some failure scenarios, a service provider may need to reverse a transaction. This diagram illustrates a reversal with the final result communicated via the callback.")]),e._v(" "),t("mermaid",[e._v("\n  sequenceDiagram\n      participant Service Provider\n      participant Mobile Money Provider \n      Service Provider->>Mobile Money Provider: POST /transactions/{original transaction reference}/reversals\n      activate Service Provider\n      activate Mobile Money Provider\n      Note right of Mobile Money Provider: (1) The service provider submits the reversal request for"),t("br"),e._v("processing to the MMP - passing the reference of the"),t("br"),e._v("transaction that is to be reversed. The MMP will return the"),t("br"),e._v("Request State object to indicate that the request is"),t("br"),e._v("'pending'.\n      Mobile Money Provider--\x3e>Service Provider: HTTP 202 (Request State Object)\n      Mobile Money Provider->>Service Provider: PUT {Callback URL} (Reversal Object)\n      Note right of Mobile Money Provider: (2) The MMP informs the service provider that the"),t("br"),e._v("reversal has been successfully completed by"),t("br"),e._v("returning the final representation of the"),t("br"),e._v("reversal transaction.\n      Service Provider--\x3e>Mobile Money Provider: HTTP 204\n      deactivate Service Provider\n      deactivate Mobile Money Provider\n")])]},proxy:!0}])}),e._v(" "),t("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nPayer sets up a Recurring Payment using MMP Channel\n")]},proxy:!0},{key:"body",fn:function(){return[t("p",[e._v("This diagram illustrates how the MM API can be used by a mobile money provider to allow a payer to setup a recurring payment using a channel provided by the provider, for example, a mobile money app.")]),e._v(" "),t("mermaid",[e._v("\n  sequenceDiagram\n      participant Mobile Money Provider Channel\n      participant Mobile Money Provider \n      Mobile Money Provider Channel->>Mobile Money Provider: POST /accounts/{identifierType}/{identifier}/debitmandates\n      activate Mobile Money Provider Channel\n      activate Mobile Money Provider\n      Note right of Mobile Money Provider: (1) The MMP Channel submits the debit mandate request for"),t("br"),e._v("processing to the MMP. The MMP will return the Request"),t("br"),e._v("State object to indicate that the request is 'pending'.\n      Mobile Money Provider--\x3e>Mobile Money Provider Channel: HTTP 202 (Request State Object)\n      Mobile Money Provider->>Mobile Money Provider Channel: PUT {Callback URL} (Debit Mandates Object)\n      Note right of Mobile Money Provider: (2) The MMP informs the MMP Channel that the"),t("br"),e._v("debit mandate has been successfully created"),t("br"),e._v("by returning the final representation of the"),t("br"),e._v("debit mandate.\n      Mobile Money Provider Channel--\x3e>Mobile Money Provider: HTTP 204\n      deactivate Mobile Money Provider Channel\n      deactivate Mobile Money Provider\n")])]},proxy:!0}])}),e._v(" "),t("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nObtain a Service Provider Balance\n")]},proxy:!0},{key:"body",fn:function(){return[t("mermaid",[e._v("\n  sequenceDiagram\n      participant Service Provider\n      participant Mobile Money Provider    \n      Service Provider->>Mobile Money Provider: GET /accounts/{identifierType}/{identifier}/balance\n      activate Service Provider\n      activate Mobile Money Provider\n      Note right of Mobile Money Provider: (1) Obtain the balance of the"),t("br"),e._v("requested account.\n      Mobile Money Provider--\x3e>Service Provider: HTTP 200 (Balance Object)    \n      deactivate Service Provider\n      deactivate Mobile Money Provider\n")])]},proxy:!0}])}),e._v(" "),t("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRetrieve Payments for a Service Provider\n")]},proxy:!0},{key:"body",fn:function(){return[t("p",[e._v("This diagram illustrates use of a cursor mechanism to retrieve all payments for a service provider via multiple requests.")]),e._v(" "),t("mermaid",[e._v("\n  sequenceDiagram\n      participant Service Provider\n      participant Mobile Money Provider   \n      Service Provider->>Mobile Money Provider: GET /accounts/{identifierType}/{identifier}/transactions?offset=0&limit=20\n      activate Service Provider\n      activate Mobile Money Provider\n      Note right of Mobile Money Provider: (1) The service provider requests"),t("br"),e._v("up to 20 transactions for the"),t("br"),e._v("account from the MMP.\n      Mobile Money Provider--\x3e>Service Provider: HTTP 200 (Transactions Array) (X-Records-Available-Count=40)\n      Note right of Mobile Money Provider: (2) The MMP returns an array of"),t("br"),e._v("20 transactions and indicates"),t("br"),e._v("via a response header that"),t("br"),e._v("there are 40 records"),t("br"),e._v("available in total.      \n      Service Provider->>Mobile Money Provider: GET /accounts/{identifierType}/{identifier}/transactions?offset=20&limit=20\n      Note right of Mobile Money Provider: (3) The service provider requests"),t("br"),e._v("the remaining transactions for"),t("br"),e._v("the account from the MMP.\n      Mobile Money Provider--\x3e>Service Provider: HTTP 200 (Transactions Array) (X-Records-Available-Count=40)\n      deactivate Service Provider\n      deactivate Mobile Money Provider\n")])]},proxy:!0}])}),e._v(" "),t("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nCheck for Service Availability\n")]},proxy:!0},{key:"body",fn:function(){return[t("p",[e._v("The Heartbeat API is used for monitoring purposes and establishes whether the FSP is in a state that enables a client to submit a request for processing.")]),e._v(" "),t("mermaid",[e._v("\n  sequenceDiagram\n      participant Service Provider\n      participant Mobile Money Provider    \n      Service Provider->>Mobile Money Provider: GET /heartbeat\n      activate Service Provider\n      activate Mobile Money Provider\n      Note right of Mobile Money Provider: (1) The service provider requests the"),t("br"),e._v("availability of the service from the MMP.\n      Mobile Money Provider--\x3e>Service Provider: HTTP 200 (Heartbeat Object)\n      Note right of Mobile Money Provider: (2) The MMP returns the availability of"),t("br"),e._v("the service - available, unavailable"),t("br"),e._v("or degraded.\n      deactivate Service Provider\n      deactivate Mobile Money Provider\n")])]},proxy:!0}])}),e._v(" "),t("accordion-item",{attrs:{businessPage:""},scopedSlots:e._u([{key:"header",fn:function(){return[e._v("\nRetrieve a Missing API Response\n")]},proxy:!0},{key:"body",fn:function(){return[t("p",[e._v("This API can be used by the service provider to retrieve a link to the final representation of the resource for which it attempted to create. Use this API when a callback is not received from the FSP.")]),e._v(" "),t("mermaid",[e._v("\n  sequenceDiagram\n      participant Service Provider\n      participant Mobile Money Provider\n      Service Provider->>Mobile Money Provider: GET /responses{clientCorrelationId}\n      activate Service Provider\n      activate Mobile Money Provider\n      Note right of Mobile Money Provider: (1) Using the service provider's"),t("br"),e._v("clientCorrelationId, a request for the"),t("br"),e._v("missing API response is sent.\n      Mobile Money Provider--\x3e>Service Provider: HTTP 200 (Responses Object)\n      Note right of Mobile Money Provider: (2) A Responses object is returned"),t("br"),e._v("containing a link to the missing"),t("br"),e._v("resource.     \n      Service Provider->>Mobile Money Provider: GET /{link}\n      Note right of Mobile Money Provider: (3) The service provider uses the link to"),t("br"),e._v("obtain a representation of the missing"),t("br"),e._v("resource.\n      Mobile Money Provider--\x3e>Service Provider: HTTP 200 (Requested Object)\n      deactivate Mobile Money Provider\n      deactivate Service Provider\n")])]},proxy:!0}])})],1)]],2)}),[],!1,null,null,null);r.default=o.exports}}]);